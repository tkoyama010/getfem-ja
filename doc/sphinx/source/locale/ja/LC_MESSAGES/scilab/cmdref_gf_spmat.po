# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2017 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-06-22 15:02+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

# db3ef2daf1d644b1ae6293e17569f6fc
#: ../source/scilab/cmdref_gf_spmat.rst:8
msgid "gf_spmat"
msgstr ""

# 31b892392eb64d3694cf314534af230d
#: ../source/scilab/cmdref_gf_spmat.rst:10
msgid "**Synopsis**"
msgstr ""

# c2fcfec2f28a432994c4c9646fc04a62
#: ../source/scilab/cmdref_gf_spmat.rst:22
msgid "**Description :**"
msgstr ""

# 3324c2f192b54c2eb5ac2866a3395f9b
#: ../source/scilab/cmdref_gf_spmat.rst:25
msgid "General constructor for spmat objects."
msgstr ""

# 3ae83ba247e44cbc828292772d608a10
#: ../source/scilab/cmdref_gf_spmat.rst:27
msgid ""
"Create a new sparse matrix in getfem++ format. These sparse matrix can be"
" stored as CSC (compressed column sparse), which is the format used by "
"Matlab, or they can be stored as WSC (internal format to getfem). The CSC"
" matrices are not writable (it would be very inefficient), but they are "
"optimized for multiplication with vectors, and memory usage. The WSC are "
"writable, they are very fast with respect to random read/write operation."
" However their memory overhead is higher than CSC matrices, and they are "
"a little bit slower for matrix-vector multiplications."
msgstr ""

# da783677c3774a40b516f9352e0e97dc
#: ../source/scilab/cmdref_gf_spmat.rst:36
msgid ""
"By default, all newly created matrices are build as WSC matrices. This "
"can be changed later with <literal></literal>gf_spmat_set(spmat S, "
"'to_csc',...)<literal></literal>, or may be changed automatically by "
"getfem (for example <literal></literal>gf_linsolve()<literal></literal> "
"converts the matrices to CSC)."
msgstr ""

# 103835a51ed044e28cecce7b710d8f97
#: ../source/scilab/cmdref_gf_spmat.rst:41
msgid "The matrices may store REAL or COMPLEX values."
msgstr ""

# c8ab4e79348e414591c41c59f431dfd9
#: ../source/scilab/cmdref_gf_spmat.rst:44
msgid "**Command list :**"
msgstr ""

# 51532728f2f146bc89d185fb46d45947
#: ../source/scilab/cmdref_gf_spmat.rst:48
msgid "``SM = gf_spmat('empty', int m [, int n])``"
msgstr ""

# de5188b16f6844b4be8850c1f3eb620f
#: ../source/scilab/cmdref_gf_spmat.rst:50
msgid ""
"Create a new empty (i.e. full of zeros) sparse matrix, of dimensions "
"<literal>m x n</literal>. If <literal>n</literal> is omitted, the matrix "
"dimension is <literal>m x m</literal>."
msgstr ""

# 231b4537f0de43aaab90f8c2707817b1
#: ../source/scilab/cmdref_gf_spmat.rst:54
msgid "``SM = gf_spmat('copy', mat K [,  I [,  J]])``"
msgstr ""

# 980f40e3eeb44b399596e47ca1566b90
#: ../source/scilab/cmdref_gf_spmat.rst:56
msgid ""
"Duplicate a matrix <literal>K</literal> (which might be a spmat). If "
"index <literal>I</literal> and/or <literal>J</literal> are given, the "
"matrix will be a submatrix of <literal>K</literal>. For example::"
msgstr ""

# fce55957585f4c60aaab2f59f424e061
#: ../source/scilab/cmdref_gf_spmat.rst:63
msgid "will return a 40x5 matrix."
msgstr ""

# 15cdbef164a94a95ac3a189321c0455a
#: ../source/scilab/cmdref_gf_spmat.rst:66
msgid "``SM = gf_spmat('identity', int n)``"
msgstr ""

# 312d753887374c77b0acf1b16b63cf2d
#: ../source/scilab/cmdref_gf_spmat.rst:68
msgid "Create a <literal>n x n</literal> identity matrix."
msgstr ""

# ed351363a3244ef6bba80388965c6a7c
#: ../source/scilab/cmdref_gf_spmat.rst:71
msgid "``SM = gf_spmat('mult', spmat A, spmat B)``"
msgstr ""

# 8ddc2cecd45d46d5bb05a288b488a5fc
#: ../source/scilab/cmdref_gf_spmat.rst:73
msgid ""
"Create a sparse matrix as the product of the sparse matrices "
"<literal>A</literal> and <literal>B</literal>. It requires that "
"<literal>A</literal> and <literal>B</literal> be both real or both "
"complex, you may have to use <literal></literal>gf_spmat_set(spmat S, "
"'to_complex')<literal></literal>"
msgstr ""

# 133947b9e94d43e885156ea93f58c34f
#: ../source/scilab/cmdref_gf_spmat.rst:78
msgid "``SM = gf_spmat('add', spmat A, spmat B)``"
msgstr ""

# e7912a577f124b5081c6b8e09eeb634b
#: ../source/scilab/cmdref_gf_spmat.rst:80
msgid ""
"Create a sparse matrix as the sum of the sparse matrices "
"<literal>A</literal> and <literal>B</literal>. Adding a real matrix with "
"a complex matrix is possible."
msgstr ""

# 77e28aa277374982be58837c2c2800e0
#: ../source/scilab/cmdref_gf_spmat.rst:84
msgid "``SM = gf_spmat('diag', mat D [, ivec E [, int n [,int m]]])``"
msgstr ""

# 6b1238a0012d467fa40dd67ca497cc72
#: ../source/scilab/cmdref_gf_spmat.rst:86
msgid ""
"Create a diagonal matrix. If <literal>E</literal> is given, "
"<literal>D</literal> might be a matrix and each column of "
"<literal>E</literal> will contain the sub-diagonal number that will be "
"filled with the corresponding column of <literal>D</literal>."
msgstr ""

# ce6ac41ea87f4b52a98323fc6721630f
#: ../source/scilab/cmdref_gf_spmat.rst:91
msgid ""
"``SM = gf_spmat('load','hb'|'harwell-boeing'|'mm'|'matrix-market', string"
" filename)``"
msgstr ""

# aad68b2b22804d0fb3b50da4c2802d37
#: ../source/scilab/cmdref_gf_spmat.rst:93
msgid "Read a sparse matrix from an Harwell-Boeing or a Matrix-Market file ."
msgstr ""

