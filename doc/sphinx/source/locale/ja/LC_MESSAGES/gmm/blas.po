# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2017 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-06-22 15:02+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

# f6e85f5d4ea7476983af5b1e22fd47b0
#: ../source/gmm/blas.rst:10
msgid "Basic linear algebra operations"
msgstr ""

# f7fb665bb0b0457a9ec3f3af53171990
#: ../source/gmm/blas.rst:13
msgid ""
"The same choice has been made as in MTL to provide basic operations as "
"functions not as operators. The advantages are that it is clearer to see "
"where are the linear algebra operations in the program and the "
"programming of optimized basic linear operations is greatly simplified."
msgstr ""

# 8cb062ad21fd49968e0dc115c13dac31
#: ../source/gmm/blas.rst:17
msgid "scale and scaled"
msgstr ""

# e4034e88b5884cc59bdc49ebc8a1ccda
#: ../source/gmm/blas.rst:19
msgid ""
"``gmm::scale`` is used to multiply a vector or a matrix with a scalar "
"factor::"
msgstr ""

# 0fc398161a55474389eb228faf2088a5
#: ../source/gmm/blas.rst:23
msgid ""
"If one not needs to multiply the vector but wants to use the multiplied "
"vector in an expression  ``gmm::scaled`` gives a reference to a "
"multiplied vector. This is only a reference, no operation is made until "
"this reference is used somewhere. For instance::"
msgstr ""

# dd1069d336ac44b5a9be97a0b530e29d
#: ../source/gmm/blas.rst:27
msgid ""
"print to the standard output the vector ``V`` multiplied by ``10.0`` "
"without changing ``V``."
msgstr ""

# b699fffca1f2499d94b4d20d84428c3e
#: ../source/gmm/blas.rst:30
msgid "transposition"
msgstr ""

# 42b9a9ac805c43f3a3bccd0e73cd467b
#: ../source/gmm/blas.rst:32
msgid ""
"``gmm::transposed(M)`` gives a possibily modifiable reference on the "
"transposed matrix of ``M``."
msgstr ""

# 68b80438e3b1487280d9ad5f19631bc6
#: ../source/gmm/blas.rst:35
msgid "imaginary and real part"
msgstr ""

# 691497373ff84d258b17d75e315a763d
#: ../source/gmm/blas.rst:37
msgid ""
"For a complex matrix ``M`` or a complex vector ``V``, "
"``gmm::real_part(M)``, ``gmm::real_part(V)``, ``gmm::imag_part(M)`` or "
"``gmm::imag_part(V)`` give a possibily modifiable reference on the real "
"or imaginary part of the matrix or vector (for instance "
"``gmm::clear(gmm::imag_part(M))`` will set to zero the imaginary part of "
"a matrix ``M``). These functions cannot be applied to real matrices or "
"vectors."
msgstr ""

# b957de5e10e946ddafa5242b744690c7
#: ../source/gmm/blas.rst:41
msgid "conjugate"
msgstr ""

# 1bb3943c3bc24eadbf65a85c822b58ed
#: ../source/gmm/blas.rst:43
msgid ""
"For a matrix ``M`` or a vector ``V``, ``gmm::conjugated(M)`` and "
"``gmm::conjugated(V)`` give a constant reference on the conjugated vector"
" or matrix. Of course, for a real vectors this has no effect (and no cost"
" at all). Note : ``gmm::conjugated(M)`` transposes the matrix ``M`` so "
"that this is the hermitian conjugate of ``M``. If you need only the "
"conjugate of each component you have to use both transposition and "
"conjugate with ``gmm::conjugated(gmm::transposed(M))`` or equivalently  "
"``gmm::transposed(gmm::conjugated(M))``."
msgstr ""

# c98a2c2aa2144ee18c379830b68243d0
#: ../source/gmm/blas.rst:48
msgid "add"
msgstr ""

# 1a0d66aab701406ba0af5b6be8f2cd87
#: ../source/gmm/blas.rst:50
msgid ""
"addition of vectors or matrices. It is alway possible to mix different "
"type of vector or matrices in the operations. The following operations "
"are valid::"
msgstr ""

# 86f55887b8204a81be32e90a9e60f8c9
#: ../source/gmm/blas.rst:69
msgid ""
"IMPORTANT : all the vectors have to have the same size, no resize will be"
" automatically done. If a vector has not the good size, an error will be "
"thrown."
msgstr ""

# 1dc8b952a56c4865b685f408bf414a4c
#: ../source/gmm/blas.rst:72
msgid "mult"
msgstr ""

# 9c3f7c525f0146b78b2bc7e482526244
#: ../source/gmm/blas.rst:74
msgid ""
"Matrix-vector or matrix-matrix multiplication. Again, all the matrices "
"and vectors have to have the good size. The following operations are "
"valid::"
msgstr ""

# bc7b20382c344d7ea4e088c869d1e43d
#: ../source/gmm/blas.rst:103
msgid "norms"
msgstr ""

# 7e9d648a26054571926a6588626bbfc3
#: ../source/gmm/blas.rst:119
msgid "trace"
msgstr ""

# 45e4489f7f2b4218812c85e6bf480f6b
#: ../source/gmm/blas.rst:121
msgid "``gmm::mat_trace(M)`` gives the trace of matrix ``M``."
msgstr ""

# c6908f8b098a415d92194f6f29d28b1f
#: ../source/gmm/blas.rst:124
msgid "scalar product"
msgstr ""

# dc14de7ac9b6422ca8f003a6a4689100
#: ../source/gmm/blas.rst:127
msgid ""
"for vectors only, ``gmm::vect_sp(V1, V2)`` gives the scalar product "
"between ``V1`` and ``V2``. For complex vectors, this do not conjugate "
"``V1``, you can use ``gmm::vect_sp(V1, gmm::conjugated(V2))`` or "
"``gmm::vect_hp(V1, V2)`` which is equivalent."
msgstr ""

