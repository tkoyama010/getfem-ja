# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2017 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-06-22 15:02+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

# 3ab7501d21514e3cb0d64b317e86d1a5
#: ../source/userdoc/model_contact_friction.rst:14
msgid "Small sliding contact with friction bricks"
msgstr ""

# 7f651579b8e34c6f9c02849bad855b18
#: ../source/userdoc/model_contact_friction.rst:16
msgid ""
"The aim of these bricks is to take into account a contact condition with "
"or without friction of an elastic structure on a rigid foundation or "
"between two elastic structures. These bricks are restricted to small "
"deformation approximation of contact (this may include large deformations"
" on a flat obstacle)."
msgstr ""

# c7a4faf37cee4e54a12014c084159845
#: ../source/userdoc/model_contact_friction.rst:19
msgid "Approximation of contact"
msgstr ""

# a516998039594bde80d9312e5982aab3
#: ../source/userdoc/model_contact_friction.rst:21
msgid ""
"For small deformation problems submitted a simple (compared to large "
"deformation !) expression of the contact with friction condition is "
"usually used where the tangential displacement do not influence the "
"normal one. This is an approximation in the sense that if an obstacle is "
"not perfectly flat, the tangential displacement of course influence the "
"point where the contact holds. This will not be the case in small "
"deformation where the contact condition can be considered to be described"
" on the reference configuration."
msgstr ""

# b20de49d2d854f999cff7f807f242bec
#: ../source/userdoc/model_contact_friction.rst:24
msgid ""
"There are mainly two largely used discretizations of the contact with "
"friction condition in this framework: a direct nodal contact condition "
"(usually prescribed on the displacement finite element nodes) or a weak "
"nodal contact condition (usually prescribed on the multiplier finite "
"element nodes). The two discretization leads to similar system. However, "
"the interpretation of quantities is not the same. A third approach is "
"developed on Getfem contact bricks: a weak integral contact condition. It"
" needs the computation of a non-linear integral on the contact boundary "
"at each iteration but the numerical resolution is potentially more "
"scalable because it derives directly from continuous principles."
msgstr ""

# 704e519a32e9412b973656ced0518a91
#: ../source/userdoc/model_contact_friction.rst:26
msgid ""
"More details can be found for instance in [KI-OD1988]_, [KH-PO-RE2006]_ "
"and [LA-RE2006]_."
msgstr ""

# 66976396773b4865b74dc818f67290b0
#: ../source/userdoc/model_contact_friction.rst:29
msgid "Direct nodal contact condition"
msgstr ""

# c906a18f6dd34bbbad1b16c45640a89f
#: ../source/userdoc/model_contact_friction.rst:31
msgid ""
"A nodal contact condition consists in a certain number of contact nodes "
":math:`a_i`, :math:`i=1..N_c` on which a contact with (or without) "
"friction condition is applied. The contact condition reads"
msgstr ""

# d249dae00eaf47f2a7bd487207e3f866
#: ../source/userdoc/model_contact_friction.rst:37
msgid ""
"where :math:`\\lambda_N^i` is the equivalent nodal contact force on "
":math:`a_i` and :math:`u_N(a_i)` is the normal relative displacement "
"between the elastic solid and an obstacle or between two elastic solids. "
"The term :math:`\\text{gap}_i` represents the normal gap between the two "
"solids in the reference configuration. The friction condition reads"
msgstr ""

# c8f378037b584ce7bdd75c807717cd13
#: ../source/userdoc/model_contact_friction.rst:45
msgid ""
"where :math:`\\dot{u}_T` is the relative slip velocity, :math:`{\\mathscr"
" F}` is the friction coefficient and :math:`\\lambda_T^i` the equivalent "
"nodal friction force on :math:`a_i`. The friction condition can be "
"summarized by the inclusion"
msgstr ""

# 2e54e9e44df84999adcef57393a2e47b
#: ../source/userdoc/model_contact_friction.rst:51
msgid ""
"where :math:`\\text{Dir}(\\dot{u}_T)` is the multivalued map being the "
"sub-differential of :math:`x \\mapsto \\|x_T\\|` (i.e. "
":math:`\\text{Dir}(x) = \\frac{x}{\\|x\\|}` when :math:`x \\ne 0` and "
":math:`\\text{Dir}(0)` the closed unit ball). For two dimensional cases, "
":math:`\\text{Dir}(\\dot{u}_T)` reduces to "
":math:`\\text{Sign}(\\dot{u}_T)` where :math:`\\text{Sign}` is the "
"multivalued sign map."
msgstr ""

# cb37b5c068ff4af0a58c141c9365d313
#: ../source/userdoc/model_contact_friction.rst:53
msgid ""
"A complete linearized elasticity problem with contact with friction reads"
" as"
msgstr ""

# fa369cee64124ed1927da69a529feeee
#: ../source/userdoc/model_contact_friction.rst:55
msgid ""
"Given an augmentation parameter :math:`r`, the contact and friction "
"conditions can be equivalently expressed in term of projection as"
msgstr ""

# ba483f565a914f728fd9c0c0ac3f5745
#: ../source/userdoc/model_contact_friction.rst:63
msgid ""
"where :math:`P_K` is the projection on the convex :math:`K` and "
":math:`{\\mathscr B}(-{\\mathscr F}\\lambda_N^i)` is the ball of center "
":math:`0` and radius :math:`-{\\mathscr F}\\lambda_N^i`. These "
"expressions will be used to perform a semi-smooth Newton method."
msgstr ""

# c20e68fe1d1b4948badd1a648eef88f6
#: ../source/userdoc/model_contact_friction.rst:66
msgid ""
"Suppose now that you approximate a linearized elasticity problem "
"submitted to contact with friction. Then, if :math:`U` is the vector of "
"the unknown for the displacement you will be able to express the matrices"
" :math:`B_N` and :math:`B_T` such that"
msgstr ""

# 06004fa4332f49fc90bafbcbfb209237
#: ../source/userdoc/model_contact_friction.rst:74
msgid ""
"where :math:`d` is the dimension of the domain and :math:`k = 1..d-1`. "
"The expression of the elasticity problem with contact with friction can "
"be written as"
msgstr ""

# cbed6116c1a445e8a3c7d633d66c3f50
#: ../source/userdoc/model_contact_friction.rst:84
msgid ""
"where :math:`\\alpha_i` is a parameter which can be added for the "
"homogenization of the augmentation parameter, :math:`(B_T U)_i` denotes "
"here the sub-vector of indices from :math:`(d-1)(i-1)+1` to "
":math:`(d-1)i` for the sake of simplicity and the sliding velocity "
":math:`B_T \\dot{U}` have been discretized into :math:`\\frac{(B_T U - "
"B_T U^{0})}{\\Delta t}` with :math:`U^{0}` the displacement at the "
"previous time step. Note that of course another discretization of the "
"sliding velocity is possible and that the time step :math:`\\Delta t` do "
"not appear in the expression of the friction condition since it does not "
"influence the direction of the sliding velocity."
msgstr ""

# 66682c5c25e047968a6ac5d0e80a92ec
#: ../source/userdoc/model_contact_friction.rst:87
msgid ""
"In that case, the homogenization coefficient :math:`\\alpha_i` can be "
"taken proportional to :math:`h^{d-2}` (:math:`h` being the diameter of "
"the element). In this way, the augmentation parameter :math:`r` can be "
"expressed in :math:`N/m^2` and chosen closed to the Young modulus of the "
"elastic body. Note that the solution is not sensitive to the value of the"
" augmentation parameter."
msgstr ""

# 80a18a91d9b848bab7ee696dca1cf73f
#: ../source/userdoc/model_contact_friction.rst:91
msgid "Weak nodal contact condition"
msgstr ""

# 9dfd70a30f8149318c842dd28384a4d8
#: ../source/userdoc/model_contact_friction.rst:93
msgid ""
"The direct nodal condition may have some drawback : locking phenomena, "
"over-constraint. It is in fact often more stable and for the same "
"accuracy to use multiplier of reduced order compared to the displacement "
"(the direct nodal contact condition corresponds more or less to a "
"multiplier described on the same finite element method than the "
"displacement)."
msgstr ""

# b9add3b80afe4bf8a53a4994967048dc
#: ../source/userdoc/model_contact_friction.rst:95
msgid ""
"Let :math:`\\varphi_i` be the shapes functions of the finite element "
"describing the displacement and :math:`\\psi_i` be the shape functions of"
" a finite element describing a multiplier on the contact boundary "
":math:`\\Gamma_c`. It is assumed that the set of admissible multiplier "
"describing the normal stress will be"
msgstr ""

# 7e516552d4484d48ace92e290237f911
#: ../source/userdoc/model_contact_friction.rst:101
msgid ""
"where :math:`a_i`, :math:`~~i=1..N_c` are the finite element nodes "
"corresponding to the multiplier. The discrete contact condition is now "
"expressed in a weak form by"
msgstr ""

# e1840d5153814485a51ea34f0e0241c5
#: ../source/userdoc/model_contact_friction.rst:107
msgid ""
"In that case, the component :math:`\\lambda_N^i` is a contact stress "
"(:math:`N/m^2`) and the matrix :math:`B_N` can be written"
msgstr ""

# 2623354be8c24d1388db34826a5e2650
#: ../source/userdoc/model_contact_friction.rst:113
msgid ""
"The matrix :math:`B_T` can also be written in a similar way. The friction"
" condition can be written in a weak form"
msgstr ""

# 8f18901570fd4c22b28457dc3a5b4b71
#: ../source/userdoc/model_contact_friction.rst:119
msgid ""
"where :math:`\\Lambda_T^h({\\mathscr F}\\lambda_N^h)` is the discrete set"
" of admissible friction stress."
msgstr ""

# 4dce3e8d72834f559c34e2bae2f7bd3d
#: ../source/userdoc/model_contact_friction.rst:121
msgid ""
"Finally, the expression of the direct nodal contact condition are "
"recovered"
msgstr ""

# 5570e435b0c649bbbc5ccdaa6d3a86d4
#: ../source/userdoc/model_contact_friction.rst:131
msgid ""
"except that now :math:`\\lambda_N^i` and :math:`\\lambda_T^i` are force "
"densities, and :math:`\\alpha_i` has to be now chosen proportional to "
":math:`1/h^d` such that the augmentation parameter :math:`r` can still be"
" chosen close to the Young modulus of the elastic body."
msgstr ""

# f1f1f59808e042d9920053ac28b37804
#: ../source/userdoc/model_contact_friction.rst:134
msgid ""
"Note that without additional stabilization technique (see [HI-RE2010]_) "
"an inf-sup condition have to be satisfied between the finite element of "
"the displacement and the one for the multipliers. This means in "
"particular that the finite element for the multiplier have to be \"less "
"rich\" than the one for the displacement."
msgstr ""

# 5415ebca58014f9688c0306ccf94d983
#: ../source/userdoc/model_contact_friction.rst:140
msgid "Weak integral contact condition"
msgstr ""

# 0e7e2fb6bbc245acabb91076de18372d
#: ../source/userdoc/model_contact_friction.rst:142
msgid ""
"The weak integral contact formulation allows not to explicitly describe "
"the discrete set of admissible stress. See also "
":ref:`nitsche_contact_small_def_section`. The contact stress (including "
"the friction one) is described on a finite element space :math:`W^h` on "
"the contact boundary :math:`\\Gamma_c`:"
msgstr ""

# cbc703a840834a4390f739b5aedd976b
#: ../source/userdoc/model_contact_friction.rst:148
msgid ""
"where :math:`d` is the dimension of the problem and :math:`\\psi_i` still"
" the shapes functions on which the contact stress is developed. Now, "
"given a outward unit vector :math:`n` on the contact boundary "
":math:`\\Gamma_c` (usually the normal to the obstacle), we make the "
"standard decompositions:"
msgstr ""

# 53b8054785e441ee996b91a6eb278513
#: ../source/userdoc/model_contact_friction.rst:155
msgid ""
"where :math:`u^h` is the displacement field approximated on a finite "
"element space :math:`V^h`. This allows to express the contact condition "
"in the following way"
msgstr ""

# 9974ea9e646d4af9a1cdaca3c03f6c88
#: ../source/userdoc/model_contact_friction.rst:161
msgid ""
"where :math:`gap` is a given initial gap in reference configuration, "
":math:`r` is an augmentation parameter and "
":math:`(\\cdot)_-:I\\hspace{-0.2em}R\\rightarrow I\\hspace{-0.2em}R_+` is"
" the negative part. The friction condition can similarly be written:"
msgstr ""

# bae26cf7d8c542b8954256480cf7e68e
#: ../source/userdoc/model_contact_friction.rst:167
msgid ""
"where :math:`B(\\rho)` is the closed ball of center  :math:`0` and radius"
" :math:`\\rho` and :math:`P_{B(\\rho)}` is the orthogonal projection on "
"it (By convenyion, the ball reduces to the origin dor :math:`\\rho \\le "
"0`). The term :math:`\\alpha(u^h_T-w^h_T)` represent here an "
"approximation of the sliding velocity. The parameter :math:`\\alpha` and "
"the field :math:`w^h_T` have to be adapted with respect to the chosen "
"approximation. For instance, if the standard finite difference"
msgstr ""

# 40b6cf5666d94e56b2eb5283153a6c6d
#: ../source/userdoc/model_contact_friction.rst:173
msgid ""
"is chosen, then one has to take :math:`\\alpha = 1/dt` and :math:`w^h_T ="
" (u^h_T)^{n}`. Note that due to the symmetry of the ball, the parameter "
":math:`\\alpha` do not play an important role in the formulation. It can "
"simply be viewed as a scaling between the augmentation parameter for the "
"contact condition and the one for the friction condition. Note also that "
"contrarily to the previous formulations of contact, here there is not a "
"strict independance of the conditions with respect to the augmentation "
"parameter (the independance only occurs at the continuous level)."
msgstr ""

# 8018cfb24410402fbffe33e1dc908cac
#: ../source/userdoc/model_contact_friction.rst:176
msgid ""
"GetFEM++ bricks implement four versions of the contact condition derived "
"from the Alart-Curnier augmented Lagrangian formulation [AL-CU1991]_. The"
" first one corresponds to the non-symmetric version. It consists in "
"solving:"
msgstr ""

# edbf26cb29cf4224a4dc14346479e17a
#: ../source/userdoc/model_contact_friction.rst:186
msgid ""
"where :math:`a(\\cdot, \\cdot)` and :math:`\\ell(v)` represent the "
"remaining parts of the problem in  :math:`u`, for instance linear "
"elasticity and :math:`\\rho={\\mathscr F}(\\lambda^h_N - r(u^h_N-"
"gap))_-`. Note that in this case, the mathematical analysis leads to "
"choose a value for the augmentation parameter of the kind :math:`r = r_0 "
"/ r` with :math:`r_0` having the dimension of a elasticity modulus (a "
"classical choice is the value of Young's modulus). In order to write a "
"Newton iteration, one has to derive the tangent system. It can be "
"written, reporting only the contact and friction terms and not the right "
"hand side:"
msgstr ""

# 4851b367c893456597c2de0f29d9408e
#: ../source/userdoc/model_contact_friction.rst:200
msgid ""
"where :math:`H(\\cdot)` is the Heaviside function (0 for a negative "
"argument and 1 for a non-negative argument), :math:`D_xP_{B(\\rho)}(x)` "
"and :math:`D_{\\rho}P_{B(\\rho)}(x)` are the derivatives of the "
"projection on :math:`B(\\rho)` (assumed to vanish for :math:`\\rho \\le "
"0`) and :math:`\\delta_{\\lambda}` and :math:`\\delta_{u}` are the "
"unknown corresponding to the tangent problem."
msgstr ""

# b6d00a7841d94c5a98bd812389ef42eb
#: ../source/userdoc/model_contact_friction.rst:203
msgid ""
"The second version corresponds to the \"symmetric\" version. It is in "
"fact symmetric in the frictionless case only (because in this case it "
"directly derives from the augmented Lagrangian formulation). It reads:"
msgstr ""

# 6c3569e4cf1742fa927f7e086b2ae2dd
# 93defc7c9a33430d96f34ceb74b90049
#: ../source/userdoc/model_contact_friction.rst:214
#: ../source/userdoc/model_contact_friction.rst:243
msgid "and the tangent system:"
msgstr ""

# ade0a4a994444481af00411998e97d7b
#: ../source/userdoc/model_contact_friction.rst:232
msgid "still with :math:`\\rho={\\mathscr F}(\\lambda^h_N - r(u^h_N-gap))_-`."
msgstr ""

# 085cd3a8ecf849ba8e803b5d59343a0f
#: ../source/userdoc/model_contact_friction.rst:234
msgid ""
"The third version corresponds to a penalized contact and friction "
"condition. It does not require the use of a multiplier. In this version, "
"the parameter :math:`r` is a penalization parameter and as to be large "
"enough to perform a good approximation of the non-penetration and the "
"Coulomb friction conditions. The formulation reads:"
msgstr ""

# 8171094011934f7bbe46e43bcf70dd6d
#: ../source/userdoc/model_contact_friction.rst:255
msgid "Numerical continuation"
msgstr ""

# 99a33edc78bc4d2ba193eeab52354252
#: ../source/userdoc/model_contact_friction.rst:257
msgid ""
"In addition, |gf| develops a method of numerical continuation for finding"
" numerical solutions of discretized evolutionary contact problems based "
"on the weak integral contact condition (see :ref:`ud-model-continuation` "
"for a general introduction). For this purpose, a parameter-dependent "
"sliding velocity may be added to the friction condition so that it "
"becomes:"
msgstr ""

# e26f605191f64dc18f7fe2f1fc50bd98
#: ../source/userdoc/model_contact_friction.rst:263
msgid ""
"Here, :math:`\\gamma` is a parameter and :math:`z^h_T` is an initial "
"sliding velocity. It is worth mentioning that if one chooses"
msgstr ""

# ed17f919321b46988ebd4d26e65f25c4
#: ../source/userdoc/model_contact_friction.rst:269
msgid ""
"then he recovers the standard friction condition at time :math:`t_{n}` "
"and :math:`t_{n+1}` for :math:`\\gamma` equal to 0 and 1, respectively."
msgstr ""

# fc42290445d94b759faa3e1fde8d4daa
#: ../source/userdoc/model_contact_friction.rst:274
msgid "Friction law"
msgstr ""

# 350c5501d4734db1bc57cf10a334b28f
#: ../source/userdoc/model_contact_friction.rst:276
msgid ""
"Apart from pure Coulomb friction :math:`\\rho = {\\mathscr F} \\left| "
"\\sigma_n \\right|`, the weak integral contact framework in |gf| also "
"supports a more generic friction law description:"
msgstr ""

# cf3d19e2f14c4ce79eb1c719fd704769
#: ../source/userdoc/model_contact_friction.rst:288
msgid ""
"In this equation :math:`\\rho` is the admissible friction stress for a "
"given normal stress :math:`\\sigma_n`, :math:`{\\mathscr F}` is the "
"coefficient of friction, :math:`\\tau_{adh}` is an adhesional (load-"
"independent) shear stress and :math:`\\tau_{tresca}` is a maximum shear "
"stress limit."
msgstr ""

# 44b14f0cc4f04b3ea569e98b6f6fd2b4
#: ../source/userdoc/model_contact_friction.rst:300
msgid "Add a contact with or without friction to a model"
msgstr ""

# 6be02fead1ad4b1fb143f6fb647660e2
#: ../source/userdoc/model_contact_friction.rst:303
msgid "Frictionless basic contact brick"
msgstr ""

# daa0b141f408480cb3eceafb20f6e49f
#: ../source/userdoc/model_contact_friction.rst:305
msgid ""
"In order to add a frictionless contact brick you call the model object "
"method::"
msgstr ""

# 5966f4915f1747a4ad78d38993fdf9e7
#: ../source/userdoc/model_contact_friction.rst:310
msgid ""
"This function adds a frictionless contact brick on ``varname_u`` thanks "
"to a multiplier variable ``multname_n``. If :math:`U` is the vector of "
"degrees of freedom on which the unilateral constraint is applied, the "
"matrix :math:`B_N` have to be such that this condition is defined by "
":math:`B_N U \\le 0`. The constraint is prescribed thank to a multiplier "
"``multname_n`` whose dimension should be equal to the number of lines of "
":math:`B_N`. The variable ``dataname_r`` is the name of the augmentation "
"parameter :math:`r` should be chosen in a range of acceptable values. "
"``dataname_gap`` is an optional parameter representing the initial gap. "
"It can be a single value or a vector of value. ``dataname_alpha`` is an "
"optional homogenization parameter for the augmentation parameter."
msgstr ""

# 9d4d7e37e19e4573912ce258ea06f64e
#: ../source/userdoc/model_contact_friction.rst:312
msgid ""
"The parameter `aug_version` indicates the augmentation strategy : 1 for "
"the non-symmetric Alart-Curnier augmented Lagrangian, 2 for the symmetric"
" one, 3 for the unsymmetric method based on augmented multipliers."
msgstr ""

# c7993bf358a64fd0b1dc0d004b43a22d
#: ../source/userdoc/model_contact_friction.rst:314
msgid ""
"Note that is possible to change the basic contact matrix :math:`B_N` by "
"using::"
msgstr ""

# 7a8bf6d8403448848f3fd4e186606392
#: ../source/userdoc/model_contact_friction.rst:320
msgid "Basic contact brick with friction"
msgstr ""

# b8219017202e4c8fa2a226143422f769
#: ../source/userdoc/model_contact_friction.rst:323
msgid "getfem::add_basic_contact_brick"
msgstr ""

# 227742ea30874de1b33fa69ddf368120
#: ../source/userdoc/model_contact_friction.rst:323
msgid ""
"(md, varname_u, multname_n, multname_t, dataname_r, BN, "
"dataname_friction_coeff, dataname_gap, dataname_alpha, aug_version);"
msgstr ""

# 0ec0d5d95149421c9ea65f764f9a0ab2
#: ../source/userdoc/model_contact_friction.rst:325
msgid ""
"This function adds a contact brick with friction on ``varname_u`` thanks "
"to two multiplier variables ``multname_n`` and ``multname_t``. If ``U`` "
"is the vector of degrees of freedom on which the condition is applied, "
"the matrix ``B_N`` has to be such that the contact condition is defined "
"by :math:`B_N U \\le gap` and ``B_T`` have to be such that the relative "
"tangential displacement is :math:`B_T U`. The matrix ``B_T`` should have "
"as many rows as ``B_N`` multiplied by :math:`d-1` where :math:`d` is the "
"domain dimension. The contact condition is prescribed thank to a "
"multiplier ``multname_n`` whose dimension should be equal to the number "
"of rows of ``B_N`` and the friction condition by a multiplier "
"``multname_t`` whose size should be the number of rows of ``B_T``. The "
"parameter ``dataname_friction_coeff`` describes the friction coefficient."
" It could be a scalar or a vector describing the coefficient on each "
"contact condition. The augmentation parameter ``r`` should be chosen in a"
" range of acceptable values (see Getfem user documentation). "
"``dataname_gap`` is an optional parameter representing the initial gap. "
"It can be a single value or a vector of value. ``dataname_alpha`` is an "
"optional homogenization parameter for the augmentation parameter."
msgstr ""

# 9eb7b939281e4fe792a94a69c39d54f8
# c8ea996e93574e86b0f066d6b0f2dddf
#: ../source/userdoc/model_contact_friction.rst:346
#: ../source/userdoc/model_contact_friction.rst:406
msgid ""
"The parameter `aug_version` indicates the augmentation strategy : 1 for "
"the non-symmetric Alart-Curnier augmented Lagrangian, 2 for the symmetric"
" one, 3 for the unsymmetric method based on augmented multipliers and 4 "
"for the unsymmetric method based on augmented multipliers with De Saxce "
"projection."
msgstr ""

# 493fa7f3a69f42e0b4ae7489d5be64df
#: ../source/userdoc/model_contact_friction.rst:352
msgid ""
"Note that is possible to change the basic contact matrices :math:`B_N` "
"and :math:`B_T` by using::"
msgstr ""

# b2970532e8984f089a6f7e1658cfe0f2
#: ../source/userdoc/model_contact_friction.rst:359
msgid "Frictionless nodal contact with a rigid obstacle brick"
msgstr ""

# 4fed78610d0d4c838cc7bf641775033b
# a2575eb9b3fd4f48b12a5b0c349ca8fc
#: ../source/userdoc/model_contact_friction.rst:362
#: ../source/userdoc/model_contact_friction.rst:384
msgid "getfem::add_nodal_contact_with_rigid_obstacle_brick"
msgstr ""

# 7924f3dd89c745d9a75cbb12f8920b9c
#: ../source/userdoc/model_contact_friction.rst:362
msgid ""
"(md, mim, varname_u, multname_n, dataname_r, region, obstacle, "
"aug_version);"
msgstr ""

# e59fad447e024a639255854aaf3ffc70
#: ../source/userdoc/model_contact_friction.rst:364
msgid ""
"This function adds a direct nodal frictionless contact condition with a "
"rigid obstacle to the model. The condition is applied on the variable "
"``varname_u`` on the boundary corresponding to ``region``. The rigid "
"obstacle should be described with the string ``obstacle`` being a signed "
"distance to the obstacle. This string should be an expression where the "
"coordinates are 'x', 'y' in 2D and 'x', 'y', 'z' in 3D. For instance, if "
"the rigid obstacle correspond to :math:`z \\le 0`, the corresponding "
"signed distance will be simply 'z'. ``multname_n`` should be a fixed size"
" variable whose size is the number of degrees of freedom on boundary "
"``region``. It represents the contact equivalent nodal forces. The "
"augmentation parameter ``r`` should be chosen in a range of acceptable "
"values (close to the Young modulus of the elastic body, see Getfem user "
"documentation). 1 for the non-symmetric Alart-Curnier augmented "
"Lagrangian, 2 for the symmetric one, 3 for the unsymmetric method based "
"on augmented multipliers."
msgstr ""

# ae91045723f8438c8dabebe0b0164aa7
#: ../source/userdoc/model_contact_friction.rst:379
msgid "Nodal contact with a rigid obstacle brick with friction"
msgstr ""

# 1943d897075d49de8e6f81b7119c29fe
#: ../source/userdoc/model_contact_friction.rst:382
msgid ""
"(md, mim, varname_u, multname_n, multname_t, dataname_r, "
"dataname_friction_coeff, region, obstacle, aug_version);"
msgstr ""

# 2133a7cb5d984c49bd191557183784eb
#: ../source/userdoc/model_contact_friction.rst:386
msgid ""
"This function adds a direct nodal contact with friction condition with a "
"rigid obstacle to the model. The condition is applied on the variable "
"``varname_u`` on the boundary corresponding to ``region``. The rigid "
"obstacle should be described with the string ``obstacle`` being a signed "
"distance to the obstacle. This string should be an expression where the "
"coordinates are 'x', 'y' in 2D and 'x', 'y', 'z' in 3D. For instance, if "
"the rigid obstacle correspond to :math:`z \\le 0`, the corresponding "
"signed distance will be simply 'z'. ``multname_n`` should be a fixed size"
" variable whose size is the number of degrees of freedom on boundary "
"``region``. It represents the contact equivalent nodal forces. "
"``multname_t`` should be a fixed size variable whose size is the number "
"of degrees of freedom on boundary ``region`` multiplied by :math:`d-1` "
"where :math:`d` is the domain dimension. It represents the friction "
"equivalent nodal forces. The augmentation parameter ``r`` should be "
"chosen in a range of acceptable values (close to the Young modulus of the"
" elastic body, see Getfem user documentation). "
"``dataname_friction_coeff`` is the friction coefficient. It could be a "
"scalar or a vector of values representing the friction coefficient on "
"each contact node."
msgstr ""

# 8365867a70174f4bbbc0c6089f88d897
#: ../source/userdoc/model_contact_friction.rst:414
msgid "Frictionless nodal contact between non-matching meshes brick"
msgstr ""

# 12545e07b0eb422f8875b62b59579298
# a9f7ea97554e43a384823765deb940b1
#: ../source/userdoc/model_contact_friction.rst:418
#: ../source/userdoc/model_contact_friction.rst:456
msgid "getfem::add_nodal_contact_between_nonmatching_meshes_brick"
msgstr ""

# 327d5978c1a44ca99eea31446034ad47
#: ../source/userdoc/model_contact_friction.rst:417
msgid ""
"(md, mim1, mim2, varname_u1, varname_u2, multname_n, dataname_r, rg1, "
"rg2, slave1=true, slave2=false, aug_version=1);"
msgstr ""

# 25f828845aa14e8cae06065c940e0b65
#: ../source/userdoc/model_contact_friction.rst:420
msgid ""
"This function adds a frictionless contact condition between two faces of "
"one or two elastic bodies. The condition is applied on the variable "
"`varname_u` or the variables `varname_u1` and `varname_u2` depending if a"
" single or two distinct displacement fields are given. Vectors `rg1` and "
"`rg2` contain pairs of regions expected to come in contact with each "
"other. In case of a single region per side, `rg1` and `rg2` can be given "
"as normal integers. In the single displacement variable case the regions "
"defined in both `rg1` and `rg2` refer to the variable `varname_u`. In the"
" case of two displacement variables, `rg1` refers to `varname_u1` and "
"`rg2` refers to `varname_u2`. `multname_n` should be a fixed size "
"variable whose size is the number of degrees of freedom on those regions "
"among the ones defined in `rg1` and `rg2` which are characterized as "
"\"slaves\". It represents the contact equivalent nodal forces. The "
"augmentation parameter `r` should be chosen in a range of acceptabe "
"values (close to the Young modulus of the elastic body, see Getfem user "
"documentation). The optional parameters `slave1` and `slave2` declare if "
"the regions defined in `rg1` and `rg2` are correspondingly considered as "
"\"slaves\". By default `slave1` is true and `slave2` is false, i.e. `rg1`"
" contains the slave surfaces, while `rg2` the master surfaces. Preferably"
" only one of `slave1` and `slave2` is set to true."
msgstr ""

# 8b198f44476c4f24ba0262d9709ac91c
#: ../source/userdoc/model_contact_friction.rst:441
msgid ""
"The parameter `aug_version` indicates the augmentation strategy : 1 for "
"the non-symmetric Alart-Curnier augmented Lagrangian, 2 for the symmetric"
" one, 3 for the unsymmetric method with augmented multiplier."
msgstr ""

# 9148d1def33b40389996b7fc79c42039
#: ../source/userdoc/model_contact_friction.rst:446
msgid ""
"Basically, this brick computes the matrix :math:`B_N` and the vectors gap"
" and alpha and calls the basic contact brick."
msgstr ""

# d1fc34b44f86441aaca64232fc57ee45
#: ../source/userdoc/model_contact_friction.rst:451
msgid "Nodal contact between non-matching meshes brick with friction"
msgstr ""

# 518f47baeecb4b2a9232748638e3eeb8
#: ../source/userdoc/model_contact_friction.rst:456
msgid "(md, mim1, mim2, varname_u1, varname_u2, multname_n, multname_t,"
msgstr ""

# 844366fe9abe4a20beb468ba0fd88c7f
#: ../source/userdoc/model_contact_friction.rst:455
msgid ""
"dataname_r, dataname_friction_coeff, rg1, rg2, slave1=true, slave2=false,"
" aug_version=1);"
msgstr ""

# d28f8b037d6b40f399501596dca04f5f
#: ../source/userdoc/model_contact_friction.rst:458
msgid ""
"This function adds a contact with friction condition between two faces of"
" one or two elastic bodies. The condition is applied on the variable "
"`varname_u` or the variables `varname_u1` and `varname_u2` depending if a"
" single or two distinct displacement fields are given. Vectors `rg1` and "
"`rg2` contain pairs of regions expected to come in contact with each "
"other. In case of a single region per side, `rg1` and `rg2` can be given "
"as normal integers. In the single displacement variable case the regions "
"defined in both `rg1` and `rg2` refer to the variable `varname_u`. In the"
" case of two displacement variables, `rg1` refers to `varname_u1` and "
"`rg2` refers to `varname_u2`. `multname_n` should be a fixed size "
"variable whose size is the number of degrees of freedom on those regions "
"among the ones defined in `rg1` and `rg2` which are characterized as "
"\"slaves\". It represents the contact equivalent nodal normal forces. "
"`multname_t` should be a fixed size variable whose size corresponds to "
"the size of `multname_n` multiplied by qdim - 1 . It represents the "
"contact equivalent nodal tangent (frictional) forces. The augmentation "
"parameter `r` should be chosen in a range of acceptabe values (close to "
"the Young modulus of the elastic body, see Getfem user documentation). "
"The friction coefficient stored in the parameter `friction_coeff` is "
"either a single value or a vector of the same size as `multname_n`. The "
"optional parameters `slave1` and `slave2` declare if the regions defined "
"in `rg1` and `rg2` are correspondingly considered as \"slaves\". By "
"default `slave1` is true and `slave2` is false, i.e. `rg1` contains the "
"slave surfaces, while `rg2` the master surfaces. Preferably only one of "
"`slave1` and `slave2` is set to true."
msgstr ""

# f3c247e391ac49bfb89d38b000c42b3c
#: ../source/userdoc/model_contact_friction.rst:484
msgid ""
"The parameter `aug_version` indicates the augmentation strategy : 1 for "
"the non-symmetric Alart-Curnier augmented Lagrangian, 2 for the symmetric"
" one, 3 for the unsymmetric method with augmented multiplier and 4 for "
"the unsymmetric method with augmented multiplier and De Saxce projection."
msgstr ""

# 5244073a9a9d443ba43e306827f28ac6
#: ../source/userdoc/model_contact_friction.rst:490
msgid ""
"Basically, this brick computes the matrices :math:`B_N` and :math:`B_T` "
"as well the vectors gap and alpha and calls the basic contact brick."
msgstr ""

# 7e8336f824c447d2a4b13364fac86921
#: ../source/userdoc/model_contact_friction.rst:496
msgid "Hughes stabilized frictionless contact condition"
msgstr ""

# ec249af18922454d9b50cccedf01594c
#: ../source/userdoc/model_contact_friction.rst:498
msgid ""
"In order to add a Hughes stabilized frictionless contact brick you call "
"the model object method::"
msgstr ""

# 8123a79979444a7c863c2f34ef8b8512
#: ../source/userdoc/model_contact_friction.rst:503
msgid ""
"This function adds a Hughes stabilized frictionless contact brick on "
"``varname_u`` thanks to a multiplier variable ``multname_n``. If we take "
":math:`U` is the vector of degrees of freedom on which the unilateral "
"constraint is applied, and :math:`\\lambda` the multiplier Vector of "
"contact force. Then Hughes stabilized frictionless contact condition is "
"defined by the matrix :math:`B_N` and :math:`D_N` have to be such that "
"this condition is defined by :math:`B_N U - D_N \\lambda \\le 0`. Where "
":math:`D_N` is the mass matrix relative to stabilized term. The variable "
"``dataname_r`` is the name of the augmentation parameter :math:`r` should"
" be chosen in a range of acceptable values. ``dataname_gap`` is an "
"optional parameter representing the initial gap. It can be a single value"
" or a vector of value. ``dataname_alpha`` is an optional homogenization "
"parameter for the augmentation parameter."
msgstr ""

# 39753402905540d3abfdb9990665384c
#: ../source/userdoc/model_contact_friction.rst:505
msgid ""
"The parameter `aug_version` indicates the augmentation strategy :  1 for "
"the non-symmetric Alart-Curnier augmented Lagrangian, 2 for the symmetric"
" one, 3 for the unsymmetric method based on augmented multipliers."
msgstr ""

# 566ed469a18245d7a466e8455d65f5d9
#: ../source/userdoc/model_contact_friction.rst:507
msgid ""
"Note that the matrix :math:`D_N` is a sum of the basic contact term and "
"the Hughes stabilised term. You can change it with::"
msgstr ""

# 02b12a8e1cb04ce7a87f6e33116a0ae4
#: ../source/userdoc/model_contact_friction.rst:513
msgid "Frictionless integral contact with a rigid obstacle brick"
msgstr ""

# 6feaee7521734b0986e0a4dedb5bb0f0
#: ../source/userdoc/model_contact_friction.rst:520
msgid ""
"This function adds a frictionless contact condition with a rigid obstacle"
" to the model, which is defined in an integral way. It is the direct "
"approximation of an augmented Lagrangian formulation defined at the "
"continuous level. The advantage should be a better scalability: the "
"number of Newton iterations should be more or less independent of the "
"mesh size. The condition is applied on the variable ``varname_u`` on the "
"boundary corresponding to ``region``. The rigid obstacle should be "
"described with the data ``dataname_obstacle`` being a signed distance to "
"the obstacle (interpolated on a finite element method). ``multname_n`` "
"should be a fem variable representing the contact stress. An inf-sup "
"condition between ``multname_n`` and ``varname_u`` is required. The "
"augmentation parameter ``dataname_r`` should be chosen in a range of "
"acceptable values."
msgstr ""

# e76c16a6cfeb422fabc022bcc0fb7ea9
# 37672eb7292343b88aefb00559ac39dd
#: ../source/userdoc/model_contact_friction.rst:535
#: ../source/userdoc/model_contact_friction.rst:615
msgid ""
"Possible values for `option` is 1 for the non-symmetric Alart-Curnier "
"augmented Lagrangian method, 2 for the symmetric one, 3 for the non-"
"symmetric Alart-Curnier method with an additional augmentation and 4 for "
"a new unsymmetric method. The default value is 1."
msgstr ""

# e91e2758b6c24789a7221e30ae5cd4b6
# 9a62706dacbb47d69e2fc25a9b5b167b
#: ../source/userdoc/model_contact_friction.rst:540
#: ../source/userdoc/model_contact_friction.rst:620
msgid ""
"``mim`` represents of course the integration method. Note that it should "
"be accurate enough to integrate efficiently the nonlinear terms involved."
msgstr ""

# fdba9434d16a4865b852e354181e0986
#: ../source/userdoc/model_contact_friction.rst:545
msgid "Integral contact with a rigid obstacle brick with friction"
msgstr ""

# cff85e477e004b11b1f5dc58d8fd35eb
#: ../source/userdoc/model_contact_friction.rst:555
msgid ""
"This function adds a contact with friction condition with a rigid "
"obstacle to the model, which is defined in an integral way. It is the "
"direct approximation of an augmented Lagrangian formulation defined at "
"the continuous level. The advantage should be a better scalability: the "
"number of Newton iterations should be more or less independent of the "
"mesh size. The condition is applied on the variable ``varname_u`` on the "
"boundary corresponding to ``region``. The rigid obstacle should be "
"described with the data ``dataname_obstacle`` being a signed distance to "
"the obstacle (interpolated on a finite element method). ``multname_n`` "
"should be a fem variable representing the contact stress. An inf-sup "
"condition between ``multname_n`` and ``varname_u`` is required. The "
"augmentation parameter ``dataname_r`` should be chosen in a range of "
"acceptable values."
msgstr ""

# 1a3dc862df624ae79403f810b9e893d2
# eac80336385f4bbd89d757249d1e55fe
#: ../source/userdoc/model_contact_friction.rst:570
#: ../source/userdoc/model_contact_friction.rst:707
msgid ""
"The parameter `dataname_friction_coeffs` contains the Coulomb friction "
"coefficient and optionally an adhesional shear stress threshold and the "
"tresca limit shear stress. For constant coefficients its size is from 1 "
"to 3. For coefficients described on a finite element method, this vector "
"contains a number of single values, value pairs or triplets equal to the "
"number of the corresponding mesh_fem's basic dofs."
msgstr ""

# e5a7079a9f344db9b0c910eaa0d91157
#: ../source/userdoc/model_contact_friction.rst:577
msgid ""
"Possible values for `option` is 1 for the non-symmetric Alart-Curnier "
"augmented Lagrangian method, 2 for the symmetric one, 3 for the non-"
"symmetric Alart-Curnier method with an additional augmentation and 4 for "
"a new unsymmetric method. The default value is 1. Option 4, assumes pure "
"Coulomb friction and ignores any adhesional stress and tresca limit "
"coefficients."
msgstr ""

# a64d0e7c7c444db6952d42ec8c588abe
#: ../source/userdoc/model_contact_friction.rst:584
msgid ""
"``dataname_alpha`` and ``dataname_wt`` are optional parameters to solve "
"evolutionary friction problems. ``dataname_gamma`` and ``dataname_vt`` "
"denote optional data for adding a parameter-dependent sliding velocity to"
" the friction condition. ``mim`` represents of course the integration "
"method. Note that it should be accurate enough to integrate efficiently "
"the nonlinear terms involved."
msgstr ""

# 642fb33721474130aa952649c7b7db49
#: ../source/userdoc/model_contact_friction.rst:592
msgid "Frictionless integral contact between non-matching meshes brick"
msgstr ""

# 937687010bbe4da49ecd38c9cec93b98
#: ../source/userdoc/model_contact_friction.rst:600
msgid ""
"This function adds a frictionless contact condition between nonmatching "
"meshes to the model, which is defined in an integral way. It is the "
"direct approximation of an augmented Lagrangian formulation defined at "
"the continuous level. The advantage should be a better scalability: the "
"number of Newton iterations should be more or less independent of the "
"mesh size. The condition is applied on the variables ``varname_u1`` and "
"``varname_u2`` on the boundaries corresponding to ``region1`` and "
"``region2``. ``multname_n`` should be a fem variable representing the "
"contact stress. An inf-sup condition between ``multname_n`` and "
"``varname_u1`` and ``varname_u2`` is required. The augmentation parameter"
" ``dataname_r`` should be chosen in a range of acceptable values."
msgstr ""

# ab8cac9295374321a2a1cd15a54d5dcd
#: ../source/userdoc/model_contact_friction.rst:625
msgid "Integral contact between non-matching meshes brick with friction"
msgstr ""

# 843b2d2ceefa473eb3a7f18b84d9deda
#: ../source/userdoc/model_contact_friction.rst:634
msgid ""
"This function adds a contact with friction condition between nonmatching "
"meshes to the model. This brick adds a contact which is defined in an "
"integral way. It is the direct approximation of an augmented Lagrangian "
"formulation defined at the continuous level. The advantage should be a "
"better scalability: the number of Newton iterations should be more or "
"less independent of the mesh size. The condition is applied on the "
"variables ``varname_u1`` and ``varname_u2`` on the boundaries "
"corresponding to ``region1`` and ``region2``. ``multname`` should be a "
"fem variable representing the contact and friction stress. An inf-sup "
"condition between ``multname`` and ``varname_u1`` and ``varname_u2`` is "
"required. The augmentation parameter ``dataname_r`` should be chosen in a"
" range of acceptable values."
msgstr ""

# f83bf7031f154d8d8bb0d1cdceacfa0e
#: ../source/userdoc/model_contact_friction.rst:647
msgid ""
"The parameter `dataname_friction_coeffs` contains the Coulomb friction "
"coefficient and optionally an adhesional shear stress threshold and the "
"tresca limit shear stress. For constant coefficients its size is from 1 "
"to 3. For coefficients described on a finite element method on the same "
"mesh as ``varname_u1``, this vector contains a number of single values, "
"value pairs or triplets equal to the number of the corresponding "
"mesh_fem's basic dofs."
msgstr ""

# d5e07534b35142e595d7f06334f6a9de
#: ../source/userdoc/model_contact_friction.rst:655
msgid ""
"Possible values for `option` is 1 for the non-symmetric Alart-Curnier "
"augmented Lagrangian method, 2 for the symmetric one, 3 for the non-"
"symmetric Alart-Curnier method with an additional augmentation and 4 for "
"a new unsymmetric method. The default value is 1. ``dataname_alpha``, "
"``dataname_wt1`` and ``dataname_wt2`` are optional parameters to solve "
"evolutionary friction problems. ``mim`` represents the integration method"
" on the same mesh as ``varname_u1``. Note that it should be accurate "
"enough to integrate efficiently the nonlinear terms involved."
msgstr ""

# 85759e809c944e6d8d0c590519c3a509
#: ../source/userdoc/model_contact_friction.rst:667
msgid "Frictionless penalized contact with a rigid obstacle brick"
msgstr ""

# 38a09af1fc274695965418996a1c0989
#: ../source/userdoc/model_contact_friction.rst:675
msgid ""
"This function adds a frictionless penalized contact condition with a "
"rigid obstacle to the model. The condition is applied on the variable "
"``varname_u`` on the boundary corresponding to ``region``. The rigid "
"obstacle should be described with the data ``dataname_obstacle`` being a "
"signed distance to the obstacle (interpolated on a finite element "
"method). The penalization parameter ``dataname_r`` should be chosen large"
" enough to prescribe an approximate non-penetration condition but not too"
" large not to deteriorate too much the conditioning of the tangent "
"system. ``dataname_n`` is an optional parameter used if option is 2. In "
"that case, the penalization term is shifted by ``lambda_n`` (this allows "
"the use of an Uzawa algorithm on the corresponding augmented dLagrangian "
"formulation)"
msgstr ""

# 82fffdae9d994338a33651e1e1a86a3d
#: ../source/userdoc/model_contact_friction.rst:691
msgid "Penalized contact with a rigid obstacle brick with friction"
msgstr ""

# cf066b77bacd49a4a99c5c7185cce73d
#: ../source/userdoc/model_contact_friction.rst:700
msgid ""
"This function adds a penalized contact condition with Coulomb friction "
"with a rigid obstacle to the model. The condition is applied on the "
"variable ``varname_u`` on the boundary corresponding to ``region``. The "
"rigid obstacle should be described with the data `dataname_obstacle` "
"being a signed distance to the obstacle (interpolated on a finite element"
" method)."
msgstr ""

# 93f047c3207f417e8f5f2832c2b6c65e
#: ../source/userdoc/model_contact_friction.rst:714
msgid ""
"The penalization parameter ``dataname_r`` should be chosen large enough "
"to prescribe approximate non-penetration and friction conditions but not "
"too large not to deteriorate too much the conditioning of the tangent "
"system. ``dataname_lambda`` is an optional parameter used if ``option`` "
"is 2. In that case, the penalization term is shifted by ``lambda`` (this "
"allows the use of an Uzawa algorithm on the corresponding augmented "
"Lagrangian formulation). ``dataname_alpha`` and ``dataname_wt`` are "
"optional parameters to solve evolutionary friction problems."
msgstr ""

# 9a62e4d7076e4f139de32c458a19b984
#: ../source/userdoc/model_contact_friction.rst:727
msgid "Frictionless penalized contact between non-matching meshes brick"
msgstr ""

# 7399eccb0f5f4b1aa9d5905fd3a5fa7e
#: ../source/userdoc/model_contact_friction.rst:735
msgid ""
"This function adds a penalized contact frictionless condition between "
"nonmatching meshes to the model. The condition is applied on the "
"variables ``varname_u1`` and ``varname_u2`` on the boundaries "
"corresponding to ``region1` and ``region2`. The penalization parameter "
"``dataname_r`` should be chosen large enough to prescribe an approximate "
"non-penetration condition but not too large not to deteriorate too much "
"the conditionning of the tangent system. ``dataname_n`` is an optional "
"parameter used if option is 2. In that case, the penalization term is "
"shifted by ``lambda_n`` (this allows the use of an Uzawa algorithm on the"
" corresponding augmented Lagrangian formulation)"
msgstr ""

# 290d8883408046c1871dabcc888d7eb3
#: ../source/userdoc/model_contact_friction.rst:749
msgid "Penalized contact between non-matching meshes brick with friction"
msgstr ""

# 4d6809e381cc462b879efebe8f2e1d60
#: ../source/userdoc/model_contact_friction.rst:758
msgid ""
"This function adds a penalized contact condition with Coulomb friction "
"between nonmatching meshes to the model. The condition is applied on the "
"variables ``varname_u1`` and ``varname_u2`` on the boundaries "
"corresponding to ``region1` and ``region2`. The penalization parameter "
"``dataname_r`` should be chosen large enough to prescribe an approximate "
"non-penetration condition but not too large not to deteriorate too much "
"the conditionning of the tangent system."
msgstr ""

# f61bb58b3069482fa9f836341f4580b0
#: ../source/userdoc/model_contact_friction.rst:767
msgid ""
"The parameter `dataname_friction_coeffs` contains the Coulomb friction "
"coefficient and optionally an adhesional shear stress threshold and the "
"tresca limit shear stress. For constant coefficients its size is from 1 "
"to 3. For coefficients described on a finite element method on the same "
"mesh as `varname_u1`, this vector contains a number of single values, "
"value pairs or triplets equal to the number of the corresponding "
"mesh_fem's basic dofs."
msgstr ""

# 3f3e28e6c60a48dda3e614706d74139e
#: ../source/userdoc/model_contact_friction.rst:775
msgid ""
"``dataname_lambda`` is an optional parameter used if ``option`` is 2. In "
"that case, the penalization term is shifted by ``lambda`` (this allows "
"the use of an Uzawa algorithm on the corresponding augmented Lagrangian "
"formulation) ``dataname_alpha``, ``dataname_wt1`` and ``dataname_wt2`` "
"are optional parameters to solve evolutionary friction problems. ``mim`` "
"represents the integration method on the same mesh as ``varname_u1``. "
"Note that it should be accurate enough to integrate efficiently the "
"nonlinear terms involved."
msgstr ""

# 56b90f857f324c2f88c3daf3194d8800
#: ../source/userdoc/model_contact_friction.rst:7
msgid "models"
msgstr ""

# 56b90f857f324c2f88c3daf3194d8800
#: ../source/userdoc/model_contact_friction.rst:7
msgid "model bricks"
msgstr ""

