# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2017 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-06-22 15:02+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

# 44f4f7ca521b42338d9f3282b3306645
#: ../source/userdoc/xfem.rst:10
msgid "Level-sets, Xfem, fictitious domains, Cut-fem"
msgstr ""

# 2f6271cc94a841edb21e9968e8ce2e6b
#: ../source/userdoc/xfem.rst:12
msgid ""
"Since v2.0, |gf| offers a certain number of facilities to support Xfem "
"and fictitious domain methods with a cut-fem strategy. Most of these "
"tools have been initially mainly developed by Julien Pommier for the "
"study published in [LA-PO-RE-SA2005]_."
msgstr ""

# c2f9f3e913a5407e8dbaeb82eccc90c5
#: ../source/userdoc/xfem.rst:17
msgid ""
"The implementation is a fairly large generality, based on the use of "
"level-sets, as suggested in [SU-CH-MO-BE2001]_ and allows simultaneous "
"use of a large number of level-sets which can cross."
msgstr ""

# be65def13a2b463c897be41af7ac6680
#: ../source/userdoc/xfem.rst:21
msgid ""
"The Xfem implementation for the discretization of the jump follows the "
"strategy of [HA-HA2004]_ although we had no knowledge of this work during"
" implementation. This means that there is no degree of freedom "
"representing the jump across the level-set. Instead, the degrees of "
"freedom represent the displacement of each side of the level-set. This is"
" essential in any way in the presence of level-set that intersect each "
"other because it may exist more than two different zones of continuity "
"inside a single element."
msgstr ""

# 150ef7a10d3c431996074f64654a9d67
#: ../source/userdoc/xfem.rst:30
msgid ""
"The cut fem strategy for fictitious domain method has been used for the "
"first time with |gf| for the study published in [HA-RE2009]_ where a "
"quite simple stabilization strategy is proposed. Here also, before "
"knowing the existence of the Work of E. Burman and P. Hanbo [bu-ha2010]_ "
"on that topic."
msgstr ""

# f1f6a0d3ef8a43fa98e996a4ac73380d
#: ../source/userdoc/xfem.rst:36
msgid ""
"The tools for Xfem have been then enriched by the PhD works of J. Larsy "
"(see for instance [LA-RE-SA2010]_) the one of E. Chahine (see for "
"instance [CH-LA-RE2011]_, [NI-RE-CH2011]_), of S. Amdouni  (see for "
"instance [AM-MO-RE2014]_, [AM-MO-RE2014b]_) and of M. Fabre (see for "
"instance  [Fa-Po-Re2015]_)."
msgstr ""

# 24f5973ae4f74a4cac9f5abc85055ce5
#: ../source/userdoc/xfem.rst:45
msgid ""
"All the tools listed below needs the package `qhull "
"<http://www.qhull.org>`_ installed on your system. This package is widely"
" available. It computes convex hull and Delaunay triangulations in "
"arbitrary dimension."
msgstr ""

# 5dca8544ed5a40169db9bae517ee17cb
#: ../source/userdoc/xfem.rst:49
msgid ""
"The programs :file:`tests/crack.cc`, "
":file:`interface/tests/matlab/crack.m` and "
":file:`interface/tests/python/crack.py` are some good examples of use of "
"these tools."
msgstr ""

# a5c0071866ed40a39a37def3c1b1866a
#: ../source/userdoc/xfem.rst:53
msgid "Representation of level-sets"
msgstr ""

# 5482a0b2608e4bf4bee1fa14c5421075
#: ../source/userdoc/xfem.rst:55
msgid ""
"Some structure are defined to manipulate level-set functions defined by "
"piecewise polynomial function on a mesh. In the file "
":file:`getfem/getfem_levelset.h` a level-set is represented by a function"
" defined on a Lagrange fem of a certain degree on a mesh. The constructor"
" to define a new |gf_ls| is the following::"
msgstr ""

# cf3c7d2f08064855b429d789134a4120
#: ../source/userdoc/xfem.rst:63
msgid ""
"where ``mesh`` is a valid mesh of type |gf_m|, ``degree`` is the degree "
"of the polynomials (1 is the default value), and ``with_secondary`` is a "
"boolean whose default value is false. The secondary level-set is used to "
"represent fractures (if :math:`p(x)` is the primary level-set function "
"and :math:`s(x)` is the secondary level-set function, the crack is "
"defined by :math:`p(x) = 0` and :math:`s(x) \\leq 0`: the role of the "
"secondary is to delimit the crack)."
msgstr ""

# 808ac865b43348179e706640b45b6c55
#: ../source/userdoc/xfem.rst:71
msgid ""
"Each level-set function is defined by a |mf| ``mf`` and the dof values "
"over this |mf|, in a vector. The object |gf_ls| contains a |mf| and the "
"vectors of dof for the corresponding function(s). The method "
"``ls.value(0)`` returns the vector of dof for the primary level-set "
"function, so that these values can be set. The method ``ls.value(1)`` "
"returns the dof vector for the secondary level-set function if any. The "
"method ``ls.get_mesh_fem()`` returns a reference on the |gf_mf| object."
msgstr ""

# 0dd38c7fd48645b2bee39b80a1bcb736
#: ../source/userdoc/xfem.rst:79
msgid ""
"Note that, in applications, the level-set function often evolves thanks "
"to an Hamilton-Jacobi equation (for its re-initialization for instance). "
"See the :ref:`ud-convect` which can be used in the approximation of a "
"Hamilton-Jacobi equation."
msgstr ""

# b41e3ed202cd416d84b4643bcaa22a40
#: ../source/userdoc/xfem.rst:86
msgid "Mesh cut by level-sets"
msgstr ""

# 428bbf0725834b48b8d7e1ccb298afe4
#: ../source/userdoc/xfem.rst:88
msgid ""
"In order to compute adapted integration methods and finite element "
"methods to represent a field which is discontinuous across one or several"
" level-sets, a certain number of pre-computations have to be done at the "
"mesh level. In :file:`getfem/getfem_mesh_level_set.h` is defined the "
"object |gf_mls| which handles these pre-computations. The constructor of "
"this object is the following::"
msgstr ""

# cd9507d91d4b451e97bffcd8bc7df75e
#: ../source/userdoc/xfem.rst:97
msgid ""
"where ``mesh`` is a valid mesh of type |gf_m|. In order to indicate that "
"the mesh is cut by a level-set, one has to call the method "
"``mls.add_level_set(ls)``, where ``ls`` is an object of type |gf_ls|. An "
"arbitrary number of level-sets can be added. To initialize the object or "
"to actualize it when the value of the level-set function is modified, one"
" has to call the method ``mls.adapt()``."
msgstr ""

# 6316b5ec38d0477e849ddae05380c77c
#: ../source/userdoc/xfem.rst:104
msgid ""
"In particular a subdivision of each element cut by the level-set is made "
"with simplices. Note that the whole cut-mesh is generally not conformal."
msgstr ""

# e3e5ecd6906c45a5a84b9ad73e13ad04
#: ../source/userdoc/xfem.rst:107
msgid ""
"The cut-mesh can be obtained for instance for post-treatment thanks to "
"``mls.global_cut_mesh(m)`` which fill ``m`` with the cut-mesh."
msgstr ""

# ae045831249842f985610de7860807e7
#: ../source/userdoc/xfem.rst:113
msgid "Adapted integration methods"
msgstr ""

# b489c55745a544fea10c47cd48a59876
#: ../source/userdoc/xfem.rst:115
msgid ""
"For fields which are discontinuous across a level-set, integration "
"methods have to be adapted. The object |gf_mimls| defined in the file "
":file:`getfem/getfem_mesh_im_level_set.h` defines a composite integration"
" method for the elements cut by the level-set. The constructor of this "
"object is the following::"
msgstr ""

# 051d0fa61c21493fa6f8e33a4aab16e7
#: ../source/userdoc/xfem.rst:123
msgid ""
"where ``mls`` is an object of type |gf_mls|, ``where`` is an enum for "
"which possible values are"
msgstr ""

# 10fa9661ed6e49c487f9a54d1b0d87cc
#: ../source/userdoc/xfem.rst:126
msgid ""
"``getfem::mesh_im_level_set::INTEGRATE_INSIDE`` (integrate over "
":math:`p(x)<0`),"
msgstr ""

# db0e8471bcc845de9f0082ea7db67f06
#: ../source/userdoc/xfem.rst:128
msgid ""
"``getfem::mesh_im_level_set::INTEGRATE_OUTSIDE`` (integrate over "
":math:`p(x)>0`),"
msgstr ""

# 54ef672cbd184f9b8aee7ccbbcf29e3c
#: ../source/userdoc/xfem.rst:130
msgid "``getfem::mesh_im_level_set::INTEGRATE_ALL``,"
msgstr ""

# bb4af52d83204b1cbddc78b28e059def
#: ../source/userdoc/xfem.rst:132
msgid ""
"``getfem::mesh_im_level_set::INTEGRATE_BOUNDARY`` (integrate over "
":math:`p(x)=0` and :math:`s(x)\\leq 0`)"
msgstr ""

# 4ce41fa767a34659ac22d6a7cdf15e68
#: ../source/userdoc/xfem.rst:135
msgid ""
"The argument ``regular_im`` should be of type ``pintegration_method``, "
"and will be the integration method applied on each sub-simplex of the "
"composite integration for elements cut by the level-set. The optional "
"``singular_im`` should be also of type ``pintegration_method`` and is "
"used for crack singular functions: it is applied to sub-simplices which "
"share a vertex with the crack tip (the specific integration method "
"``IM_QUASI_POLAR(..)`` is well suited for this purpose)."
msgstr ""

# 4fcc63c3f9004f3eb21afdc1939f48e2
#: ../source/userdoc/xfem.rst:142
msgid ""
"The object |gf_mimls| can be used as a classical |gf_mim| object (for "
"instance the method ``mim.set_integration_method(...)`` allows to set the"
" integration methods for the elements which are not cut by the level-"
"set)."
msgstr ""

# cad8b98d1633407a8b922e7d08fb373f
#: ../source/userdoc/xfem.rst:146
msgid ""
"To initialize the object or to actualize it when the value of the level-"
"set function is modified, one has to call the method ``mim.adapt()``."
msgstr ""

# 1c103c00d592455a987aa0a1895b69d9
#: ../source/userdoc/xfem.rst:150
msgid ""
"When more than one level-set is declared on the |gf_mls| object, it is "
"possible to set more precisely the integration domain using the method::"
msgstr ""

# f79bb6a05a7b49a2a02ade2ea5893aa7
#: ../source/userdoc/xfem.rst:154
msgid ""
"where \"desc\" is a string containing the description of the boolean "
"operation which defines the integration domain. The syntax is simple, for"
" example if there are 3 different level-set,"
msgstr ""

# d83958ff33d24862b7ca067c32ae2320
#: ../source/userdoc/xfem.rst:156
msgid ""
"\"a*b*c\" is the intersection of the domains defined by each level-set "
"(this is the default behavior if this function is not called)."
msgstr ""

# d09e2d9286bf459cbed032f6f75f670e
#: ../source/userdoc/xfem.rst:160
msgid "\"a+b+c\" is the union of their domains."
msgstr ""

# 8ac6e18de6c0478688c140dfd61a35e2
#: ../source/userdoc/xfem.rst:162
msgid ""
"\"c-(a+b)\" is the domain of the third level-set minus the union of the "
"domains of the two others."
msgstr ""

# 963c5ef4056341358212587539664208
#: ../source/userdoc/xfem.rst:165
msgid ""
"\"!a\" is the complementary of the domain of a (i.e. it is the domain "
"where a(x)>0)"
msgstr ""

# 855e26669d664a5d8a91e01fbea8991c
#: ../source/userdoc/xfem.rst:168
msgid ""
"The first level-set is always referred to with \"a\", the second with "
"\"b\", and so on."
msgstr ""

# da468e5a7c5046a589afcb9d80d61d6d
#: ../source/userdoc/xfem.rst:173
msgid "Cut-fem"
msgstr ""

# 586bbaa8750948a4b0809426305eb014
#: ../source/userdoc/xfem.rst:175
msgid ""
"The implementation of a cut finite element method such as described in "
"[bu-ha2010]_, i.e. a finite element on a fictitious domain restricted to "
"a smaller real domain, is possible just using the previous tools and "
"mainly the adapted integration method. Several examples are available on "
"|gf| test programs. See for instance "
":file:`interface/tests/python/demo_fictitious_domain.py` or "
":file:`interface/tests/matlab/demo_fictitious_domain.m`."
msgstr ""

# c206a5fae8db4ce5a7cdf3e5aefce329
#: ../source/userdoc/xfem.rst:177
msgid ""
"In this context, one often needs to restrict the unknown finite element "
"field to the degrees of freedom whose corresponding shape function "
"supports have an intersection with the real domain. This can be done "
"using the ``partial_mesh_fem`` object. See for instance "
":file:`interface/tests/matlab/demo_structural_optimization.m`."
msgstr ""

# 3c606222e5de4af98419a1c92b4debb4
#: ../source/userdoc/xfem.rst:179
msgid ""
"Note that often, a stabilization technique have to be considered in order"
" to treat eventual locking phenomena due to element with very small "
"intersection with the real domain for example when applying a Dirichlet "
"condition. See for instance [bu-ha2010]_,  [HA-RE2009]_ and [Fa-Po-"
"Re2015]_."
msgstr ""

# 1e978fa0afaf4639b488b52c5f071a2e
#: ../source/userdoc/xfem.rst:183
msgid "Discontinuous field across some level-sets"
msgstr ""

# b7e2a8e192b64d938523ae320e9f9999
#: ../source/userdoc/xfem.rst:185
msgid ""
"The object |gf_mfls| is defined in the file "
":file:`getfem/getfem_mesh_fem_level_set.h`. It is derived from |gf_mf| "
"object and can be used in the same way. It defines a finite element "
"method with discontinuity across the level-sets (it can deal with an "
"arbitrary number of level-sets). The constructor is the following::"
msgstr ""

# eaaa5eb653bc44108726197c3837c2d1
#: ../source/userdoc/xfem.rst:193
msgid ""
"where ``mls`` is a valid mesh of type ``getfem::mesh_level_set`` and "
"``mf`` is the an object of type |gf_mf| which defines the finite element "
"method used for elements which are not cut by the level-sets."
msgstr ""

# 33966f13bdbb49f0b94df32ca8b05c04
#: ../source/userdoc/xfem.rst:197
msgid ""
"To initialize the object or to actualize it when the value of the level-"
"set function is modified, one has to call the method ``mfls.adapt()``."
msgstr ""

# 946165fefe9e4c5d86d7a3b16758d7f2
#: ../source/userdoc/xfem.rst:200
msgid ""
"To represent discontinuous fields, the finite element method is enriched "
"with discontinuous functions which are the product of some Heaviside "
"functions by the shape functions of the finite element method represented"
" by ``mf`` (see [HA-HA2004]_ and [Xfem]_ for more details)."
msgstr ""

# f7fd526dc69c4e1e995a7ba357dfc0b4
#: ../source/userdoc/xfem.rst:207
msgid "Xfem"
msgstr ""

# 1c1e133ea90647f78a116a139244d0f8
#: ../source/userdoc/xfem.rst:209
msgid ""
"The Xfem (see [Xfem]_) consists not only in the enrichment with some "
"Heaviside functions (which is done by the object "
"``getfem::mesh_fem_level_set``) but also the enrichment with asymptotic "
"displacement at the crack tip. There is several manner to enrich with an "
"asymptotic displacement: enrichment only on the element containing the "
"crack tip as in [Xfem]_, enrichment in a fixed size zone as in [LA-PO-RE-"
"SA2005]_ or [Be-Mi-Mo-Bu2005]_, enrichment with a cut-off function as in "
"[CH-LA-RE2008]_ or [NI-RE-CH2011]_ or with an integral matching condition"
" between the enriched and non-enriched zones as in [CH-LA-RE2011]_. The "
"choice in Getfem fell on maximum flexibility to easily implement all "
"possibilities. As it is mainly a transformation of the finite element "
"method itself, two tools have been defined to produce some enriched "
"finite elements::"
msgstr ""

# e6b2029d2dae4c3199b12f904a3e7fe1
#: ../source/userdoc/xfem.rst:214
msgid ""
"where ``mf_sing`` should be a global 'finite element method', in fact "
"just a collection of global functions (with or without a cut-off "
"function) defined thanks to the object "
"``getfem::mesh_fem_global_function`` (see the file "
":file:`src/getfem/getfem_mesh_fem_global_function.h`) and "
"``mf_part_unity`` a basic scalar finite element method. The resulting `` "
"getfem::mesh_fem_product`` is the linear combination of all the product "
"of the shape function of the two given finite element methods, possibly "
"restricted to a sub-set of degrees of freedom of the first finite element"
" method given by the method ``mf_asympt.set_enrichment(enriched_dofs)``."
msgstr ""

# 6a950841e1d348d8b7efabd5187c3d82
#: ../source/userdoc/xfem.rst:216
msgid ""
"Once the asymptotic enrichment is defined, the object "
"``getfem::mesh_fem_sum`` allows to produce the direct sum of two finite "
"element methods. For instance of the one enriched by the Heaviside "
"functions (``getfem::mesh_fem_level_set`` object) and the asymptotic "
"enrichment."
msgstr ""

# 63384f5490744966be6016a63a97ceb6
#: ../source/userdoc/xfem.rst:218
msgid ""
"See :file:`interface/tests/matlab/demo_crack.m`, "
":file:`interface/tests/python/demo_crack.py` or :file:`tests/crack.cc` "
"for some examples of use of these tools."
msgstr ""

# b5e9ce4a4e4347ea9248675312e19532
#: ../source/userdoc/xfem.rst:220
msgid ""
"Additionally, the weak form language defines the two commands "
"``Xfem_plus`` and ``Xfem_minus`` allowing to take into account the jump "
"of any field or derivative of any field across a level-set (see :ref:`ud-"
"gasm-high_xfem`). This a priori allows to write any interface law easily."
msgstr ""

# a56682aa09264c18b97a511bb3a80dc2
#: ../source/userdoc/xfem.rst:223
msgid ""
"Note also that some procedures are available in the file "
":file:`src/getfem/getfem_crack_sif.h` to compute the stress intensity "
"factors in 2D (restricted to homogeneous isotropic linearized "
"elasticity)."
msgstr ""

# cb80b441e3104f47b7ed0d52ffea9eda
#: ../source/userdoc/xfem.rst:228
msgid "Post treatment"
msgstr ""

# 866b6709344d45e3989e566e19239ea8
#: ../source/userdoc/xfem.rst:230
msgid ""
"Several tools are available to represent the solution only on a side of a"
" levels-set or on both taking into account the discontinuity (for Xfem "
"approximation)."
msgstr ""

# 3914748f4db8421b84336d45477bdd1f
#: ../source/userdoc/xfem.rst:232
msgid ""
"When a cut-mesh ``mls`` is used (i.e. a ``getfem::mesh_level_set`` "
"object), is is possible to obtain the set of all sub-elements with the "
"command::"
msgstr ""

# a94fcb7079ac4e118fc90dbe825578b6
#: ../source/userdoc/xfem.rst:236
msgid ""
"where ``mcut`` has to be an empty mesh which will be fill by the sub-"
"elements. Note that the resulting mesh is a non-regular one in the sense "
"that the sub-mesh of all elements are not conformal at the element "
"edges/faces. It is however possible to interolate on a Lagrange fem on "
"this mesh and make a post-treatment with it to correctly represent a "
"discontinuous field."
msgstr ""

# cffee98dba044b0e90af8009360e3b89
#: ../source/userdoc/xfem.rst:238
msgid ""
"Another mean to represent only the interesting part of the solution when "
"a fictitious domain method is used is to use the mesh slices defined by "
"an isovalue level-set (see :ref:`ud-export_slices`)."
msgstr ""

# 3abc38f5555140468af664ee0c7f6779
#: ../source/userdoc/xfem.rst:240
msgid ""
"see for instance files :file:`interface/tests/matlab/demo_crack.m`, "
":file:`interface/tests/python/demo_fictitious_domain.py` and "
":file:`interface/tests/matlab/demo_structural_optimization.m`."
msgstr ""

