# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2017 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-06-22 15:02+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

# ba7e870ecab34be78ef085b5815a3b34
#: ../source/userdoc/bmesh.rst:10
msgid "Build a mesh"
msgstr ""

# 8ace630bc9174a71993fb19237c1e78e
#: ../source/userdoc/bmesh.rst:12
msgid ""
"As a preliminary, you may want to read this short introduction to the "
"|gf| `vocabulary`_."
msgstr ""

# 53b16b86e47b49e7a83402883a5171c8
#: ../source/userdoc/bmesh.rst:15
msgid ""
"|gf| has its own structure to store meshes defined in the files "
":file:`getfem/bgeot_mesh_structure.h` and :file:`getfem/getfem_mesh.h`. "
"The main structure is defined in :file:`getfem/getfem_mesh.h` by the "
"object |gf_m|."
msgstr ""

# cd42e0b9bb58428d900fc178fe33184d
#: ../source/userdoc/bmesh.rst:19
msgid ""
"This object is able to store any element in any dimension even if you mix"
" elements with different dimensions."
msgstr ""

# ad772829071240d69d2c85c128eba0da
#: ../source/userdoc/bmesh.rst:22
msgid ""
"There is only a (very) experimental meshing procedure in |gf| to mesh "
"complex geometries. But you can easily load a mesh from any format (some "
"procedures are in :file:`getfem/getfem_import.h` to load meshes from some"
" public domain mesh generators)."
msgstr ""

# b46c16a71a484f6cb88c64ff4f533f19
#: ../source/userdoc/bmesh.rst:26
msgid ""
"The structure |gf_m| may also contain a description about a region of the"
" mesh, such as a boundary or a set of elements. This is handled via a "
"container of convexes and convex faces, |gf_mr|."
msgstr ""

# e45e4654ec2a454d972060525d52c079
#: ../source/userdoc/bmesh.rst:32
msgid "Add an element to a mesh"
msgstr ""

# 732605faf5a24df5bd703d11f9301a57
#: ../source/userdoc/bmesh.rst:34
msgid "Suppose the variable ``mymesh`` has been declared by::"
msgstr ""

# c8a99e7ce9114725aec59e9f4ef4942e
#: ../source/userdoc/bmesh.rst:38
msgid ""
"then you have two ways to insert a new element to this mesh: from a list "
"of points or from a list of indexes of already existing points."
msgstr ""

# 73b2fb2556074568b462c918555c620e
#: ../source/userdoc/bmesh.rst:41
msgid "To enter a new point on a mesh use the method::"
msgstr ""

# c86d408db0a2497294d7365ec0720b89
#: ../source/userdoc/bmesh.rst:45
msgid ""
"where ``pt`` is of type |bg_bn|. The index ``i`` is the index of this "
"point on the mesh. If the point already exists in the mesh, a new point "
"is not inserted and the index of the already existing point is returned. "
"A mesh has a principal dimension, which is the dimension of its points. "
"It is not possible to have points of different dimensions in a same mesh."
msgstr ""

# 40f9ad4c056a47d7aca7ed1197079be6
#: ../source/userdoc/bmesh.rst:51
msgid "The most basic function to add a new element to a mesh is::"
msgstr ""

# 6d5fedfebea748d9b6e3aab5f523c592
#: ../source/userdoc/bmesh.rst:55
msgid ""
"This is a template function, with ``pgt`` of type |bg_pgt| (basically a "
"pointer to an instance of type |bg_gt|) and ``it`` is an iterator on a "
"list of indexes of already existing points. For instance, if one needs to"
" add a new triangle in a 3D mesh, one needs to define first an array with"
" the indexes of the three points::"
msgstr ""

# 17787cd0e2c84acb96ef75d9893a022a
#: ../source/userdoc/bmesh.rst:65
msgid "then adding the element is done by::"
msgstr ""

# bea556c646c34f639d322ec965adc999
#: ../source/userdoc/bmesh.rst:69
msgid ""
"where ``bgeot::simplex_geotrans(N,1);`` denotes the usual linear "
"geometric transformation for simplices of dimension N."
msgstr ""

# 113fe52e1e0c44c4a908ff79524321d3
#: ../source/userdoc/bmesh.rst:72
msgid "For simplices, a more specialized function exists, which is::"
msgstr ""

# a35f4550529e466f98d05c9f1a7763b3
#: ../source/userdoc/bmesh.rst:76
msgid ""
"It is also possible to give directly the list of points with the "
"function::"
msgstr ""

# 996e3cf5e3aa4bf2b11b9b00b08d1b3e
#: ../source/userdoc/bmesh.rst:80
msgid "where now ``itp`` is an iterator on an array of points. For example::"
msgstr ""

# ae83518634ee40e4816351f0779db887
#: ../source/userdoc/bmesh.rst:88
msgid "It is possible to use also::"
msgstr ""

# 90adf11b33b649d1b90004cda17a3931
#: ../source/userdoc/bmesh.rst:92
msgid ""
"For other elements than simplices, it is still possible to use "
"``mymesh.add_convex_by_points`` or ``mymesh.add_convex`` with the "
"appropriate geometric transformation."
msgstr ""

# 5af6c20186cb4d81bc7b0d578b984399
#: ../source/userdoc/bmesh.rst:96
msgid ""
"``bgeot::parallelepiped_geotrans(N, 1)`` describes the usual "
"transformation for parallelepipeds of dimension ``N`` (quadrilateron for "
"``N=2``, hexahedron for ``N=3``, ...)"
msgstr ""

# bc2d7cd4842d4a989294317bb35523c4
#: ../source/userdoc/bmesh.rst:100
msgid ""
"``bgeot::prism_geotrans(N, 1)`` describes the usual transformation for "
"prisms of dimension ``N`` (usual prism is for ``N=3``. A generalized "
"prism is the product of a simplex of dimension ``N-1`` with a segment)"
msgstr ""

# aa40c4a7fd3847538fe582db74054128
#: ../source/userdoc/bmesh.rst:104
msgid "Specialized functions exist also::"
msgstr ""

# ef35018249254ed7a20846d477d912d8
#: ../source/userdoc/bmesh.rst:111
msgid ""
"The order of the points in the array of points is not important for "
"simplices (except if you care about the orientation of your simplices). "
"For other elements, it is important to respect the vertex order shown in "
":ref:`ud-fig-elem` (first order elements)."
msgstr ""

# 42803255afbc4e219b40cf17f3e25215
#: ../source/userdoc/bmesh.rst:119
msgid "Vertex numeration for usual first order elements"
msgstr ""

# 2f811ebc9c5a431ab8ea4407ee38cf62
#: ../source/userdoc/bmesh.rst:121
msgid ""
"Note that a general rule, including for higher order transformations, is "
"that the vertex numeration follows the one of the corresponding Lagrange "
"finite element method (see  :ref:`ud-appendixa`)."
msgstr ""

# 821a079e7a6e4c87a8ab573e7495d492
#: ../source/userdoc/bmesh.rst:125
msgid "Remove an element from a mesh"
msgstr ""

# 406e3f6f9723430884786fa6bbcc4f34
#: ../source/userdoc/bmesh.rst:127
msgid "To remove an element from a mesh, simply use::"
msgstr ""

# fee3a50fac0746678c1478efb3fb8180
#: ../source/userdoc/bmesh.rst:131
msgid "where ``i`` is the index of the element."
msgstr ""

# d45371a26ce44c70b0a83107b09bad5f
#: ../source/userdoc/bmesh.rst:135
msgid "Simple structured meshes"
msgstr ""

# 53b8ddccaacd4eec9bd8b4c6f05318aa
#: ../source/userdoc/bmesh.rst:137
msgid ""
"For parallelepiped domains, it is possible to obtain structured meshes "
"with simplices, parallelepipeds or prisms elements from three functions "
"defined in :file:`getfem/getfem_regular_meshes.h`."
msgstr ""

# e441c9b335034b8aa29527f71d73b1e8
#: ../source/userdoc/bmesh.rst:141
msgid "The simplest function to use is::"
msgstr ""

# b4918ac27e2c42e08a0506681bcc42c4
#: ../source/userdoc/bmesh.rst:146
msgid ""
"which fills the mesh ``m`` with a regular mesh of "
"simplices/parallelepipeds/prisms (depending on the value of ``pgt``). The"
" number of cells in each direction is given by ``nsubdiv``. The following"
" example builds a mesh of quadratic triangles on the unit square (the "
"mesh can be scaled and translated afterwards)::"
msgstr ""

# 3b8af0eb15ec4bd494cc2a51bda49965
#: ../source/userdoc/bmesh.rst:155
msgid "More specialized regular mesh functions are also available::"
msgstr ""

# 8c21842f5f864a9db5c9e3094ff420ac
#: ../source/userdoc/bmesh.rst:162
msgid ""
"where ``mymesh`` is a mesh variable in which the structured mesh will be "
"built, ``N`` is the dimension (limited to 4 for simplices, 5 for prisms, "
"unlimited for parallelepipeds), ``org`` is of type ``bgeot::base_node`` "
"and represents the origin of the mesh, ``ivect`` is an iterator on an "
"array of ``N`` vectors to build the parallelepiped domain, ``iref`` is an"
" iterator on an array of ``N`` integers representing the number of "
"division on each direction."
msgstr ""

# 99eb92ecda1e4144971a3bd5f5c84ad2
#: ../source/userdoc/bmesh.rst:169
msgid ""
"For instance, to build a mesh with tetrahedrons for a unit cube with "
":math:`10\\times~10\\times~10` cells one can write::"
msgstr ""

# 7f2bbb57ba4944d79c55cb72048797de
#: ../source/userdoc/bmesh.rst:184
msgid ""
"``base_node`` and ``base_small_vector`` are almost identical, they are "
"both ''small'' vector classes (they cannot store more than 16 elements), "
"used to describe geometrical points, and geometrical vectors. Their "
"memory footprint is lower than a ``std::vector``."
msgstr ""

# df23c29f156d42dcab78ecba0cbc11bb
#: ../source/userdoc/bmesh.rst:192
msgid "Mesh regions"
msgstr ""

# 5f57d86b71084e83bc69f4abb33a73bd
#: ../source/userdoc/bmesh.rst:194
msgid ""
"A mesh object can contain many |gf_mr| objects (declaration in "
":file:`getfem/getfem_mesh_region.h`). These objects are containers for a "
"set of convexes and convex faces. They are used to define boundaries, or "
"a partition of the mesh for parallel solvers, etc.::"
msgstr ""

# f3cae55113824aee8150d4375eeec447
#: ../source/userdoc/bmesh.rst:209
msgid "Methods of the |gf_m| object"
msgstr ""

# a6fc294c53224736894de8dca29a592b
#: ../source/userdoc/bmesh.rst:211
msgid "The list is not exhaustive."
msgstr ""

# 09d2c83dadac411e934441aaaf9c6701
#: ../source/userdoc/bmesh.rst:215
msgid "main dimension of the mesh."
msgstr ""

# c41d301f532643a296946949b10fe437
#: ../source/userdoc/bmesh.rst:219
msgid ""
"gives a ``dal::bit_vector`` object which represents all the indexes of "
"valid points of a mesh (see below)."
msgstr ""

# a48a94a6107846da867a2902b6509c16
#: ../source/userdoc/bmesh.rst:224
msgid "gives the point of index ``i`` (a ``bgeot::base_node``)."
msgstr ""

# 1f678fb45199470b84cff0eb84ea303c
#: ../source/userdoc/bmesh.rst:228
msgid ""
"gives a ``dal::bit_vector`` object which represents all the indexes of "
"valid elements of a mesh (see below)."
msgstr ""

# 2a1833d3a98f41cfb265f240b5431718
#: ../source/userdoc/bmesh.rst:233
msgid ""
"gives the description of the structure of element of index ``i``. The "
"function return a |bg_pcs|."
msgstr ""

# cc23bd30a68d429788a900f66c33c19d
#: ../source/userdoc/bmesh.rst:238
msgid "number of faces of element of index ``i``."
msgstr ""

# 4d112ca4f92f4ebdb31aaff71c9f1e91
#: ../source/userdoc/bmesh.rst:242
msgid "number of vertices of element of index ``i``."
msgstr ""

# 6d8ca496f72347fe8e28cbe9ccfed1fc
#: ../source/userdoc/bmesh.rst:246
msgid "intrinsic dimension of element of index ``i``."
msgstr ""

# 59aa8c61b63848d6849692ffc9626072
#: ../source/userdoc/bmesh.rst:251
msgid ""
"number of vertices of the face of local index ``f`` of element of index "
"``i``."
msgstr ""

# b00d8c1cf5fa4b97b51bcf9a322c39d8
#: ../source/userdoc/bmesh.rst:256
msgid ""
"return a container with the local indexes of all vertices of the face of "
"local index ``f`` of element of index ``i``. For instance "
"``mesh.structure_of_convex(i)->ind_points_of_face(f)[0]`` is the local "
"index of the first vertex."
msgstr ""

# 4b6712cdc974452585035d4e70472b75
#: ../source/userdoc/bmesh.rst:263
msgid ""
"gives the structure (a |bg_pcs|) of local index ``f`` of element of index"
" ``i``."
msgstr ""

# 9823634f1aea4d1aa758f2a16e31ab0b
#: ../source/userdoc/bmesh.rst:268
msgid ""
"gives a container with the global indexes of vertices of element of index"
" ``i``."
msgstr ""

# c8de70b4daa2475bb22c82e289bc9c41
#: ../source/userdoc/bmesh.rst:273
msgid ""
"gives a container with the vertices of element of index ``i``. This is an"
" array of ``bgeot::base_node``."
msgstr ""

# 0deeb3bcd5064e549e1eb5e29831ac41
#: ../source/userdoc/bmesh.rst:278
msgid ""
"gives a container with the indexes of all elements attached to the point "
"of global index ``ipt``."
msgstr ""

# 58f8e88fe4b2449ca251361756b3c290
#: ../source/userdoc/bmesh.rst:283
msgid ""
"gives a container with the indexes of all elements in ``mesh`` having the"
" common face of local index ``f`` of element ``ic`` except element "
"``ic``."
msgstr ""

# 1e98d2c464774541975a22ca71641e1f
#: ../source/userdoc/bmesh.rst:289
msgid ""
"gives the index of the first elements in ``mesh`` having the common face "
"of local index ``f`` of element ``ic`` except element ``ic``. return "
"size_type(-1) if none is found."
msgstr ""

# b992a2c913f64be3bdf9e8e59d708d21
#: ../source/userdoc/bmesh.rst:295
msgid ""
"return whether or not the element ``ic`` has a neighbour with respect to "
"its face of local index ``f``."
msgstr ""

# 00dbc119acba44a08efb3569247dfd9b
#: ../source/userdoc/bmesh.rst:300
msgid "delete all elements and points from the mesh."
msgstr ""

# 13db98c3933c4781bffce5350341f7c0
#: ../source/userdoc/bmesh.rst:305
msgid ""
"compact the structure (renumbers points and convexes such that there is "
"no hole in their numbering)."
msgstr ""

# c1903493f3da4ebd84dcd9abd0254aac
#: ../source/userdoc/bmesh.rst:310
msgid ""
"return the geometric transformation of the element of index ``i`` (in a "
"|bg_pgt|). See :ref:`dp` for more details about geometric "
"transformations."
msgstr ""

# e78e8936a15a42529f9f561084ad155b
#: ../source/userdoc/bmesh.rst:315
msgid ""
"gives a ``bgeot::base_small_vector`` representing an outward normal to "
"the element at the face of local index ``f`` at the point of local "
"coordinates (coordinates in the element of reference) ``pt``. The point "
"``pt`` has no influence if the geometric transformation is linear. This "
"is not a unit normal, the norm of the resulting vector is the ratio "
"between the surface of the face of the reference element and the surface "
"of the face of the real element."
msgstr ""

# 059d5fc3d5274c779eba8abe4693c32c
#: ../source/userdoc/bmesh.rst:325
msgid "gives an estimate of the area of convex ``ic``."
msgstr ""

# 9ae1924d621548a1ae9557d87ae5f6aa
#: ../source/userdoc/bmesh.rst:329
msgid "gives a rough estimate of the quality of element ``ic``."
msgstr ""

# 5de3eb2fe50b416dae686c91ada5ceed
#: ../source/userdoc/bmesh.rst:333
msgid "gives an estimate of the radius of element ``ic``."
msgstr ""

# 63d122448b2f43279c9701edd8b79ab8
#: ../source/userdoc/bmesh.rst:337
msgid ""
"return a |gf_mr|. The region is stored in the mesh, and can contain a set"
" of convex numbers and or convex faces."
msgstr ""

# a0a5c4636e5c4fc1915ed6b4e1c4f62a
#: ../source/userdoc/bmesh.rst:342
msgid "returns true if the region of index ``irg`` has been created."
msgstr ""

# ca2d67f9eca94995a282bb27e01fb867
#: ../source/userdoc/bmesh.rst:344
msgid ""
"The methods of the convexes/convex faces container "
"``getfem::mesh_region`` are:"
msgstr ""

# 0c530f0035ab4171b642c6e5bb847f9f
#: ../source/userdoc/bmesh.rst:348
msgid "add the convex of index ``ic`` to the region."
msgstr ""

# 08edd8319f104ce1a814672ccc0641f2
#: ../source/userdoc/bmesh.rst:352
msgid "add the face number ``f`` of the convex ``ic``."
msgstr ""

# 02a4e32331c24f0b89e36533beb475fc
#: ../source/userdoc/bmesh.rst:357
msgid "remove the convex or the convex face from the region."
msgstr ""

# 4c9fed19eb094798b8655641e28d196c
#: ../source/userdoc/bmesh.rst:362
msgid "return true if the convex (or convex face) is in the region."
msgstr ""

# ac71e8c0a4db4e6ab1f7343619ea14cb
#: ../source/userdoc/bmesh.rst:366
msgid "return true if the region does not contain any convex."
msgstr ""

# 1dca6a915ed6483dacc799a39d605abb
#: ../source/userdoc/bmesh.rst:370
msgid "return true if the region does not contain any convex face."
msgstr ""

# 880b600931d9407f8b22c4d4719eb061
#: ../source/userdoc/bmesh.rst:374
msgid ""
"return a ``dal::bit_vector`` containing the list of convexes which are "
"stored (or whose faces are stored) in the region."
msgstr ""

# 9d63f767820940fc93dd174f92b51236
#: ../source/userdoc/bmesh.rst:377
msgid "Iteration over a |gf_mr| should be done with |gf_mrv|::"
msgstr ""

# 9432d15b8cbd45ee95ca320552010c24
#: ../source/userdoc/bmesh.rst:386
msgid "Using |dal_bv|"
msgstr ""

# a1dc4b8df6d24b5484e871b04b34dafa
#: ../source/userdoc/bmesh.rst:388
msgid ""
"The object |dal_bv| (declared in :file:`getfem/dal_bit_vector.h`) is a "
"structure heavily used in |gf|. It is very close to ``std::bitset`` and "
"``std::vector<bool>`` but with additional functionalities to represent a "
"set of non negative integers and iterate over them."
msgstr ""

# 6eff6dc8abb2456b84dc548c4907120c
#: ../source/userdoc/bmesh.rst:393
msgid ""
"If ``nn`` is declared to be a |dal_bv|, the two instructions "
"``nn.add(6)`` or ``nn[6] = true`` are equivalent and means that integer 6"
" is added to the set."
msgstr ""

# bf352f2228574521adc469337b54e922
#: ../source/userdoc/bmesh.rst:397
msgid ""
"In a same way ``nn.sup(6)`` or ``nn[6] = false`` remove the integer 6 "
"from the set. The instruction ``nn.add(6, 4)`` adds 6,7,8,9 to the set."
msgstr ""

# f71c7f8cf9f3434a980b8c130a7dff06
#: ../source/userdoc/bmesh.rst:401
msgid ""
"To iterate on a |dal_bv|, it is possible to use iterators as usual, but, "
"most of the time, as this object represents a set of integers, one just "
"wants to iterate on the integers included into the set. The simplest way "
"to do that is to use the pseudo-iterator |dal_bv_v|."
msgstr ""

# 091d4d4d44d84ba7a71d97ef4115dae7
#: ../source/userdoc/bmesh.rst:407
msgid ""
"For instance, here is the code to iterate on the points of a mesh and "
"print it to the standard output::"
msgstr ""

# 8af820f7257244f29b8d9f15614a41cf
#: ../source/userdoc/bmesh.rst:414
msgid "Face numbering"
msgstr ""

# afd3a4fa4ab6452a9ec4a0234c0cdb5d
#: ../source/userdoc/bmesh.rst:416
msgid ""
"The numeration of faces on usual elements is given in figure :ref:`ud-"
"fig-elemf`."
msgstr ""

# 6ff1171e1e6548c792e316f74b46563a
#: ../source/userdoc/bmesh.rst:423
msgid "faces numeration for usual elements"
msgstr ""

# 5a23046ca03d41cd80c77ddd11621ebe
#: ../source/userdoc/bmesh.rst:425
msgid ""
"Note that, while the convexes and the points are globally numbered in a "
"|gf_m| object, there is no global numbering of the faces, so the only way"
" to refer to a given face, is to give the convex number, and the local "
"face number in the convex."
msgstr ""

# 3df54a988a9a467ba32561f61543d223
#: ../source/userdoc/bmesh.rst:433
msgid "Save and load meshes"
msgstr ""

# 80b6d7c9ab0a4efc99928f85e1f4c9e4
#: ../source/userdoc/bmesh.rst:436
msgid "From |gf| file format"
msgstr ""

# 061b45b4ee504c7fb139c3243e1e778c
#: ../source/userdoc/bmesh.rst:438
msgid ""
"In :file:`getfem/getfem_mesh.h`, two methods are defined to load meshes "
"from file and write meshes to a file."
msgstr ""

# 7ea16f97d8bd43acbc8027bb63d553fe
#: ../source/userdoc/bmesh.rst:443
msgid "save the mesh into a file."
msgstr ""

# 0bb01ab86c644874b666ed50ffe6d35b
#: ../source/userdoc/bmesh.rst:447
msgid "load the mesh from a file."
msgstr ""

# 88121136c2ab465dbe33c950e7cc99a1
#: ../source/userdoc/bmesh.rst:449
msgid ""
"The following is an example of how to load a mesh and extract information"
" on it::"
msgstr ""

# 6acf6105099c41d7bf5ce4bf2c93d51a
#: ../source/userdoc/bmesh.rst:482
msgid "Import a mesh"
msgstr ""

# 4287c09e41894ef48cee8a6922690761
#: ../source/userdoc/bmesh.rst:484
msgid "The file :file:`getfem/getfem_import.h` provides the function::"
msgstr ""

# f273e94eebe8449a9656e1b397cf6750
#: ../source/userdoc/bmesh.rst:488
msgid ""
"Here the string ``fmtfilename`` must contain a descriptor of the file "
"format (\"gid\", \"gmsh\", \"cdb\", \"noboite\", \"am_fmt\", "
"\"emc2_mesh\", or \"structured\"), followed by a colon and the file name "
"(if there is not format descriptor, it is assumed that the file is a "
"native getfem mesh and the ``mesh::read_from_file()`` method is used). "
"Example::"
msgstr ""

# 68af3ecdf5604507ad64ce6f3e6c4f72
#: ../source/userdoc/bmesh.rst:497
msgid "Alternatively the function::"
msgstr ""

# 4dffe7614f784e3492d9dea65f419a45
#: ../source/userdoc/bmesh.rst:502
msgid ""
"can be used in an equivalent manner with the string ``fmt`` being one of "
"the aforementioned format specifiers."
msgstr ""

# 36cd89a31be746f4ab39110477de3911
#: ../source/userdoc/bmesh.rst:505
msgid ""
"The \"gid\" format specifier is for meshes generated by `GiD`_ and "
"\"gmsh\" is for meshes generated by the open-source mesh generator "
"`Gmsh`_. The \"cdb\" format specifier is for reading meshes from `ANSYS "
"<http://www.ansys.com>`_ models exported in blocked format with the "
"CDWRITE command. Currently the `ANSYS`_ element types "
"42,45,73,82,87,89,90,92,95,162,182,183,185,186,187 and 191 can be "
"imported, this however does not include any finite element techology "
"linked to these elements but only their geometry. The \"noboite\" format "
"is for TetMesh-GHS3D, and the \"am_fmt\" and \"emc2_mesh\" are for files "
"built with `EMC2`_ (but 2D only)."
msgstr ""

# 93afd729151f46a7b301e6eaa80091f1
#: ../source/userdoc/bmesh.rst:515
msgid ""
"The \"structured\" format is just a short specification for regular "
"meshes: the rest of ``fmtfilename`` in that case is not a filename, but a"
" string whose format is following::"
msgstr ""

# 8ec3b5a277504388aadb4ddddaad6d0e
#: ../source/userdoc/bmesh.rst:525
msgid ""
"where ``GT`` is the name of the geometric transformation, ``NSUBDIV`` a "
"vector of the number of subdivisions in each coordinate (default value "
"2), ``ORG`` is the origin of the mesh (default value ``[0,0,...]``), "
"``SIZES`` is a vector of the sizes in each direction (default value ``[1,"
" 1, ...]`` and if ``NOISED=1`` the nodes of the interior of the mesh are "
"randomly \"shaken\" (default value ``NOISED=0``). In that string, all the"
" parameters are optional except ``GT``."
msgstr ""

