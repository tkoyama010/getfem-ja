# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2017 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-06-22 15:02+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

# 2ca2cb621332420ab6175a3715b9bb9d
#: ../source/userdoc/bfem.rst:12
msgid "Build a finite element method on a mesh"
msgstr ""

# b2fe3fdef0d9436694f694b70380eb14
#: ../source/userdoc/bfem.rst:15
msgid ""
"The object |gf_mf| defined in :file:`getfem/getfem_mesh_fem.h` is "
"designed to describe a finite element method on a whole mesh, i.e. to "
"describe the finite element space on which some variables will be "
"described. This is a rather complex object which is central in |gf|. "
"Basically, this structure describes the finite element method on each "
"element of the mesh and some additional optional transformations. It is "
"possible to have an arbitrary number of finite element descriptions for a"
" single mesh. This is particularly necessary for mixed methods, but also "
"to describe different data on the same mesh. One can instantiate a "
"|gf_mf| object as follows::"
msgstr ""

# ac4929689e1141f8b331b41f77027164
#: ../source/userdoc/bfem.rst:27
msgid ""
"where ``mymesh`` is an already existing mesh. The structure will be "
"linked to this mesh and will react when modifications will be done on it."
msgstr ""

# 5476446b66a444cdb6453d5cac40ac1c
#: ../source/userdoc/bfem.rst:30
msgid ""
"It is possible to specify element by element the finite element method, "
"so that element of mixed types can be treated, even if the dimensions are"
" different. For usual elements, the connection between two elements is "
"done when the two elements are compatibles (same degrees of freedom on "
"the common face). A numeration of the degrees of freedom is automatically"
" done with a Cuthill Mc Kee like algorithm. You have to keep in mind that"
" there is absolutely no connection between the numeration of vertices of "
"the mesh and the numeration of the degrees of freedom. Every |gf_mf| "
"object has its own numeration."
msgstr ""

# 5245e291518d4b9c84e20e5bb32b93f6
#: ../source/userdoc/bfem.rst:39
msgid "There are three levels in the |gf_mf| object:"
msgstr ""

# 1a606bb644d846d89eb93cc852c2010c
#: ../source/userdoc/bfem.rst:41
msgid ""
"The element level: one finite element method per element. It is possible "
"to mix the dimensions of the elements and the property to be vectorial or"
" scalar."
msgstr ""

# 158590b82d3b45b4b7c171ccc5c4ef97
#: ../source/userdoc/bfem.rst:44
msgid ""
"The optional vectorization/tensorization (the qdim in getfem jargon, see "
"`vocabulary`_). For instance to represent a displacement or a tensor "
"field in continuum mechanics. Scalar elements are used componentwise. "
"Note that you can mix some intrinsic vectorial elements (Raviart-Thomas "
"element for instance) which will not be vectorized and scalar elements "
"which will be."
msgstr ""

# 8b1e6ccc863449e3bab871d85ad37f2e
#: ../source/userdoc/bfem.rst:52
msgid ""
"(|gf| version 4.0) The optional additional linear transformation "
"(reduction) of the degrees of freedom. It will consist in giving two "
"matrices, the reduction matrix and the extension matrix. The reduction "
"matrix should transform the basic dofs into the reduced dofs (the number "
"of reduced dofs should be less or equal than the number of basic dofs). "
"The extension matrix should describe the inverse transformation. The "
"product of the reduction matrix with the extension matrix should be the "
"identity matrix (ensuring in particular that the two matrices are of "
"maximal rank). This optional transformation can be used to reduce the "
"finite element space to a certain region (tipically a boundary) or to "
"prescribe some matching conditions between non naturally compatible fems "
"(for instance fems with different degrees)."
msgstr ""

# 0130477864eb403a89cfbfb3ac9b64d8
#: ../source/userdoc/bfem.rst:64
msgid ""
"One has to keep in mind this construction manipulating the degrees of "
"freedom of a |gf_mf| object."
msgstr ""

# 55d501985b8147ffbc4b646c0b098abc
#: ../source/userdoc/bfem.rst:69
msgid "First level: manipulating fems on each elements"
msgstr ""

# d31d1793e74540a49525606778024ac6
#: ../source/userdoc/bfem.rst:71
msgid ""
"To select a particular finite element method on a given element, use the "
"method::"
msgstr ""

# 6ad6d18bbf0f40d386f8af036bc6bae2
#: ../source/userdoc/bfem.rst:75
msgid ""
"where ``i`` is the index of the element and ``pf`` is the descriptor (of "
"type |gf_pfem|, basically a pointer to an object which inherits from "
"|gf_vfem|) of the finite element method. Alternative forms of this member"
" function are::"
msgstr ""

# 487acfea45654fd39183b0e9d92e2a8f
#: ../source/userdoc/bfem.rst:83
msgid ""
"which set the finite elements for either the convexes listed in the "
"``bit_vector cvs``, or all the convexes of the mesh. Note that the last "
"method makes a call to the method::"
msgstr ""

# 040bc05f31e64495ae1647d0b899678c
#: ../source/userdoc/bfem.rst:89
msgid ""
"which defines the default finite element method which will be "
"automatically added on new elements of the mesh (this is very useful, for"
" instance, when a refinement of the mesh is performed)."
msgstr ""

# 4c350450eb0b4411af78cdc909c80fe3
#: ../source/userdoc/bfem.rst:93
msgid ""
"Descriptors for finite element methods and integration methods are "
"available thanks to the following function::"
msgstr ""

# e2df23502fc3455b9b00d9e626357142
#: ../source/userdoc/bfem.rst:98
msgid ""
"where ``\"name of method\"`` is to be chosen among the existing methods. "
"A name of a method can be retrieved thanks to the following functions::"
msgstr ""

# 9b1540450ac742119004945cd13025b4
#: ../source/userdoc/bfem.rst:103
msgid ""
"A non exhaustive list (see :ref:`ud-appendixa` or "
":file:`getfem/getfem_fem.h` for exhaustive lists) of finite element "
"methods is given by:"
msgstr ""

# 3542439f98ff4844b4b291c5aa3d08a1
#: ../source/userdoc/bfem.rst:106
msgid ""
"``\"FEM_PK(n,k)\"``: Classical :math:`P_K` methods on simplexes of "
"dimension ``n`` with degree ``k`` polynomials."
msgstr ""

# 66d5572e954d424d9d3ede154ff40d0e
#: ../source/userdoc/bfem.rst:109
msgid ""
"``\"FEM_QK(n,k)\"``: Classical :math:`Q_K` methods on parallelepiped of "
"dimension ``n``. Tensorial product of degree ``k`` :math:`P_K` method on "
"the segment."
msgstr ""

# 2252aa0643d14e808ebfe4940004144a
#: ../source/userdoc/bfem.rst:112
msgid ""
"``\"FEM_PK_PRISM(n,k)\"``: Classical methods on prism of dimension ``n``."
" Tensorial product of two degree ``k`` :math:`P_K` method."
msgstr ""

# eb83e91b92f943aa8f55c5d0a5c5ad56
#: ../source/userdoc/bfem.rst:115
msgid ""
"``\"FEM_PRODUCT(a,b)\"``: Tensorial product of the two polynomial finite "
"element method ``a`` and ``b``."
msgstr ""

# a7bc1aeb59da4e128e6578ac9274e6f7
#: ../source/userdoc/bfem.rst:118
msgid ""
"``\"FEM_PK_DISCONTINUOUS(n,k)\"``: discontinuous :math:`P_K` methods on "
"simplexes of dimension ``n`` with degree ``k`` polynomials."
msgstr ""

# f140a82a45e64e02951fc4d939d127ec
#: ../source/userdoc/bfem.rst:121
msgid ""
"An alternative way to obtain a Lagrange polynomial fem suitable for a "
"given geometric transformation is to use::"
msgstr ""

# 15aad2eabeae474f883c2c1772d8c7a8
#: ../source/userdoc/bfem.rst:129
msgid "The |mf| can call directly these functions via::"
msgstr ""

# 81393275d77d43049f8f9f20b0af056f
#: ../source/userdoc/bfem.rst:138
msgid "Some other methods:"
msgstr ""

# 26c04e104e8d4138b6a043da463ab5b1
#: ../source/userdoc/bfem.rst:142
msgid "Set of indexes (a |dal_bv|) on which a finite element method is defined."
msgstr ""

# 1315958a97bb4b71926b0eb3daf3633f
#: ../source/userdoc/bfem.rst:146
msgid "gives a reference to the linked mesh."
msgstr ""

# c3660aa0767d4caa929e219d3d086b59
#: ../source/userdoc/bfem.rst:150
msgid ""
"gives a descriptor on the finite element method defined on element of "
"index ``i`` (does not take into account the qdim nor the optional "
"reduction)."
msgstr ""

# c9b58ef3bb6b480f9db1131c2ca09b7c
#: ../source/userdoc/bfem.rst:155
msgid "Clears the structure, no finite element method is still defined."
msgstr ""

# f52bd2bc6d57479c80d66dd105294c15
#: ../source/userdoc/bfem.rst:159
msgid "Examples"
msgstr ""

# 063262a2199343ea9b3186a67a4f148d
#: ../source/userdoc/bfem.rst:161
msgid ""
"For instance if one needs to have a description of a :math:`P_1` finite "
"element method on a triangle, the way to set it is::"
msgstr ""

# a0fdb1987843449083f32647ee72c9c6
#: ../source/userdoc/bfem.rst:166
msgid ""
"where ``i`` is still the index of the triangle. It is also possible to "
"select a particular method directly on a set of element, passing to "
"``mf.set_finite_element`` a |dal_bv| instead of a single index. For "
"instance::"
msgstr ""

# bc93b29e800848539bf4437052a6968f
#: ../source/userdoc/bfem.rst:173
msgid "selects the method on all the elements of the mesh."
msgstr ""

# acc1214b710f415885ef32e91a371dd3
#: ../source/userdoc/bfem.rst:177
msgid "Second level: the optional \"vectorization/tensorization\""
msgstr ""

# d3aa870d7ab44468ba27885a5c089a50
#: ../source/userdoc/bfem.rst:179
msgid ""
"If the finite element represents an unknown which is a vector field, the "
"method ``mf.set_qdim(Q)`` allows set the target dimension for the "
"definition of the target dimension :math:`Q`."
msgstr ""

# 9f22cbd075d44697a87e0807b3c1b5e2
#: ../source/userdoc/bfem.rst:182
msgid ""
"If the target dimension :math:`Q` is set to a value different of "
":math:`1`, the scalar FEMs (such as :math:`P_k` fems etc.) are "
"automatically \"vectorized\" from the |mf| object point of view, i.e. "
"each scalar degree of freedom appears :math:`Q` times in order to "
"represent the :math:`Q` components of the vector field. If an "
"intrinsically vectorial element is used, the target dimension of the "
"``fem`` and the one of the |mf| object have to match. To sum it up,"
msgstr ""

# ca7271e1517345fdba33485526543908
#: ../source/userdoc/bfem.rst:189
msgid ""
"if the fem of the :math:`ith` element is intrinsically a vector FEM, "
"then::"
msgstr ""

# df08d18ac514457c86a924a862d69eec
#: ../source/userdoc/bfem.rst:195
msgid "if the fem has a ``target_dim`` equal to :math:`1`, then::"
msgstr ""

# 7304241323c74018b169a2a6bb850e27
#: ../source/userdoc/bfem.rst:199
msgid ""
"Additionally, if the field to be represented is a tensor field instead of"
" a vector field (for instance the stress or strain tensor field in "
"elasticity), it is possible to specify the tensor dimensions with the "
"methods::"
msgstr ""

# 460851ab86b246feac2ce572c3cdf4f2
#: ../source/userdoc/bfem.rst:205
msgid ""
"respectively for a tensor field of order two, four and arbitrary (but "
"limited to 6). For most of the operations, this is equivalent to declare "
"a vector field of the size the product of the dimensions. However, the "
"declared tensor dimensions are taken into account into the high level "
"generic assembly. Remember that the components inside a tensor are stored"
" in Fortran order."
msgstr ""

# a1fcfd6f3d844d4b9804679c0630dbb6
#: ../source/userdoc/bfem.rst:209
msgid ""
"At this level are defined the basic degrees of freedom. Some methods of "
"the |gf_mf| allows to obtain information on the basic dofs:"
msgstr ""

# 72fae17bb4e54ce0a8dc7ca5880f74f6
#: ../source/userdoc/bfem.rst:214
msgid ""
"gives the number of basic degrees of freedom on the element of index "
"``i``."
msgstr ""

# 1c314811c7514bdfbb57ee23f2dcd2b0
#: ../source/userdoc/bfem.rst:218
msgid ""
"gives a container (an array) with all the global indexes of the basic "
"degrees of freedom of element of index ``i``."
msgstr ""

# 68cb93c409b7428290b35ea6e89e6635
#: ../source/userdoc/bfem.rst:223
msgid ""
"gives a ``bgeot::base_node`` which represents the point associated with "
"the basic dof of local index ``j`` on element of index ``i``."
msgstr ""

# 4901679a440140de8d1ff2313ee0220e
#: ../source/userdoc/bfem.rst:228
msgid ""
"gives a ``bgeot::base_node`` which represents the point associated with "
"the basic dof of global index ``j``."
msgstr ""

# a3882fdb197341ec9a67695e94ea3077
#: ../source/userdoc/bfem.rst:233
msgid ""
"gives a ``bgeot::base_node`` which represents the point associated with "
"the basic dof of local index ``j`` on element of index ``i`` in the "
"coordinates of the reference element."
msgstr ""

# 9019dda17fe14bd08026b6b44f9f6580
#: ../source/userdoc/bfem.rst:239
msgid ""
"gives the index of the first element on which the basic degree of freedom"
" of global index ``j`` is defined."
msgstr ""

# 2f507798d0b24d74937b649e797f812a
#: ../source/userdoc/bfem.rst:244
msgid "gives the total number of different basic degrees of freedom."
msgstr ""

# 7c0b4607c5404b51b71e44e96bc7a896
#: ../source/userdoc/bfem.rst:248
msgid "gives the target dimension ``Q``."
msgstr ""

# fe1514c6f95243ac8763e6c63f69718d
#: ../source/userdoc/bfem.rst:252
msgid ""
"Return a |dal_bv| which represents the indices of basic dof which are in "
"the set of convexes or the set of faces of index ``i`` (see the |gf_m| "
"object)."
msgstr ""

# de7ed41bbbd543389d917b2ee2af4782
#: ../source/userdoc/bfem.rst:257
msgid ""
"Return a |dal_bv| which represents the indices of dof which are in the "
"set of convexes or the set of faces of index ``i`` (see the |gf_m| "
"object). For a reduced mesh_fem, a dof is lying on a region if its "
"potential corresponding shape function is nonzero on this region. The "
"extension matrix is used to make the correspondence between basic and "
"reduced dofs."
msgstr ""

# 2fb50a2f98af4e11a4e1e35bea9a78b1
#: ../source/userdoc/bfem.rst:265
msgid "Third level: the optional linear transformation (or reduction)"
msgstr ""

# b979f19b634b4866a6942c121914ba95
#: ../source/userdoc/bfem.rst:267
msgid ""
"As described above, it is possible to provide two matrices, a reduction "
"matrix :math:`R` and an extension matrix :math:`E` which will describe a "
"linear transformation of the degrees of freedom. If :math:`V` is the "
"vector of basic degrees of freedom, then :math:`U=RV` will be the vector "
"of reduced degrees of freedom. Contrarily, given a vector :math:`U` of "
"reduced dof, :math:`V=EU` will correspond to a vector of basic dof. In "
"simle cases, :math:`E` will be simply the transpose of :math:`R`. NOTE "
"that every line of the extension matrix should be sparse. Otherwise, each"
" assembled matrix will be plain !"
msgstr ""

# 90f7065e391a49b89a214beaee8c0efe
#: ../source/userdoc/bfem.rst:276
msgid ""
"A natural condition is that :math:`RE = I` where :math:`I` is the "
"identity matrix."
msgstr ""

# 049bfb60b23548efb36186ecc0fa17eb
#: ../source/userdoc/bfem.rst:280
msgid ""
"gives the total number of different degrees of freedom. If the optional "
"reduction is used, this will be the number of columns of the reduction "
"matrix. Otherwise it will return the number of basic degrees of freedom."
msgstr ""

# b12bdb00f8644f5ba1001eb213151915
#: ../source/userdoc/bfem.rst:286
msgid "return a boolean. True if the reduction is used."
msgstr ""

# 9dfdfa0a80874509a0fb9bbd76168225
#: ../source/userdoc/bfem.rst:290
msgid "return a const reference to the reduction matrix :math:`R`."
msgstr ""

# d15ab90f4b744acebb2db98d59c45bea
#: ../source/userdoc/bfem.rst:294
msgid "return a const reference to the extension matrix :math:`E`."
msgstr ""

# 8f182e9cbb18407f964c73f012ba1d20
#: ../source/userdoc/bfem.rst:298
msgid ""
"Set the reduction and extension matrices to ``R`` and ``E`` and validate "
"their use."
msgstr ""

# c39f26380b5c4f3eb8768f806b3afbea
#: ../source/userdoc/bfem.rst:303
msgid ""
"Where :math:`b` is a boolean. Cancel the reduction if :math:`b` is false "
"and validate it if ``b`` is true. If ``b`` is true, the extension and "
"reduction matrices have to be set previously."
msgstr ""

# d6854d2cbeca45d89a28d917e8c59ea6
#: ../source/userdoc/bfem.rst:309
msgid ""
"Set the reduction and extension matrices corresponding to keep only the "
"basic dofs present in ``idof``. The parameter ``idof`` is either a "
"|dal_bv| or a ``std::set<size_type>``. This is equivalent to the use of a"
" ``getfem::partial_mesh_fem`` object."
msgstr ""

# 4559c84dbd9d420d99442653ff718b6a
#: ../source/userdoc/bfem.rst:316
msgid "Obtaining generic |mf|'s"
msgstr ""

# 98a4c7c93f6e4edbaa5938566a121079
#: ../source/userdoc/bfem.rst:318
msgid "It is possible to use the function::"
msgstr ""

# c7878f237fb94509a73d76974a9d35b5
#: ../source/userdoc/bfem.rst:322
msgid ""
"to get a classical polynomial |mf| of order :math:`K` on the given "
"``mymesh``. The returned |mf| will be destroyed automatically when its "
"linked mesh is destroyed. All the |mf| built by this function are stored "
"in a cache, which means that calling this function twice with the same "
"arguments will return the same |mf| object. A consequence is that you "
"should NEVER modify this |mf|!"
msgstr ""

# c35fadbbf6634294a827ae9734c18b55
#: ../source/userdoc/bfem.rst:330
msgid "The partial_mesh_fem object"
msgstr ""

# 38617f3e91d940fe83c039776be37b0b
#: ../source/userdoc/bfem.rst:332
msgid ""
"The ``getfem::partial_mesh_fem`` object defined in the file "
"``getfem_partial_mesh_fem.h`` allows to reduce a |gf_mf| object to a set "
"of dofs. The interest is this is not a complete description of a finite "
"element method, it refers to the original |gf_mf| and just add reduction "
"and extension matrices. For instance, you can reduce a |mf| obtained by "
"the function ``getfem::classical_mesh_fem(mesh, K)`` to obtain a finite "
"element method on a mesh region (which can be a boundary). The "
"``getfem::partial_mesh_fem`` is in particular used to obtain multiplier "
"description to prescribed boundary conditions."
msgstr ""

# 599bd733aa5048ac9be635244d9e893b
#: ../source/userdoc/bfem.rst:342
msgid ""
"The declaration of a ``getfem::partial_mesh_fem`` object is the "
"following::"
msgstr ""

# ce631c269371400480d59a544967c4ef
#: ../source/userdoc/bfem.rst:346
msgid "Then, one has to call the adapt method as follows::"
msgstr ""

# 5a0b602f932e4bf5a03f38836e3c7f4f
#: ../source/userdoc/bfem.rst:350
msgid ""
"where ``kept_dof`` and ``rejected_elt`` are some |dal_bv|. ``kept_dof`` "
"is the list of dof indices of the original |mf| ``mf`` to be kept. "
"``rejected_elt`` is an optional parameter that contains a list of element"
" indices on which the ``getfem::partial_mesh_fem`` states that there is "
"no finite element method. This is to avoid unnecessary computations "
"during assembly procedures."
msgstr ""

# 985d258c3d284269a6e0da4a5052572e
#: ../source/userdoc/bfem.rst:7
msgid "fem"
msgstr ""

# 985d258c3d284269a6e0da4a5052572e
#: ../source/userdoc/bfem.rst:7
msgid "mesh"
msgstr ""

# 985d258c3d284269a6e0da4a5052572e
#: ../source/userdoc/bfem.rst:7
msgid "mesh_fem"
msgstr ""

