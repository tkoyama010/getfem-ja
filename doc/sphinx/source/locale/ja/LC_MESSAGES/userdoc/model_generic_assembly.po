# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2017 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-06-22 15:02+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

# 63f9918160cd4f2ca792d8dc2e288273
#: ../source/userdoc/model_generic_assembly.rst:13
msgid "Generic assembly bricks"
msgstr ""

# 2ebd0156134d43a985db396ec4abafe7
#: ../source/userdoc/model_generic_assembly.rst:16
msgid ""
"A mean to add a term either on one variable or on several ones is to "
"directly use the weak form language described in Section :ref:`ud-gasm-"
"high`. The more general way is to use::"
msgstr ""

# 4d3220f7bbe54f26bed3cabeae038dd6
#: ../source/userdoc/model_generic_assembly.rst:21
msgid ""
"This adds a brick to the model ``md``, using the integration method "
"``mim``, the assembly string ``expr`` on the mesh region ``region``. If "
"the result is symmetric, you can specify it on the 5th argument and if it"
" is coercive on the 6th argument. The latter indications of symmetry and "
"coercivness are used to determine the right linear solver. If you are not"
" so sure, it is preferable not to indicate anything."
msgstr ""

# af6759c3340c4546905a99ae6d808ef4
#: ../source/userdoc/model_generic_assembly.rst:23
msgid ""
"However, this brick consider that the expression is nonlinear. This brick"
" is especially indicated to obtain nonlinear coupled terms between "
"several variables. This means in particular that the assembly of the term"
" is performed at each call of the assembly of the model and that a Newton"
" algorithm will be used to solve the problem. If the term is indeed "
"linear, you should use instead::"
msgstr ""

# 9fd8be57b2fd487a9750a9b61ad6b61d
#: ../source/userdoc/model_generic_assembly.rst:28
msgid ""
"with the same arguments. Conversely, this brick alway assume that the "
"term corresponding to ``expr`` is linear and the assembly will be "
"performed only once if the data used do not change. Thus, you have to "
"care that your expression is indeed linear (affine in fact) with respect "
"to each variable. Otherwise, the result is of course not guaranted. "
"Source terms in the expression are taken into account. Still for linear "
"problem, it is possible to perform the assembly of a sole source term "
"thanks to::"
msgstr ""

# c3e88f76b5cf4bb8ad0d7f3b453a773e
#: ../source/userdoc/model_generic_assembly.rst:32
msgid ""
"with again the same arguments except the symmetry and coercivness. This "
"brick performs the assembly of the corresponding order 1 term (residual "
"vector) and add it as a right hand side to the problem. The assembly will"
" be performed only once, so the term should not depend on the variables "
"of the model (but could depend of course on the constants)."
msgstr ""

# a9401ac871ad4c96b02abc078710a11b
#: ../source/userdoc/model_generic_assembly.rst:35
msgid ""
"For instance, if one wants to solve a Poisson problem on a predefined "
"variable ``u`` of the model, one may use the corresponding pre-defined "
"bricks (see below) or simply use::"
msgstr ""

# 3ef911af2a3e4974bb33207fba2fd1e1
#: ../source/userdoc/model_generic_assembly.rst:39
msgid ""
"where ``F`` is a pre-defined constant of the model representing the right"
" hand side. Of course, doing so, Newton's algorithms will be called. So, "
"the more appropriate manner is to use the linear bricks as follows::"
msgstr ""

# 23b6939e2dbf4df69c65d9f95dfc5bab
#: ../source/userdoc/model_generic_assembly.rst:49
msgid ""
"Note that for the moment, the use of the weak form language is not "
"possible for complex valued problems."
msgstr ""

# dce821aa54324316b64e28d6aea6f86e
#: ../source/userdoc/model_generic_assembly.rst:7
msgid "models"
msgstr ""

# dce821aa54324316b64e28d6aea6f86e
#: ../source/userdoc/model_generic_assembly.rst:7
msgid "model bricks"
msgstr ""

