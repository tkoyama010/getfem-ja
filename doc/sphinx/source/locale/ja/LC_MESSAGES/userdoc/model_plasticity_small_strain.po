# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2017 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-06-22 15:02+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

# 4817b71883974b26aa8adc91865a4b7a
#: ../source/userdoc/model_plasticity_small_strain.rst:14
msgid "Small strain plasticity"
msgstr "小さなひずみ可塑性\n"

# ae996912f0ef4b5c838415bcc91e6134
#: ../source/userdoc/model_plasticity_small_strain.rst:16
msgid ""
"A framework for the approximation of plasticity models in |gf|. See in "
":file:`src/getfem_plasticity.cc` and :file:`interface/src/gf_model_set.cc` "
"for the brick implementation and to extend the implementation to new "
"plasticity models."
msgstr ""
"|gf| における可塑性モデルの近似の枠組み。要素実装のための：file： `src / getfem_plasticity.cc`と：file：`"
" interface / src / gf_model_set.cc`を参照し、実装を新しい可塑性モデルに拡張してください。\n"

# d89816881da7403c8705312061d4c573
#: ../source/userdoc/model_plasticity_small_strain.rst:20
msgid "Theoretical background"
msgstr "理論的背景\n"

# 4cb5f74fe8c244a1a5923d8629f1dc68
#: ../source/userdoc/model_plasticity_small_strain.rst:22
msgid ""
"We present a short introduction to small strain plasticity. We refer mainly "
"to [SI-HU1998]_ and [SO-PE-OW2008]_ for a more detailed presentation."
msgstr ""
"我々は、小さなひずみ可塑性について簡単に紹介する。より詳細な説明については、主に[SI-HU1998] _および[SO-PE-OW2008] "
"_を参照してください。\n"

# 5dfffa791bc340298e1a0312b8f7736a
#: ../source/userdoc/model_plasticity_small_strain.rst:25
msgid "Additive decomposition of the small strain tensor"
msgstr "小さなひずみテンソルの加算分解\n"

# 141a1891da2549a1aeae952bc828ce8b
#: ../source/userdoc/model_plasticity_small_strain.rst:27
msgid ""
"Let :math:`\\Omega \\subset \\R^3` be the reference configuration of a "
"deformable body and :math:`u : \\Omega \\rightarrow \\R^3` be the "
"displacement field. Small strain plasticity is based on the additive "
"decomposition of the small strain tensor :math:`\\varepsilon(u) = "
"\\Frac{\\nabla u + \\nabla u^T}{2}` in"
msgstr ""
"let：math： `\\ omega \\ subset \\ R ^ 3`は変形可能なボディの参照設定であり、math：` u：\\ Omega "
"\\ rightarrow \\ R ^ "
"3`はディスプレースメントフィールドです。小さなひずみの可塑性は、小さなひずみテンソルの加法分解に基づいています。数学的には、次のようになります。\n"

# d3c1f57d6806421fbd8ef0c935b91037
#: ../source/userdoc/model_plasticity_small_strain.rst:32
msgid ""
"where :math:`\\varepsilon^e` is the elastic part of the strain tensor and "
":math:`\\varepsilon^p` the plastic one."
msgstr ""
"ここで、数学： `\\ varepsilon ^ e`はひずみテンソルの弾性部分であり、数学的にはプラスチックの\\ varepsilon ^ "
"pです。\n"

# ef0ac3168e784dac866f77f0eda0d056
#: ../source/userdoc/model_plasticity_small_strain.rst:35
msgid "Internal variables, free energy potential and elastic law"
msgstr "内部変数、自由エネルギーポテンシャル、弾性法則\n"

# 336e819dadfb4e6d9255c0691456e602
#: ../source/userdoc/model_plasticity_small_strain.rst:37
msgid "We consider"
msgstr "我々は考慮する\n"

# 0685b99427e14c6a88a713e952ec8c24
#: ../source/userdoc/model_plasticity_small_strain.rst:42
msgid ""
"a vector field of :math:`d_{\\alpha}` strain type internal variables "
"(:math:`d_{\\alpha} = 0` if no internal variables are considered). We "
"consider also a free energy potential"
msgstr "内部変数が考慮されていない場合は、dath {\\ alpha} = 0となります。自由エネルギーポテンシャルも考慮する\n"

# a7e570350cb5422c9ce347e9fafe3553
#: ../source/userdoc/model_plasticity_small_strain.rst:47
msgid "such that corresponding stress type variables are determined by"
msgstr "対応する応力タイプ変数が\n"

# 3c7389e22ad74bd8b3c49b7bfc6fd005
#: ../source/userdoc/model_plasticity_small_strain.rst:52
msgid ""
"where :math:`\\sigma` is the Cauchy stress tensor and :math:`A` the stress "
"type internal variables. The plastic dissipation is given by"
msgstr "ここで、math： `\\ sigma`はCauchyの応力テンソルであり、mathは` A`の応力タイプの内部変数です。プラスチックの散逸は\n"

# 0a3f00dbfd074038a71c31fd5f7f1382
#: ../source/userdoc/model_plasticity_small_strain.rst:58
msgid ""
"In the standard cases, :math:`\\psi(\\varepsilon^e, \\alpha)` is decomposed "
"into"
msgstr "標準の場合、 :math:`\\ psi（\\ varepsilon ^ e、\\ alpha）` は次のように分解されます。\n"

# 3d5747fda0e24d6f9403c9e59c0f234b
#: ../source/userdoc/model_plasticity_small_strain.rst:62
msgid ""
"In the case of linearized elasticity, one has :math:`\\psi^e(\\varepsilon^e)"
" = \\frac{1}{2} ({\\cal A}\\varepsilon^e) :\\varepsilon^e` where "
":math:`{\\cal A}` is the fourth order elasticity tensor. For isotropic "
"linearized elasticity this expression reduces to "
":math:`\\psi^e(\\varepsilon^e) = \\mu \\mbox{dev}(\\varepsilon^e) : "
"\\mbox{dev}(\\varepsilon^e) + \\frac{1}{2} K (\\mbox{tr}(\\varepsilon^e))^2`"
" where :math:`\\mu` is the shear modulus and :math:`K = \\lambda + 2\\mu/3` "
"is the bulk modulus."
msgstr ""
"線形化された弾性の場合、計算は：\\ psi ^ e（\\ varepsilon ^ e）= \\ frac {1} {2}（{\\ cal A} \\"
" varepsilon ^ e）：\\ varepsilon ^ e` ：math： `{\\ cal "
"A}`は4次の弾性テンソルです。等方性線形弾性の場合、この式は次のようになります。math： `\\ psi ^ e（\\ varepsilon ^ "
"e）= \\ mu \\ mbox {dev}（\\ varepsilon ^ e） math： `\\ mu`はせん断弾性率であり、mathは` K "
"= \\lambda + 2 \\ mu / s 'であり、 3はバルク弾性率である。\n"

# 97eef9968c4d4d09b09e2a25216d2241
#: ../source/userdoc/model_plasticity_small_strain.rst:67
msgid "Plastic potential, yield function and plastic flow rule"
msgstr "塑性ポテンシャル、降伏関数、塑性流動ルール\n"

# e7577bbf498e4eb79d340b8c31658ec9
#: ../source/userdoc/model_plasticity_small_strain.rst:69
msgid ""
"Plastic yielding is supposed to occur when the stress attains a critical "
"value. This limit is determined by a yield function :math:`f(\\sigma, A)` "
"and the condition"
msgstr ""
"応力が臨界値に達すると、塑性降伏が起こると考えられる。この限度は、yield関数によって決定されます：math： `f（\\ "
"sigma、A）`と条件\n"

# fc543de7c8674d7b978772ff05c29cf7
#: ../source/userdoc/model_plasticity_small_strain.rst:73
msgid ""
"The surface :math:`f(\\sigma, A) = 0` is the yield surface where the plastic"
" deformation may occur."
msgstr "表面 :math:`f（\\ sigma、A）= 0` は、塑性変形が起こる降伏面です。\n"

# 9a102f28b98940bebcdaaed1d249baa7
#: ../source/userdoc/model_plasticity_small_strain.rst:75
msgid ""
"Let us also consider the plastic potential :math:`\\Psi(\\sigma, A)`, "
"(convex with respect to its both variables) which determines the plastic "
"flow direction in the sense that the flow rule is defined as"
msgstr ""
"また、塑性ポテンシャルを考慮してみましょう。フロー規則が次のように定義されているという意味で、プラスチックの流れ方向を決定する数学： `\\ "
"Psi（\\ sigma、A）`（両方の変数に関して凸です）\n"

# 86fbb1fac5984f25a34fd6a04c483f59
#: ../source/userdoc/model_plasticity_small_strain.rst:79
msgid "with the additional complementarity condition"
msgstr "付加的な相補性条件\n"

# 902b291eceb34d20b9a3d78db01ca3e6
#: ../source/userdoc/model_plasticity_small_strain.rst:83
msgid ""
"The variable :math:`\\gamma` is called the plastic multiplier. Note that "
"when :math:`\\psi(\\varepsilon^e, \\alpha), f(\\sigma, A) \\mbox{ or } "
"\\Psi(\\sigma, A)` are not differentiable, subdifferentials have to be used."
" Associated plasticity corresponds to the choice :math:`\\Psi(\\sigma, A) = "
"f(\\sigma, A)`."
msgstr ""
"変数：math： `\\ gamma`はプラスチック乗数と呼ばれます。次のような場合には、次のように注意してください：\\ psi（\\ "
"varepsilon ^ e、\\ alpha）、f（\\ sigma、A）\\ mbox {or} \\ Psi（\\ "
"sigma、A）関連する可塑性は、次の選択に対応します。数学：\\ Psi（\\ sigma、A）= f（\\ sigma、A） `\n"

# e2c8bf9c2e214f938f54c81d4320c84b
#: ../source/userdoc/model_plasticity_small_strain.rst:86
msgid "Initial boundary value problem"
msgstr "初期境界値問題\n"

# a24be051fc504c6a8608b85079b9d863
#: ../source/userdoc/model_plasticity_small_strain.rst:88
msgid ""
"The weak formulation of a dynamic elastoplastic problem can be written, for "
"an arbitrary kinematically admissible test function :math:`v`, as follows:"
msgstr "動的弾塑性問題の弱い公式は、任意の運動学的に許容される試験関数、すなわち、以下のように、数学的には「v」と書くことができる。\n"

# 3a4aad18794d4bc8ac7e11921fd9ecc3
#: ../source/userdoc/model_plasticity_small_strain.rst:98
msgid ""
"for :math:`u_0, \\mathrm{v}_0, \\varepsilon^p_0, \\alpha_0` being initial "
"values and :math:`f` and :math:`g` being prescribed forces in the interior "
"of domain :math:`\\Omega` and on the part of the boundary :math:`\\Gamma_N`."
msgstr ""
"for：math： `u_0、\\ mathrm {v} _0、\\ varepsilon ^ p_0、\\ alpha_0`は初期値で、：math：`"
" f`そして：math： `g`はドメインの内部で、 `\\ Omega`と境界の部分には数学：` \\ Gamma_N`があります。\n"

# 3947f0e8eb3848ab9b8c8615333e89f6
#: ../source/userdoc/model_plasticity_small_strain.rst:100
msgid ""
"Note that plasticity models are often applied on quasi-static problems which"
" correspond to the term :math:`\\rho \\ddot{u}` being neglected."
msgstr ""
"可塑性モデルは、しばしば、次の項に対応する準静的問題に適用されることに注意してください。数学： `\\ rho \\ ddot {u} "
"'は無視されます。\n"

# 5006550a5ab44800bad49d0de74070c7
#: ../source/userdoc/model_plasticity_small_strain.rst:102
msgid ""
"Given a time step :math:`\\Delta t = t_{n+1} -t_n`, from time :math:`t_n` to"
" :math:`t_{n+1}`, we will denote in the sequel :math:`u_n, \\varepsilon^p_n"
"  \\mbox{ and } \\alpha_n` the approximations at time :math:`t_n` of "
":math:`u(t_n), \\varepsilon^p_n(t_n) \\mbox{ and } \\alpha(t_n)` "
"respectively. These approximations correspond to the chosen time integration"
" scheme (for instance one of the proposed schemes in :ref:`ud-model-time-"
"integration`) which can be different than the time integration scheme used "
"for the integration of the flow rule (see below)."
msgstr ""
"与えられた時間ステップ：時間 :math:`t_n` から数学：` t_ {n + 1} `までの数学：` \\ Delta t = t_ {n + 1} "
"-t_n`を続けると、 math： `u_n、\\ varepsilon ^ p_n \\ mbox {and} \\ "
"alpha_n`時刻の近似：math：` u_（t_n）、\\ varepsilon ^ p_n（t_n）\\ mbox {アルファ（t_n） "
"`と呼ぶ。これらの近似は、フロールールの積分に使用される時間積分スキームとは異なることができる、選択された時間積分スキーム（例えば、提案されたスキームの1つ：ref："
" `ud-model-time-integration '）に対応する以下）。\n"

# f140f753e4984e9a92af05f42f3dcff9
#: ../source/userdoc/model_plasticity_small_strain.rst:106
msgid "Flow rule integration"
msgstr "フロールールの積分\n"

# 46ec18cf12b64dde81319d7cb00717b3
#: ../source/userdoc/model_plasticity_small_strain.rst:108
msgid ""
"The plastic flow rule has to be integrated with its own time integration "
"scheme. Among standards schemes, the backward Euler scheme, the "
":math:`\\theta`-scheme (or generalized trapezoidal rule) and the generalized"
" mid-point scheme are the most commonly used in that context. We make here "
"the choice of the :math:`\\theta`-scheme (:math:`\\theta = 1` corresponds to"
" the backward Euler scheme as a special case)."
msgstr ""
"プラスチックフロールールは、独自の時間積分スキームと積分する必要があります。標準スキームの中で、後方オイラースキームでは、：math： `\\ "
"theta`スキーム（または一般化された台形ルール）と一般化された中間ポイントスキームが、このコンテキストで最も一般的に使用されます。ここでは、数学： "
"`\\ theta`-scheme（：math：` \\ theta = 1`は特殊なケースとして後方オイラースキームに対応します）の選択をします。\n"

# 2443c72e12a14c3ea3e1a9c7365610a6
#: ../source/userdoc/model_plasticity_small_strain.rst:111
msgid ""
"Let :math:`u_{n+1}` be the displacement at the considered time step and  "
":math:`u_{n}` at the previous one."
msgstr "let：math： `u_ {n + 1}`は、考慮する時間ステップの変位であり、前の方程式は：math： `u_ {n} 'です。\n"

# 93efd93172fe4e6dbbbc50307b565cbc
#: ../source/userdoc/model_plasticity_small_strain.rst:113
msgid ""
"The :math:`\\theta`-scheme for the integration of the plastic flow rules "
"reads as"
msgstr "：塑性流れ規則の積分のための数学： `\\ theta`-計画は\n"

# cd3616c06ce34313a3ccc0449acef807
#: ../source/userdoc/model_plasticity_small_strain.rst:121
msgid "with the complementary condition"
msgstr "相補的な状態で\n"

# c829343bd47c40429009517cb28e2671
#: ../source/userdoc/model_plasticity_small_strain.rst:125
msgid ""
"where :math:`0 < \\theta \\le 1` is the parameter of the "
":math:`\\theta`-scheme. We exclude :math:`\\theta = 0` because we will not "
"consider explicit integration of plasticity. Let us recall that "
":math:`\\theta = 1` corresponds to the backward Euler scheme and "
":math:`\\theta = 1/2` to the Crank-Nicolson scheme (or trapezoidal rule) "
"which is a second order consistent scheme. Note that the complementarity "
"condition for the quantities at time step :math:`n` is prescribed at the "
"previous time step (:math:`\\sigma_{n}, \\alpha_n, \\mbox{and } \\gamma_n` "
"are supposed to be already determined)."
msgstr ""
"ここで、math： `0 <\\ theta \\ le 1`は：math：` \\ theta`-schemeのパラメータです。数学： `\\ "
"theta = 0`は、可塑性の明示的な積分を考慮しないため除外します。数学： `\\ theta = 1`は後方オイラースキームに対応し、数学：` "
"\\ theta = 1 / 2`を2次整合スキームであるクランク - "
"ニコルソンスキーム（または台形ルール）に対応させます。時間ステップ：数学：「n」における量の相補性条件は、前の時間ステップ（数学： '\\ sigma_"
" {n}、\\ alpha_n、\\ mbox {および} \\ gamma_n]は、すでに決定されている）。\n"

# da95eef203754f2882e5c27ef6f0caea
#: ../source/userdoc/model_plasticity_small_strain.rst:127
msgid ""
"A solution would be to solve the whole problem with all the unknows, that is"
" :math:`u_{n+1},  \\gamma_{n+1}, \\varepsilon^p_{n+1} \\mbox{ and } "
"A_{n+1}`. This is of course possible but would be a rather expensive "
"strategy because of the resulting high number of degrees of freedom. A "
"classical strategy (the return mapping one for instance, see [SO-PE-OW2008]_"
" or the closest point projection one) consist in integrating locally the "
"plastic flow on each Gauss point of the considered integration method "
"separately, or more precisely to consider on each Gauss point the maps"
msgstr ""
"解決策は、すべての未知数、すなわち次のような問題すべてを解くことです。数学： `u_ {n + 1}、\\ gamma_ {n + 1}、\\ "
"varepsilon ^ p_ {n + 1} \\ mbox {and} A_ {n + "
"1}。これはもちろん可能ですが、結果として高い自由度が得られるため、かなり高価な戦略になります。古典的な戦略（たとえば、[SO-PE-OW2008] "
"_または最も近い点投影法1を参照）は、考慮する積分法の各ガウス点上の塑性流動を別々に、またはより正確に考慮する各ガウス点上にマップ\n"

# ee27f87299e648f28e55677689fb4254
#: ../source/userdoc/model_plasticity_small_strain.rst:136
msgid ""
"with :math:`\\eta_n, \\zeta_{n}` the right hand side of equations "
":eq:`thetascheme1`, :eq:`thetascheme2`, i.e."
msgstr "方程式の右辺：eq： `thetascheme1`、：eq：` thetascheme2`、すなわち、次のようになります。\n"

# 80ee54f275e049ba984d64d992a9f901
#: ../source/userdoc/model_plasticity_small_strain.rst:143
msgid ""
"This means in particular that :math:`(\\varepsilon^p_{n+1}, \\alpha_{n+1}) ="
" ({\\mathscr E}^p(u_{n+1},  \\zeta_n, \\eta_n), {\\mathscr A}(u_{n+1}, "
"\\zeta_{n}, \\eta_n))` is the solution to equations :eq:`thetascheme1` and "
":eq:`thetascheme2`. Both these maps and their tangent moduli (usually called"
" consistent tangent moduli) are then used in the global solve of the problem"
" with a Newton method and for :math:`u_{n+1}` the unique remaining variable."
" The advantage of the return mapping strategy is that the unique variable of"
" the global solve is the displacement :math:`u_{n+1}`. A nonlinear solve on "
"each Gauss point is often necessary which is usualy performed with a local "
"Newton method."
msgstr ""
"これは、特に次のことを意味します :math:``  \\ varepsilon ^ p_ {n + 1}、\\ alpha_ {n + 1} =（{\\ "
"mathscr E} ^ p（u_ {n + 1}、\\ zeta_n、\\ eta_n ）、{\\ mathscr A}（u_ {n + 1}、\\ "
"zeta_ {n}、\\ eta_n）） `は方程式の解です：eq：` thetascheme1`と：eq： "
"`thetascheme2`です。これらのマップとそれらの正接モジュラス（通常、一貫した正接モジュライと呼ばれる）は、ニュートン法を用いた問題のグローバルな解法で使用されます。数学："
" `u_ {n + 1}`はユニークな残りの変数です。リターンマッピング戦略の利点は、グローバル解の一意の変数が、変位：数学： `u_ {n + "
"1}`であることです。各ガウス点上の非線形解法がしばしば必要であり、通常はローカルニュートン法で実行される。\n"

# 0781edd00cba4199940676d6a1404331
#: ../source/userdoc/model_plasticity_small_strain.rst:145
msgid ""
"In |gf| we propose both the return mapping strategy and also an alternative "
"strategy developped below which is mainly inspired from  [PO-NI2016]_,  [SE-"
"PO-WO2015]_ and [HA-WO2009]_ and allow more simple tangent moduli. It "
"consists in keeping (a multiple of) :math:`\\gamma_{n+1}` as an additional "
"unknown with respect to :math:`u_{n+1}`. As we will see, this will allow a "
"more generic treatment of the yield functions, the price for the simplicity "
"being this additional unknown scalar field."
msgstr ""
"In  |gf| 我々はリターンマッピング戦略と、主に[PO-NI2016] _、[SE-PO-WO2015]および[HA-WO2009] "
"_に触発され、より簡単な接線モジュラスを可能にする以下に展開される代替戦略の両方を提案する。それは：math： `u_ {n + "
"1}`に関して、さらに不明なものとして、数学： `\\ gamma_ {n + "
"1}`（の倍数）を保持することにあります。これからわか​​るように、これは、yield関数のより一般的な処理を可能にします。これは、この追加の未知のスカラー場である単純さの代償です。\n"

# e30f1627124b499eb5c5a86b4321b7d6
#: ../source/userdoc/model_plasticity_small_strain.rst:147
msgid ""
"First, we consider an additional (and optional) given function "
":math:`\\alpha(\\sigma_{n+1}, A_{n+1}) > 0` whose interest will appear later"
" on (it will allow simple local inverses) and the new unknown scalar field"
msgstr ""
"まず、関心が後で現れるmath： `\\ alpha（\\ sigma_ {n + 1}、A_ {n + 1}）> "
"0`という追加の（そしてオプションの）関数を考えます（単純なローカル逆変換が可能になります） ）と新しい未知のスカラー場\n"

# b480cf53d6be43a8beb57a955b091417
#: ../source/userdoc/model_plasticity_small_strain.rst:151
msgid ""
"so that our two main unknows are now :math:`u_{n+1} \\mbox{ and } "
"\\xi_{n+1}`. The discretized plastic flow rule integration now reads:"
msgstr ""
"私たちの2つの主要な未知数は次のようになりました：数学： `u _ {n + 1} \\ mbox {and} \\ x_ {n + "
"1}`。離散化されたプラスチックフロールールの積分は、次のようになります。\n"

# 32483b91f79b40058d50050171eb8d7a
#: ../source/userdoc/model_plasticity_small_strain.rst:163
msgid ""
"For :math:`u_{n+1} \\mbox{ and } \\xi_{n+1}` be given, we define the two "
"maps"
msgstr "math： `u_ {n + 1} \\ mbox {and} \\ xi_ {n + 1}`が与えられたら、2つのマップ\n"

# 2475e30d9969482397fd22cb7e45b9cf
#: ../source/userdoc/model_plasticity_small_strain.rst:171
msgid ""
"where the pair :math:`(\\varepsilon^p_{n+1}, \\alpha_{n+1}) = "
"(\\tilde{\\mathscr E}^p(u_{n+1}, \\theta \\xi_{n+1}, \\zeta_{n}, \\eta_n), "
"\\tilde{\\mathscr A}(u_{n+1}, \\theta \\xi_{n+1}, \\zeta_{n}, \\eta_n))` is "
"the solution to equations :eq:`flowrule1`, :eq:`flowrule2` (without the "
"consideration of  :eq:`flowrule3`). We will see later, that, at least for "
"simple isotropic plastic flow rules, these maps have a simple expression, "
"even sometimes a linear one with respect to :math:`u_{n+1}`."
msgstr ""
"ここでペアは次のようになります。math： `（\\ varepsilon ^ p_ {n + 1}、\\ alpha_ {n + 1}）= {\\ "
"mathscr E} ^ p（u_ {n + 1}、\\ theta \\ xi_ { \\ zeta_ {n}、\\ eta_n）、\\チルダ{\\ "
"mathscr A}（u_ {n + 1}、\\ theta \\ xi_ {n + 1}、\\ zeta_ {n}、\\ eta_n） `はeq：` "
"flowrule1`、：eq： `flowrule2`（（eq：` "
"flowrule3`を考慮しないで）方程式の解です。私たちは後で、少なくとも単純な等方性プラスチックフロールールの場合、これらのマップが単純な式を持っていることを理解しています。math："
" `u_ {n + 1}`に関しては線形です。\n"

# 8e6b78f3608c42178bc5fa506551c94e
#: ../source/userdoc/model_plasticity_small_strain.rst:173
msgid ""
"Still :math:`u_{n+1} \\mbox{ and } \\xi_{n+1}` be given the stress "
":math:`\\sigma_{n+1}` reads"
msgstr ""
"それでもなお：math： `\\ sigma_ {n + 1}`の読みは、数学： `u_ {n + 1} \\ mbox {and} \\ xi_ {n"
" + 1}\n"

# 89131dcbcc7a40c8ae776b325d5d186c
#: ../source/userdoc/model_plasticity_small_strain.rst:179
msgid ""
"The complementarity equation :eq:`flowrule3` is then prescribed with the use"
" of a well chosen complementarity function, as in [HA-WO2009]_ for :math:`r "
"> 0` such as:"
msgstr ""
"相補方程式：eq： `flowrule3`は、[HA-WO2009] _のように、次のような数学的：` r> "
"0`のように、適切に選択された相補関数を使用して規定されます。\n"

# e5676299a7864af0a01769634959c1ca
#: ../source/userdoc/model_plasticity_small_strain.rst:183
msgid "or"
msgstr "または\n"

# 037ff701f39542739dc802e0b6f4ee6f
#: ../source/userdoc/model_plasticity_small_strain.rst:187
msgid ""
"NOTE : The notation :math:`\\Delta \\xi_{n+1} = \\Delta t \\xi_{n+1}` is "
"often used in the litterature. The choice here is to preserve the "
"distinction between the two quantities, mainly because ot the possible use "
"of adaptative time step : when the time step is changing, the value "
":math:`\\xi_n` has to be multiplied by the new time step, so that it is "
"preferable to store :math:`\\xi_n` instead of :math:`\\Delta \\xi_{n}` when "
"using the :math:`\\theta`-scheme."
msgstr ""
"注記：表記法：数学： `\\ Delta \\ xi_ {n + 1} = \\デルタt \\ xi_ {n + "
"1}`は書体でよく使われます。ここでの選択は、2つの量の間の差異を保存することである。これは主に、適応的な時間ステップの可能な使用のためである。タイムステップが変化しているとき、値：math："
" `\\ xi_n`は、 ：math： `\\ theta`-schemeを使うときは、：math：` \\ Delta \\ xi_ {n} "
"`の代わりに：math：` \\ xi_n`を格納することが望ましい。\n"

# 98c128aca1ee4214a78f64163949ee21
#: ../source/userdoc/model_plasticity_small_strain.rst:191
msgid "Plane strain approximation"
msgstr "平面歪み近似\n"

# 48b841dc8fc34b509c30ac3fc9c515d3
#: ../source/userdoc/model_plasticity_small_strain.rst:193
msgid ""
"A plane strain approximation is a 2D problem which corresponds to the "
"deformation of a long cylindrical object where the strain in the length "
"direction (assumed to be along the :math:`z` axis) is considered small "
"compared to the ones in the other directions and is neglected. It result in "
"a plane strain tensor of the form"
msgstr ""
"平面歪み近似は、長手方向の歪み（：z軸に沿っていると仮定する）が他の方向の歪みに比べて小さいと考えられる長い円筒形の物体の変形に対応する2次元問題である無視されます。これは、平面歪みテンソルの形をとる\n"

# 274b12915d4f42668c9e2105fb18b42c
#: ../source/userdoc/model_plasticity_small_strain.rst:197
msgid "We denote"
msgstr "我々は示す\n"

# dccfbd0cef7f4110b2d7dbfd7f31c864
#: ../source/userdoc/model_plasticity_small_strain.rst:201
msgid ""
"the non neglected components of the strain tensor. In the decomposition of "
"plastic and elastic part of the strain tensor, we assume"
msgstr "ひずみテンソルの無視されない成分。ひずみテンソルのプラスチックと弾性部分の分解では、\n"

# fadc05e1a79b4611868f0032890e8ab7
#: ../source/userdoc/model_plasticity_small_strain.rst:206
msgid "and"
msgstr "そして\n"

# 8ecafc9a50d94d77b30840cf0de6560f
#: ../source/userdoc/model_plasticity_small_strain.rst:210
msgid ""
"The adaptation to the plane strain approximation to plastic model is most of"
" the time an  easy task. An isotropic linearized elastic response reads"
msgstr "プラスチックモデルへの平面歪み近似への適応は、ほとんどの場合、簡単な作業です。等方性線形弾性応答は、\n"

# e2156b2ed857463288d22d3396d48e4d
# 634b5e3aad69481ead05e18601ff6fc9
#: ../source/userdoc/model_plasticity_small_strain.rst:214
#: ../source/userdoc/model_plasticity_small_strain.rst:316
msgid "and thus"
msgstr "したがって\n"

# 7a7a0cd33d1f4f24a6e0de25189c20e9
#: ../source/userdoc/model_plasticity_small_strain.rst:218
msgid ""
"The nonzero :math:`\\sigma_{3,3}` component of the stress tensor is given by"
msgstr "応力テンソルの非ゼロの数学： `\\ sigma_ {3,3} '成分は\n"

# 7882ce836dbb4b1e90c05ee25c5a242d
#: ../source/userdoc/model_plasticity_small_strain.rst:222
msgid ""
"Note that in the common case where isochoric plastic strain is assumed, one "
"has"
msgstr "均等塑性ひずみが想定される一般的なケースでは、\n"

# 26551f187e214fd1b7e10c7c0efc0a0f
#: ../source/userdoc/model_plasticity_small_strain.rst:229
msgid "Plane stress approximation"
msgstr "面応力近似\n"

# 84de149e3ae84310964628ffb9f14479
#: ../source/userdoc/model_plasticity_small_strain.rst:231
msgid ""
"The plane stress approximation describe generally the 2D membrane "
"deformation of a thin plate. It consist in prescribing the stress tensor to "
"have only in-plane nonzero components, i.e."
msgstr "平面応力近似は、一般に、薄板の2D膜変形を記述する。これは、面内非ゼロ成分のみを有するように応力テンソルを規定することにある。\n"

# 39eddedc990e452d889e2e8a6338f2b1
#: ../source/userdoc/model_plasticity_small_strain.rst:235
msgid "We will still denote"
msgstr "我々は依然として\n"

# 53581089cf6f40f2b334c1900a15a484
#: ../source/userdoc/model_plasticity_small_strain.rst:239
msgid ""
"the in-plane components of the stress tensor. For elastoplasticity, it "
"consists generally to apply the 2D plastic flow rule, prescribing the out-"
"plane components of the stress tensor to be zero with the additionnal "
"variables :math:`\\varepsilon^e_{1,3}`, :math:`\\varepsilon^e_{2,3}`, "
":math:`\\varepsilon^e_{3,3}` being unknown (see for instance [SO-PE-"
"OW2008]_)."
msgstr ""
"応力テンソルの面内成分。弾塑性の場合、一般に、応力テンソルのアウトプレーン成分をゼロにするように2次の塑性流れルールを適用することから成ります。これは、次のような付加的な変数によって行われます。math："
" `\\ varepsilon ^ e_ {1,3} ：\\ varepsilon ^ e_ {2,3} `、：数学：` \\ varepsilon ^"
" e_ {3,3} `は未知である（例えば、[SO-PE-OW2008] _を参照）。\n"

# d3b80fbf55484422a604f0909250ad6f
#: ../source/userdoc/model_plasticity_small_strain.rst:241
msgid ""
"For an isotropic linearized elastic response, one has :math:`\\sigma = "
"\\lambda \\mbox{tr}(\\varepsilon^e) + 2\\mu\\varepsilon^e` such that"
msgstr ""
"等方性の線形弾性応答の場合、次のようになります。数学：\\ sigma = \\lambda \\ mbox {tr}（\\ varepsilon ^"
" e）+ 2 \\ mu \\ varepsilon ^ e`\n"

# 5961226731e14576affceea0cb5a8b24
# f5a43083dff74d6b94dcd09ee0e5cbd1
#: ../source/userdoc/model_plasticity_small_strain.rst:245
#: ../source/userdoc/model_plasticity_small_strain.rst:435
msgid "with"
msgstr "〜と\n"

# 0522ae3a9d4c48139f9119a8e598a2af
#: ../source/userdoc/model_plasticity_small_strain.rst:249
msgid "so that"
msgstr "そのため、\n"

# 6701aa79bc6742bfab5b979c6454c2de
#: ../source/userdoc/model_plasticity_small_strain.rst:254
msgid "Moreover"
msgstr "さらに\n"

# 7214cd4a16974386a67c1136ed23df79
#: ../source/userdoc/model_plasticity_small_strain.rst:259
msgid ""
"Note that in the case where isochoric plastic strain is assumed, one still "
"has"
msgstr "均等塑性ひずみが仮定されている場合、依然として\n"

# 9411297763b74eb281b90a5e4222b11f
#: ../source/userdoc/model_plasticity_small_strain.rst:265
msgid "Some classical laws"
msgstr "いくつかの古典的な法律\n"

# 47be5aac188448828dedf28368ba28d2
#: ../source/userdoc/model_plasticity_small_strain.rst:268
msgid ""
"Tresca : :math:`\\rho(\\sigma) \\le \\sigma_y` where :math:`\\rho(\\sigma)` "
"spectral radius of the Cauchy stress tensor and :math:`\\sigma_y` the "
"uniaxial yield stress (which may depend on some hardening internal "
"variables)."
msgstr ""
"Tresca：：math： `\\ rho（\\ sigma）\\ le \\ "
"sigma_y`ここで、次のようになります：Cauchy応力テンソルのスペクトル半径と\\ "
"sigma_y`は一軸降伏応力いくつかの強化内部変数に依存する可能性があります）。\n"

# fc4c363ca762474fbeea7ff0add5222c
#: ../source/userdoc/model_plasticity_small_strain.rst:270
msgid ""
"Von Mises :  :math:`\\|\\mbox{Dev}(\\sigma)\\| \\le "
"\\sqrt{\\frac{2}{3}}\\sigma_y` where :math:`\\mbox{Dev}(\\sigma) = \\sigma -"
" \\frac{1}{3}\\mbox{tr}(\\sigma)I` the deviatoric part of :math:`\\sigma` "
"and :math:`\\|\\sigma\\| = \\sqrt{\\sigma:\\sigma}`."
msgstr ""
"フォンミーゼス：：数学： `\\ | \\ mbox {Dev}（\\シグマ）\\ | \\ mbox {dev}（\\ sigma）= \\ "
"sigma  -  \\ frac {1} {3} \\ mbox {tr} {\\ frac {2} {3}} \\ "
"sigma_y`ここで、シグマ）私は次の部分の偏差部分です :math:`\\シグマ` と：数学： `\\ | \\シグマ\\ = \\ sqrt {\\ "
"sigma：\\ sigma} `となります。\n"

# a8405d58c90e4383889bc3ec137b44d2
#: ../source/userdoc/model_plasticity_small_strain.rst:275
msgid ""
"Perfect isotropic associated elastoplasticity with Von-Mises criterion "
"(Prandl-Reuss model)"
msgstr "フォン・ミーゼス基準（Prandl-Reussモデル）を伴う完全な等方性弾性熱可塑性\n"

# 85b816f90c1445bfb161ad7fcd03c2ae
#: ../source/userdoc/model_plasticity_small_strain.rst:277
msgid ""
"There is no internal variables and we consider an isotropic elastic "
"response. The flow rule reads"
msgstr "内部変数はなく、等方性弾性応答を考慮する。フロールールは\n"

# b79dc4b9f8954991bf284115c4630d97
#: ../source/userdoc/model_plasticity_small_strain.rst:281
msgid ""
"This corresponds to :math:`\\Psi(\\sigma) = f(\\sigma) = "
"\\|\\mbox{Dev}(\\sigma)\\| - \\sqrt{\\frac{2}{3}}\\sigma_y`."
msgstr ""
"これは次式に対応します：math： `\\ Psi（\\ sigma）= f（\\ sigma）= \\ | \\ mbox {Dev}（\\ "
"sigma）\\ | -  \\ sqrt {\\ frac {2} {3}} \\ sigma_y`。\n"

# 9caa1d9bd91e4561a9337ea68f6d2f1c
#: ../source/userdoc/model_plasticity_small_strain.rst:284
msgid ""
"The :math:`\\theta`-scheme for the integration of the plastic flow rule "
"reads:"
msgstr "：プラスチック流規則の積分のための :math:`\\ theta`   - スキーム：\n"

# eda3cb7996ec43f09155b7130046087f
#: ../source/userdoc/model_plasticity_small_strain.rst:288
msgid ""
"Choosing the factor :math:`\\alpha(\\sigma_{n}) = "
"\\|\\mbox{Dev}(\\sigma_{n})\\|` and still with :math:`\\xi_n = "
"\\Frac{\\gamma_n}{\\alpha(\\sigma_{n})}` this gives the equation"
msgstr ""
"要素を選択すると、次のようになります。math： `\\ xi_n = \\ Frac {\\ gamma_n} \\ {\\ gamma {n} "
"{\\ alpha（\\ sigma_ {n}）} `これは方程式を与えます\n"

# 3aba2681d6d143b98e7c7cf563864f0c
#: ../source/userdoc/model_plasticity_small_strain.rst:292
msgid ""
"Since :math:`\\mbox{Dev}(\\sigma_{n+1}) = "
"2\\mu\\mbox{Dev}(\\varepsilon(u_{n+1})) - 2\\mu\\varepsilon^p_{n+1}` this "
"directly gives:"
msgstr ""
"以来、数学： `\\ mbox {Dev}（\\ sigma_ {n + 1}）= 2 \\ mu \\ mbox {Dev}（\\ "
"varepsilon（u_ {n + 1}）） -  2 \\ mu \\ varepsilon ^ p_ {n +1} `これは直接与えます：\n"

# 6af01e688d444c72a5444c6e9319aa33
#: ../source/userdoc/model_plasticity_small_strain.rst:296
msgid ""
"which is a linear expression with respect to :math:`u_{n+1}` (but not with "
"respect to :math:`\\xi_{n+1}`)."
msgstr "これは、math： `u_ {n + 1}`（ただし、：math： `\\ xi_ {n + 1}`とは関係ありません）に関する線形式です。\n"

# db4a4eb0d71c473eb8dbad94cd9494bc
#: ../source/userdoc/model_plasticity_small_strain.rst:298
msgid "Moreover, :math:`\\zeta_n` is defined by"
msgstr "さらに、：math： `\\ zeta_n`は次のように定義されます。\n"

# 1b19e98038a34c4caf18d952aa06302c
# 5683832719994573a542fc989d7005f1
#: ../source/userdoc/model_plasticity_small_strain.rst:302
#: ../source/userdoc/model_plasticity_small_strain.rst:394
msgid "**Elimination of the multiplier (for the return mapping approach)**"
msgstr "**乗数の排除（リターンマッピングアプローチの場合）**\n"

# 612d7fb60bde4d61999c407de50ec34c
#: ../source/userdoc/model_plasticity_small_strain.rst:304
msgid "One has"
msgstr "1つは持っている\n"

# 578b25f5ded74e07aa9e168b3f23b0b6
#: ../source/userdoc/model_plasticity_small_strain.rst:308
msgid ""
"Thus, denoting :math:`B = \\mbox{Dev}(\\varepsilon(u_{n+1})) - \\zeta_n`, "
"either"
msgstr "したがって、math： `B = \\ mbox {Dev}（\\ varepsilon（u_ {n + 1}）） -  \\ zeta_n`\n"

# a983b99d7fe944339733f267a010250c
#: ../source/userdoc/model_plasticity_small_strain.rst:312
msgid ""
"and :math:`\\xi_{n+1} = 0`, i.e. we are in the elastic case, or  "
":math:`\\|\\mbox{Dev}(\\sigma_{n+1})\\| =  \\sqrt{\\frac{2}{3}}` and one "
"obtains"
msgstr ""
"：\\ \\ mbox {Dev}（\\ sigma_ {n + 1}）\\ | math： `\\ xi_ {n + 1} = 0`は、 = \\ "
"sqrt {\\ frac {2} {3}} `となり、\n"

# d36c7550f791434691083fc4fac1bfe1
#: ../source/userdoc/model_plasticity_small_strain.rst:320
msgid "The two options can be summarized by"
msgstr "2つの選択肢は、\n"

# e525298ee2d14409b12877b396216cc4
#: ../source/userdoc/model_plasticity_small_strain.rst:324
msgid ""
"The multiplier :math:`\\xi_{n+1}` (needed for the :math:`\\theta`-scheme for"
" :math:`\\theta \\ne 1`) is given by"
msgstr ""
"乗算器：math： `\\ xi_ {n + 1}`（for：math： `\\ theta`-scheme for：math：` \\ theta "
"\\ ne 1`）は次のように与えられます。\n"

# f6b33a1225de47bf8de063584e0e3a81
# 4548d8f5c8c84614b4842631786c9d9a
#: ../source/userdoc/model_plasticity_small_strain.rst:329
#: ../source/userdoc/model_plasticity_small_strain.rst:426
msgid "**Plane strain approximation**"
msgstr "**平面歪み近似**\n"

# 5a669ce8b4f14bd3ae020d2724cfee2d
#: ../source/userdoc/model_plasticity_small_strain.rst:331
msgid ""
"The plane strain approximation has the same expression replacing the 3D "
"strain tensors by the in-plane ones :math:`\\bar{\\varepsilon}^p` and  "
":math:`\\bar{\\varepsilon}(u_{n+1})`."
msgstr ""
"平面歪み近似は、三次元歪みテンソルを面内歪みで置き換えるのと同じ表現をしています。数学： `\\ bar {\\ varepsilon} ^ "
"p`と：math：` \\ bar {\\ varepsilon}（u_ {n + 1} ） `。\n"

# 9f607e34d32443b99036ccb8335f9363
#: ../source/userdoc/model_plasticity_small_strain.rst:335
msgid ""
"where :math:`\\overline{\\mbox{Dev}}(\\bar{\\varepsilon}) = "
"\\bar{\\varepsilon} - \\Frac{\\mbox{tr}(\\bar{\\varepsilon})}{3} \\bar{I}` "
"is the 2D restriction of the 3D deviator."
msgstr ""
"ここで、数学は次のようになります。数学： `\\ overline {\\ mbox {Dev}}（\\ bar {\\ varepsilon}）= "
"\\ bar {\\ varepsilon}  -  \\ Frac {\\ mbox { \\ bar {I} `は3D偏差器の2D制限です。\n"

# a161e6c8eafc419bb9f7b295cc39dcc4
#: ../source/userdoc/model_plasticity_small_strain.rst:337
msgid "Moreover, for the yield condition,"
msgstr "さらに、降伏条件については、\n"

# 07a2db346a1a45df9e317fc6f1835170
#: ../source/userdoc/model_plasticity_small_strain.rst:341
msgid "And for the elimination of the multiplier,"
msgstr "そして乗数の除去のために、\n"

# 50b2f882d1ff49b69de3719832972b8f
#: ../source/userdoc/model_plasticity_small_strain.rst:345
msgid ""
"with :math:`\\bar{B} = "
"\\overline{\\mbox{Dev}}(\\bar{\\varepsilon}(u_{n+1}))-\\bar{\\zeta}_{n}` and"
" :math:`\\|B\\|^2 = \\|\\overline{\\mbox{Dev}}(\\bar{\\varepsilon}(u_{n+1}))"
" - \\bar{\\zeta}_n\\|^2 + "
"\\left(\\Frac{\\mbox{tr}(\\bar{\\varepsilon}(u_{n+1}))}{3} "
"-\\mbox{tr}(\\bar{\\zeta}_n) \\right)^2`."
msgstr ""
"\\ bar {\\ mbox {Dev}}（\\ bar {\\ varepsilon}（u_ {n + 1}）） -  \\ bar {\\ "
"zeta} _ {n} `と： \\ bar {\\ mbox {Dev}}（\\ bar {\\ varepsilon}（u_ {n + 1}）） -"
"  \\ bar {\\ zeta} _n \\ | ^ 2 \\ mbox {tr}（\\ bar {\\ zeta} _n）\\ right {\\"
" mbox {\\ bar {\\ bar {\\ varepsilon} ^ 2`。\n"

# 06fbcd50ffb74574b01fc2dc99076d3e
#: ../source/userdoc/model_plasticity_small_strain.rst:347
msgid "**Plane stress approximation**"
msgstr "**面応力近似**\n"

# 1215890aa5bb442596374f5682d52c36
#: ../source/userdoc/model_plasticity_small_strain.rst:349
msgid ""
"For plane stress approximation, using :eq:`plane_stress_iso` we deduce from "
"the expression of the 3D case"
msgstr "平面応力近似の場合、：eq： `plane_stress_iso`を使用して、3Dケースの式から推論します\n"

# 517195edd38240f7b1fd6044b66a6dc9
#: ../source/userdoc/model_plasticity_small_strain.rst:353
msgid ""
"since :math:`\\mbox{Dev}(\\varepsilon(u)) = \\varepsilon(u) - "
"\\Frac{2\\mu}{3(\\lambda+2\\mu)}(\\mbox{tr}(\\bar{\\varepsilon}(u)) - "
"\\mbox{tr}(\\bar{\\varepsilon}^p))`. Of course, this relation still has to "
"be inverted. Denoting :math:`\\alpha = 1+2\\mu\\theta\\Delta \\xi`, "
":math:`\\beta = \\Frac{4\\mu^2\\theta\\Delta \\xi}{3\\lambda+6\\mu}` and "
":math:`C = \\bar{\\zeta}_{n} +2\\mu\\theta\\Delta "
"\\xi\\left(\\bar{\\varepsilon}(u_{n+1}) - "
"\\Frac{2\\mu}{3(\\lambda+2\\mu)}(\\mbox{tr}(\\bar{\\varepsilon}(u_{n+1}))))\\bar{I}\\right)`"
" one obtains"
msgstr ""
"（\\ mbox {tr}（\\ mbox {2}} \\ mbox {2} {\\ mbox { bar {\\ varepsilon}（u）） -"
"  \\ mbox {tr}（\\ bar {\\ varepsilon} ^ p）） `。もちろん、この関係は逆転しなければならない。数式： `\\ "
"alpha = 1 + 2 \\ mu \\ theta \\ Delta \\ xi`：数式：` \\ beta = \\ Frac {4 \\ mu"
" ^ 2 \\ theta \\ Delta \\ xi} {3 \\ （\\ bar {\\ varepsilon}（u_ {n + 1}） -  "
"\\ Frac {\\ mu {}} \\ bar {I} \\ right） `one "
"{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\獲得する\n"

# 75f83ef358724d57bd1e2431032b3471
#: ../source/userdoc/model_plasticity_small_strain.rst:357
msgid ""
"Moreover, for the yield condition, expression :eq:`plane_stress_dev` can be "
"used."
msgstr "さらに、yield条件の場合、式：eq： `plane_stress_dev`を使用できます。\n"

# 221352f29f2648cb8010e28e7377e8b6
#: ../source/userdoc/model_plasticity_small_strain.rst:360
msgid ""
"Isotropic elastoplasticity with linear isotropic and kinematic hardening and"
" Von-Mises criterion"
msgstr "線形等方性およびキネマティック・ハードニングとボン・マイゼス（Von-Mises）基準を用いた等方性弾性率\n"

# 0fa5d334744a4f8e8c895bcae5d68bd3
#: ../source/userdoc/model_plasticity_small_strain.rst:362
msgid ""
"We consider an isotropic elastic reponse and the internal variable "
":math:`\\alpha : \\Omega \\rightarrow \\R` being the accumulated plastic "
"strain which satisfies"
msgstr "我々は、等方性弾性応答と内部変数を考えてみる :math:`\\ alpha：\\ Omega \\ rightarrow \\ R` は、\n"

# e4b6b8b80acf4eefaac27a776e6ef412
#: ../source/userdoc/model_plasticity_small_strain.rst:366
msgid ""
"For :math:`H_i` the isotropic hardening modulus, the linear hardening "
"consists in"
msgstr "線形硬化は等方的硬化係数であり、\n"

# 00300c62581a427e9cfce037913a5e0f
#: ../source/userdoc/model_plasticity_small_strain.rst:370
msgid "i.e. :math:`A = H_i\\alpha` and a uniaxial yield stress defined by"
msgstr "すなわち：計算：A = H_i +αおよび一軸降伏応力\n"

# 49985aba11c2488faf5dadb06184f85e
#: ../source/userdoc/model_plasticity_small_strain.rst:375
msgid ""
"for :math:`\\sigma_{y0}` the initial uniaxial yield stress. The yield "
"function (and plastic potential since this is an associated plastic model) "
"can be defined by"
msgstr ""
"for：math： `\\ sigma_ "
"{y0}`は最初の一軸降伏応力です。収率関数（およびこれは関連するプラスチックモデルであるため、プラスチックポテンシャル）は、\n"

# 97f340e060d44c96bdd97d923f7a4a03
#: ../source/userdoc/model_plasticity_small_strain.rst:379
msgid ""
"where :math:`H_k` is the kinematic hardening modulus. The same computation "
"as in the previous section leads to"
msgstr "ここで、math： `H_k`は動力学的硬化係数です。前のセクションと同じ計算が\n"

# c69e1c517c9045f1a02bf3cdcad1a9e9
#: ../source/userdoc/model_plasticity_small_strain.rst:386
msgid "where :math:`\\zeta_n` and :math:`\\eta_n` are defined by"
msgstr "ここで、math： `\\ zeta_n`と：math：` \\ eta_n`は次のように定義されます。\n"

# 316fe70e8f46442398992eeedbd21af5
#: ../source/userdoc/model_plasticity_small_strain.rst:392
msgid ""
"Note that the isotropic hardening modulus do not intervene in "
":math:`\\tilde{\\mathscr E}^p(u_{n+1}, \\theta \\Delta \\xi, "
"\\varepsilon^p_{n})` but only in :math:`f(\\sigma, A)`."
msgstr ""
"等方性硬化係数は、以下の式には介入しないことに注意してください。数学： `\\ tilde {\\ mathscr E} ^ p（u_ {n + "
"1}、\\ theta \\ Delta \\ xi、\\ varepsilon ^ p_ {  :math:`f（\\ sigma、A）` 。\n"

# 552084cb50c2498a80c627115dba4c1f
#: ../source/userdoc/model_plasticity_small_strain.rst:396
msgid ""
"Denoting :math:`\\delta = \\Frac{1}{1+2(\\mu+H_k/3)\\theta\\Delta "
"t\\xi_{n+1}}`, :math:`\\beta = \\Frac{1-\\delta}{2(\\mu+H_k/3)}` and "
":math:`B = 2\\mu\\mbox{Dev}(\\varepsilon(u_{n+1}))-2(\\mu+H_k/3)\\zeta_n` "
"the expression for :math:`\\varepsilon^p_{n+1}` and :math:`\\alpha_{n+1}` "
"becomes"
msgstr ""
"式：\\ delta = \\ Frac {1} {1 + 2（\\ mu + H_k / 3）\\ theta \\ Delta t \\ xi_ "
"{n + 1}} ` （\\ mu + H_k / 3）}と、数式：B = 2 \\ mu \\ mbox {Dev}（\\ varepsilon（u_"
" {n + 1}）） math： `\\ varepsilon ^ p_ {n + 1}`と `` math： `\\ alpha_ {n + "
"1}`の式は次のようになります。H_k / 3）\\ zeta_n`\n"

# f8d199f991c04d20994a3afd8f927860
#: ../source/userdoc/model_plasticity_small_strain.rst:401
msgid "and the plastic constraint"
msgstr "とプラスチックの拘束\n"

# 3dfbede33bd841b588b0ff85336ac39d
#: ../source/userdoc/model_plasticity_small_strain.rst:405
msgid ""
"Thus, either we are in the elastic case, i.e. :math:`\\xi_{n+1} = 0, \\delta"
" = 1` and"
msgstr "従って、我々は弾性の場合、即ち、数学的には：\\ xi_ {n + 1} = 0、\\ delta = 1及び\n"

# 5c4d3175b56b4f61ad13d6bb9b8b21cd
#: ../source/userdoc/model_plasticity_small_strain.rst:409
msgid ""
"or we are in the plastic case and :math:`\\xi_{n+1} > 0, \\delta < 1`, "
":math:`\\delta \\|B\\| = \\sqrt{\\Frac{2}{3}}(\\sigma_{y0}+H_i "
"\\alpha_{n+1})` and :math:`(1-\\delta)` solves the equation"
msgstr ""
"私たちはプラスチックケースに入っています :math:`\\ xi_ {n + 1}> 0、\\ delta <1` 、：数学：` \\ delta \\ |"
" B \\ | =（1  -  \\ delta）は式を解きます：= \\ sqrt {\\ Frac {2} {3}}（\\ sigma_ {y0} "
"+ H_i \\ alpha_ {n + 1}\n"

# 0b25ec80a09a45b9a92cd34893317fde
#: ../source/userdoc/model_plasticity_small_strain.rst:413
msgid "which leads to"
msgstr "それは\n"

# 2f560c52ef2f4f709f361ea750a8e42a
#: ../source/userdoc/model_plasticity_small_strain.rst:417
msgid "The two cases can be summarized by"
msgstr "この2つのケースは、\n"

# 577cc27df74c4adf92c33710c5d782e9
#: ../source/userdoc/model_plasticity_small_strain.rst:421
msgid ""
"which directly gives :math:`{\\mathscr E}^p(u_{n+1}, \\zeta_n, \\eta_n)` and"
" :math:`{\\mathscr A}(u_{n+1}, \\zeta_n, \\eta_n)` thanks to "
":eq:`hardeningepsalp`. The multiplier :math:`\\xi_{n+1}` being given by"
msgstr ""
"math： `{\\ mathscr A}（u_ {n + 1}、\\ zeta_n、\\ zeta_n、\\ eta_n） \\ eta_n） "
"`eq：` hardeningepsalp`のおかげです。乗数：math： `\\ xi_ {n + 1}`は次のように与えられます。\n"

# e22bcbfebf3441de9527533353d8b9c8
#: ../source/userdoc/model_plasticity_small_strain.rst:428
msgid ""
"Still denoting  :math:`\\delta = \\Frac{1}{1+2(\\mu+H_k/3)\\theta\\Delta "
"t\\xi_{n+1}}`, :math:`\\beta = \\Frac{1-\\delta}{2(\\mu+H_k/3)}`, :math:`B ="
" 2\\mu\\mbox{Dev}(\\varepsilon(u_{n+1}))-2(\\mu+H_k/3)\\zeta_n` and "
":math:`\\overline{B} = "
"2\\mu\\overline{Dev}(\\bar{\\varepsilon}(u_{n+1}))-2(\\mu+H_k/3)\\bar{\\zeta}_n`"
" its in-plane part, one has"
msgstr ""
"それでも、数学： `\\ delta = \\ Frac {1} {1 + 2（\\ mu + H_k / 3）\\ theta \\ Delta \\"
" xi_ {n + 1}}`、：算術： `\\ beta = \\ Frac 2つの変数の値は、それぞれ、{1、2、3、 2 +（1 + \\ H_k "
"/ 3）\\ zeta_n`とすると次のようになります。 / 3）\\ bar {\\ zeta} _nは面内の部分であり、\n"

# 5997e06595614fc9bb71f238461e89bc
#: ../source/userdoc/model_plasticity_small_strain.rst:439
msgid "The yield condition still reads"
msgstr "収率の条件はまだ読まれます\n"

# 16f10e0b9b1e4c15830adaa2deec931e
#: ../source/userdoc/model_plasticity_small_strain.rst:443
msgid ""
"and for the elimination of the multiplier, :math:`\\beta` has the same "
"expression as in the previous section adapting the value of :math:`\\|B\\|`."
" The expressions of :math:`\\bar{\\zeta}_n` and :math:`\\eta_n` have to be "
"adpated accoringly."
msgstr ""
"math： `\\ beta`は、前の節で述べた式と同じ式を持ちます：math：` \\ | B \\ | `。 ：math： `\\ bar {\\ "
"zeta} _n`と：math：` \\ eta_n`の表現は、順応する必要があります。\n"

# d73c6c93b7f54d75bdd74eb56a4e6a85
#: ../source/userdoc/model_plasticity_small_strain.rst:450
msgid "Souza-Auricchio elastoplasticity law (for shape memory alloys)"
msgstr "Souza-Auricchio弾塑性則（形状記憶合金用）\n"

# 6dfa31c6afe74401a80f300cc2681ea2
#: ../source/userdoc/model_plasticity_small_strain.rst:452
msgid ""
"See for instance [GR-ST2015]_ for the justification of the construction of "
"this flow rule. A Von-Mises stress criterion together with an isotropic "
"elastic response, no internal variables and a special type of kinematic "
"hardening is considered with a constraint :math:`\\|\\varepsilon^p\\| \\le "
"c_3`. The plastic potential and yield function have the form"
msgstr ""
"このフロールールの構成の正当性については、たとえば[GR-ST2015] _を参照してください。 Von-"
"Misesストレス基準と等方性弾性応答、内部変数および特殊タイプのキネマティック・ハードニングは、次のような制約を考慮して検討されます： '\\ | "
"\\ varepsilon ^ p \\ | \\ le c_3`です。塑性ポテンシャルと降伏関数は、\n"

# 71efee23458d479893cf800c9c313b48
#: ../source/userdoc/model_plasticity_small_strain.rst:456
msgid "with the complementarity condition"
msgstr "相補性条件で\n"

# 44911f704ed447a6b1e8ca42525791c4
#: ../source/userdoc/model_plasticity_small_strain.rst:461
msgid ""
"where :math:`c_1, c_2 \\mbox{ and } c_3` are some physical parameters. Note "
"that :math:`\\Frac{\\varepsilon^p}{\\|\\varepsilon^p\\|}` has to be "
"understood to be the whole unit ball for :math:`\\varepsilon^p = 0`."
msgstr ""
"ここで、math： `c_1、c_2 \\ mbox {and} c_3`はいくつかの物理的なパラメータです。次の点に注意してください：数学： `\\ "
"varepsilon ^ p = {\\ varepsilon ^ p \\ |}`は、数学的には `\\ varepsilon ^ p = "
"0`の単位球全体であると理解されなければなりません。\n"

# 9d4becc546ca4de1829509f0e4b2f455
#: ../source/userdoc/model_plasticity_small_strain.rst:464
msgid "to be done ..."
msgstr "行われなければ ...\n"

# 70e7caab799041ae9b767eea9a70e431
#: ../source/userdoc/model_plasticity_small_strain.rst:472
msgid "Elasto-plasticity bricks"
msgstr "弾塑性要素\n"

# f990ea44b2504cc98a58797556d52360
#: ../source/userdoc/model_plasticity_small_strain.rst:474
msgid ""
"See the test programs :file:`tests/plasticity.cc`, "
":file:`interface/tests/matlab/demo_plasticity.m`, "
":file:`interface/tests/matlab/demo_plasticity.py` and in "
":file:`contrib/test_plasticity`."
msgstr ""
"テストプログラム：file： `tests / plasticity.cc`、：ファイル：` interface / tests / matlab / "
"demo_plasticity.m`、：ファイル： `interface / tests / matlab / "
"demo_plasticity.py`とin：file：` contrib / test_plasticity`となります。\n"

# af6c2576d01344619eac1a79a5823586
#: ../source/userdoc/model_plasticity_small_strain.rst:477
msgid "Generic brick"
msgstr "一般的な要素\n"

# 3e09063e9bd34b678a861523f124a7e7
#: ../source/userdoc/model_plasticity_small_strain.rst:479
msgid ""
"There are two versions of the generic brick. A first one when the plastic "
"multiplier is kept as a variable of the problem where the added term is of "
"the form:"
msgstr ""
"一般的な要素の2つのバージョンがあります。プラスチック乗数が、問題の変数として保持されているときの最初のもの。追加される項は次の形式です。\n"

# ede78c94708745108edbc5a5be5d6e54
#: ../source/userdoc/model_plasticity_small_strain.rst:483
msgid ""
"with :math:`r > 0` having a specific value chosen by the brick (in terms of "
"the elasticity coefficients), and when the return mapping strategy is "
"selected (plastic multiplier is just a data), just the added term:"
msgstr ""
"ブリックによって選択された特定の値（弾力係数の点で）を有する数学： `r> 0 "
"'を有し、リターンマッピング戦略が選択されたとき（プラスチック乗数は単なるデータである）\n"

# 0b93745d6cb846a6a931f4287d37d67e
#: ../source/userdoc/model_plasticity_small_strain.rst:487
msgid "The function which adds the brick to a model `md` is ::"
msgstr "要素をモデル `md`に追加する関数は::\n"

# 82f45ba53119410e96afd3283e0dfb19
#: ../source/userdoc/model_plasticity_small_strain.rst:495
msgid ""
"where `lawname` is the name of an implemented plastic law, `unknowns_type` "
"indicates the choice between a discretization where the plastic multiplier "
"is an unknown of the problem or (return mapping approach) just a data of the"
" model stored for the next iteration. Remember that in both cases, a "
"multiplier is stored anyway. `varnames` is a set of variable and data names "
"with length which may depend on the plastic law (at least the displacement, "
"the plastic multiplier and the plastic strain). `params` is a list of "
"expressions for the parameters (at least elastic coefficients and the yield "
"stress). These expressions can be some data names (or even variable names) "
"of the model but can also be any scalar valid expression of the weak form "
"language (such as \"1/2\", \"2+sin(X[0])\", \"1+Norm(v)\" ...). The last two"
" parameters optionally provided in `params` are the `theta` parameter of the"
" `theta`-scheme (generalized trapezoidal rule) used for the plastic strain "
"integration and the time-step`dt`. The default value for `theta` if omitted "
"is 1, which corresponds to the classical Backward Euler scheme which is "
"first order consistent. `theta=1/2` corresponds to the Crank-Nicolson scheme"
" (trapezoidal rule) which is second order consistent. Any value between 1/2 "
"and 1 should be a valid value. The default value of `dt` is 'timestep' which"
" simply indicates the time step defined in the model (by "
"md.set_time_step(dt)). Alternatively it can be any expression (data name, "
"constant value ...). The time step can be altered from one iteration to the "
"next one. `region` is a mesh region."
msgstr ""
"ここで `lawname`は実装された塑性法則の名前であり、` "
"unknowns_type`はプラスチック乗数が問題の未知数である離散化と、次の反復のために保存されたモデルのデータだけを返すマッピングの選択の間の選択を示します。どちらの場合も、いずれにしても乗数が格納されることに注意してください。"
" `varnames`は、プラスチックの法則（少なくともディスプレースメント、プラスチック乗数、塑性ひずみ）に依存する長さの変数とデータ名の集合です。 "
"`params`はパラメータ（少なくとも弾性係数と降伏応力）の式のリストです。これらの式は、モデルのいくつかのデータ名（または変数名）でもかまいませんが、弱形式言語の有効なスカラー式（1/2、2"
" + sin（X [0]など） \"1 + Norm（v）\" ...）。 "
"'params'にオプションで指定される最後の2つのパラメータは、塑性ひずみ積分と時間ステップ `dt`に使用される` "
"theta`-scheme（一般化された台形ルール）の "
"`theta`パラメータです。省略された場合のthetaのデフォルト値は1であり、これは一次整合性がある古典的なBackward "
"Euler方式に対応する。 `theta = 1 / 2`は、二次整合性であるクランク・ニコルソン方式（台形則）に対応する。 "
"1/2と1の間の値は有効な値でなければなりません。 `dt`のデフォルト値は` timestep "
"'であり、モデルで定義されたタイムステップを単に示すだけです（md.set_time_step（dt）による）。あるいは、任意の式（データ名、定数値など）でもかまいません。時間ステップは、1つの反復から次の反復まで変更することができます。"
" `region`はメッシュ領域です。\n"

# 074f3259ee7b41648ea38b773660b68b
#: ../source/userdoc/model_plasticity_small_strain.rst:519
msgid "The available plasticity laws are:"
msgstr "利用可能な可塑性の法則は次のとおりです。\n"

# 3c8edf76aba04df799a377169bba9adc
#: ../source/userdoc/model_plasticity_small_strain.rst:521
msgid ""
"\"Prandtl Reuss\" (or \"isotropic perfect plasticity\"). Isotropic elasto-"
"plasticity with no hardening. The variables are the displacement, the "
"plastic multiplier and the plastic strain. The displacement should be a "
"variable and have a corresponding data having the same name preceded by "
"\"Previous\\_\" corresponding to the displacement at the previous time step "
"(typically \"u\" and \"Previous_u\"). The plastic multiplier should also "
"have two versions (typically \"xi\" and \"Previous_xi\") the first one being"
" defined as data if `unknowns_type = DISPLACEMENT_ONLY` or as a variable if "
"`unknowns_type = DISPLACEMENT_AND_PLASTIC_MULTIPLIER`. The plastic strain "
"should represent a n x n data tensor field stored on mesh_fem or "
"(preferably) on an im_data (corresponding to `mim`). The data are the first "
"Lame coefficient, the second one (shear modulus) and the uniaxial yield "
"stress. IMPORTANT: Note that this law implements the 3D expressions. If it "
"is used in 2D, the expressions are just transposed to the 2D. For the plane "
"strain approximation, see below."
msgstr ""
"\"Prandtl Reuss\"（または "
"\"等方性完全可塑性\"）。等方性の弾塑性と硬化なし。変数は変位、プラスチック乗数、塑性ひずみです。ディスプレースメントは変数でなければならず、前のタイムステップでのディスプレースメント（通常は"
" \"u\"と \"Previous_u\"）に対応する \"Previous \\ "
"_\"の前に同じ名前の対応するデータがあります。プラスチック乗数には2つのバージョン（通常は \"xi\"と "
"\"Previous_xi\"）が必要です。最初のものは `unknowns_type = "
"DISPLACEMENT_ONLY`の場合はデータとして定義され、` unknowns_type = "
"DISPLACEMENT_AND_PLASTIC_MULTIPLIER`の場合は変数として定義されます。塑性ひずみは、mesh_femまたは（好ましくは）im_data（「mim」に対応する）に格納されたn"
" x "
"nデータテンソルフィールドを表す必要があります。データは、第1のラメ係数、第2のパラメータ（せん断弾性率）および一軸降伏応力である。重要：この法律は3D表現を実装することに注意してください。"
" 2Dで使用されている場合、式は単に2Dに転置されます。平面歪み近似については、以下を参照してください。\n"

# 6dbc46269981428eb98b9cedea0d12ab
#: ../source/userdoc/model_plasticity_small_strain.rst:537
msgid ""
"\"plane strain Prandtl Reuss\" (or \"plane strain isotropic perfect "
"plasticity\") The same law as the previous one but adapted to the plane "
"strain approximation. Can only be used in 2D."
msgstr ""
"「平面ひずみPrandtl Reuss」（または「平面ひずみ等方性完全塑性」）平面ひずみ近似に適合した前のものと同じ則。 2Dでのみ使用できます。\n"

# f30e4f7bf8e249958d9dfde8af1f712a
#: ../source/userdoc/model_plasticity_small_strain.rst:541
msgid ""
"\"Prandtl Reuss linear hardening\" (or \"isotropic plasticity linear "
"hardening\"). Isotropic elasto-plasticity with linear isotropic and "
"kinematic hardening. An additional variable compared to \"Prandtl Reuss\" "
"law: the accumulated plastic strain. Similarly to the plastic strain, it is "
"only stored at the end of the time step, so a simple data is required "
"(preferably on an im_data). Two additional parameters: the kinematic "
"hardening modulus and the isotropic one. 3D expressions only."
msgstr ""
"\"Prandtl Reuss線硬化\"（または \"等方性塑性線硬化\"）。線形等方性およびキネマティック・ハードニングによる等方性弾性塑性。 "
"「Prandtl "
"Reuss」法則と比較した追加変数：累積塑性ひずみ。塑性ひずみと同様に、それは時間ステップの終了時にのみ記憶されるので、単純なデータが必要である（好ましくはim_data上にある）。"
" 2つの追加パラメータ：キネマティック硬化係数および等方性パラメータ。 3D表現のみ。\n"

# 0db2010de0814d5095410d1033deb1a9
#: ../source/userdoc/model_plasticity_small_strain.rst:550
msgid ""
"\"plane strain Prandtl Reuss linear hardening\" (or \"plane strain isotropic"
" plasticity linear hardening\"). The same law as the previous one but "
"adapted to the plane strain approximation. Can only be used in 2D."
msgstr ""
"「平面ひずみPrandtl Reuss線形硬化」（または「平面ひずみ等方性可塑性線形硬化」）。前のものと同じ法則ですが、平面歪近似に適合しています。 "
"2Dでのみ使用できます。\n"

# 419052f6919249b3861b767b380e8dcf
#: ../source/userdoc/model_plasticity_small_strain.rst:555
msgid ""
"IMPORTANT : remember that `small_strain_elastoplasticity_next_iter` has to "
"be called at the end of each time step, before the next one (and before any "
"post-treatment : this sets the value of the plastic strain and plastic "
"multiplier)."
msgstr ""
"重要： "
"`small_strain_elastoplasticity_next_iter`は、各時間ステップの終わり、次のステップの前（および後処理の前に、これがプラスチックひずみおよびプラスチック乗数の値を設定する）で呼び出されなければならないことを忘れないでください。\n"

# 1de7612a176349b5a13374b0fe871a6b
#: ../source/userdoc/model_plasticity_small_strain.rst:560
msgid ""
"Additionaly, the following function allow to pass from a time step to "
"another for the small strain plastic brick: ::"
msgstr "さらに、以下の関数は、小さなひずみプラスチック要素のタイムステップから別のものに渡すことを許可します:: ::\n"

# 76ea16926bfb445685808238b9dffbd4
#: ../source/userdoc/model_plasticity_small_strain.rst:567
msgid ""
"The parameters have to be exactly the same as the ones of the "
"`add_small_strain_elastoplasticity_brick`,  so see the documentation of this"
" function for any explanations. Basically, this brick computes the plastic "
"strain and the plastic multiplier and stores them for the next step. "
"Additionaly, it copies the computed displacement to the data that stores the"
" displacement of the previous time step (typically \"u\" to "
"\"Previous\\_u\"). It has to be called before any use of "
"`compute_small_strain_elastoplasticity_Von_Mises`."
msgstr ""
"パラメータは "
"`add_small_strain_elastoplasticity_brick`のパラメータとまったく同じでなければなりません。そのため、この関数の説明を参照してください。基本的には、この要素は塑性ひずみとプラスチックの掛け算子を計算し、次のステップのために保存します。さらに、計算された変位を前のタイムステップの変位（通常は"
" \"u\"から \"Previous \\ _u\"）を格納するデータにコピーします。 "
"`compute_small_strain_elastoplasticity_Von_Mises`を使う前に呼び出さなければなりません。\n"

# 29b253e34c1243508fce5eb8d396657a
#: ../source/userdoc/model_plasticity_small_strain.rst:577
msgid "The function ::"
msgstr "関数 ：：\n"

# 69596b56ff514181afabf3d1ca5b3352
#: ../source/userdoc/model_plasticity_small_strain.rst:586
msgid ""
"computes the Von Mises stress field with respect to a small strain "
"elastoplasticity term, approximated on `mf_vm`, and stores the result into "
"`VM`.  All other parameters have to be exactly the same as for "
"`add_small_strain_elastoplasticity_brick`. Remember that "
"`small_strain_elastoplasticity_next_iter` has to be called before any call "
"of this function."
msgstr ""
"mf_vmで近似された小さなひずみ弾塑性項に対するフォンミーゼス応力場を計算し、その結果を「VM」に格納する。他のすべてのパラメータは "
"`add_small_strain_elastoplasticity_brick`とまったく同じでなければなりません。 "
"`small_strain_elastoplasticity_next_iter`は、この関数を呼び出す前に呼び出さなければならないことに注意してください。\n"

# 371764d0faf6453f98415af4b43a2345
#: ../source/userdoc/model_plasticity_small_strain.rst:595
msgid ""
"A specific brick based on the low-level generic assembly for perfect "
"plasticity"
msgstr "完全な可塑性のための低レベルジェネリックアセンブリに基づく特定の要素\n"

# 7dfd18976e6647f0a915ebb438e9c717
#: ../source/userdoc/model_plasticity_small_strain.rst:597
msgid ""
"This is an previous version of a elastoplasticity brick which is restricted "
"to  isotropic perfect plasticity and is based on the low-level generic "
"assembly. Its specificity which could be interesting for testing is that the"
" flow rule is integrated on  finite element nodes (not on Gauss points)."
msgstr ""
"これは、等方性完全塑性に制限され、低レベルの一般的なアセンブリに基づいている弾塑性要素の以前のバージョンです。テストのために興味深い特異性は、フロールールが有限要素節点（ガウス点ではない）に積分されていることです。\n"

# 1a1ec60a03d84048a2f379c2f81200ba
#: ../source/userdoc/model_plasticity_small_strain.rst:599
msgid "The function adding this brick to a model is: ::"
msgstr "このブリックをモデルに追加する関数は::\n"

# 4eb56e6a46ff4698a409779b55eecd7d
#: ../source/userdoc/model_plasticity_small_strain.rst:611
msgid "where:"
msgstr "ここで：\n"

# de5902e5076249bb93b868905a7a7053
#: ../source/userdoc/model_plasticity_small_strain.rst:605
msgid ""
"``varname`` represents the main displacement unknown on which the brick is "
"added (u)."
msgstr "`` varname``は要素が追加されていない主な変位（u）を表します。\n"

# cafff9b830d8484f8f4aa8e33684dbbe
#: ../source/userdoc/model_plasticity_small_strain.rst:606
msgid "``previous_varname`` is the displacement at the previous time step."
msgstr "`` previous_varname``は直前のタイムステップでの変位です。\n"

# 45fd58f4c63f46b1a352d904aa7ca9b0
#: ../source/userdoc/model_plasticity_small_strain.rst:607
msgid ""
"``datalambda`` and ``datamu`` are the data corresponding to the Lame "
"coefficients."
msgstr "`` datalambda``と `` datamu``はLame係数に対応するデータです。\n"

# 84085db5ad7b477a9cc1ed9f7098c670
#: ../source/userdoc/model_plasticity_small_strain.rst:608
msgid ""
"``datathreshold`` represents the plastic threshold of the studied material."
msgstr "「データ閾値」は、調査した材料の塑性閾値を表す。\n"

# 7ccff3937e7a46a386d85c256ad2b543
#: ../source/userdoc/model_plasticity_small_strain.rst:609
msgid ""
"``datasigma`` represents the stress constraint values supported by the "
"material. It should be composed of 2 iterates for the time scheme needed for"
" the Newton algorithm used. Note that the finite element method on which "
"``datasigma`` is defined should be able to represent the derivative of "
"``varname``."
msgstr ""
"「datasigma」は、材料によって支持される応力制約値を表す。使用されるNewtonアルゴリズムに必要な時間スキームの2つの反復で構成される必要があります。"
" `` datasigma``が定義されている有限要素法は `` varname``の導関数を表すことができることに注意してください。\n"

# 6d9eda153c574d3f826f25a400597282
#: ../source/userdoc/model_plasticity_small_strain.rst:610
msgid ""
"``ACP`` corresponds to the type of projection to be used. It has an "
"`abstract_constraints_projection` type and for the moment, only exists the "
"`VM_projection` corresponding to the Von Mises one."
msgstr ""
"「ACP」は、使用される投影のタイプに対応する。これは `abstract_constraints_projection`型を持ち、現時点では、Von "
"Misesのものに対応する` VM_projection`しか存在しません。\n"

# ea564564501b4b50a1a3f45c686526e1
#: ../source/userdoc/model_plasticity_small_strain.rst:613
msgid ""
"Be careful: ``datalambda``, ``datamu`` and ``datathreshold`` could be "
"constants or described on the same finite element method."
msgstr ""
"`` datalambda``、 `` datamu``、 `` datathreshold``は定数でも、同じ有限要素法で記述してもかまいません。\n"

# f5accb9b96074a20985e5dad213f3cfc
#: ../source/userdoc/model_plasticity_small_strain.rst:615
msgid ""
"This function assembles the tangent matrix and the right hand side vector "
"which will be solved using a Newton algorithm."
msgstr "この関数は、Newtonアルゴリズムを使用して解かれる接ベクトルと右辺ベクトルをアセンブルします。\n"

# ecceec933ebf4201ae75207dfbfcb760
#: ../source/userdoc/model_plasticity_small_strain.rst:618
msgid "Additionaly, The function: ::"
msgstr "さらに、関数:: ::\n"

# b96a3cf762f64753b495260551b2ac66
#: ../source/userdoc/model_plasticity_small_strain.rst:623
msgid ""
"computes the new stress constraint values supported by the material after a "
"load or an unload (once a solve has been done earlier) and upload the "
"variables ``varname`` and ``datasigma`` as follows:"
msgstr ""
"ロードまたはアンロード後にマテリアルがサポートしている新しい応力制約値を計算し（一度解を求めたら）、次のように変数「varname」および「datasigma」をアップロードします。\n"

# 047b0249877d45f68d97fbf84bc69ef6
#: ../source/userdoc/model_plasticity_small_strain.rst:629
msgid ""
"Then, :math:`u^n` and :math:`\\sigma^n` contains the new values computed and"
" one can restart the process."
msgstr ""
"そして、：math： `u ^ n`と：math：` \\ sigma ^ n`は計算された新しい値を含み、プロセスを再起動することができます。\n"

# 8d58889ca83b454fbb6e1a55370064ac
# 1940feadc6dd44eda7f776eaec22540f
#: ../source/userdoc/model_plasticity_small_strain.rst:632
#: ../source/userdoc/model_plasticity_small_strain.rst:640
msgid "The function: ::"
msgstr "関数： ：：\n"

# e8dfdaa0af434dae870745826e784a8d
#: ../source/userdoc/model_plasticity_small_strain.rst:637
msgid ""
"computes the Von Mises (or Tresca if ``tresca`` = true) criterion on the "
"stress tensor stored in ``datasigma`` . The stress is evaluated on the "
"`mesh_fem` ``mf_vm`` and stored into the vector ``VM``. Of course, this "
"function can be used if and only if the previous function "
"``elastoplasticity_next_iter`` has been called earlier."
msgstr ""
"`` datasigma``に格納されているストレステンソルのVon Mises（または `` tresca`` = true）基準を計算します。応力は"
" `mesh_fem``` `mf_vm``で評価され、ベクトル` `VM``に格納されます。もちろん、この関数は以前の関数 `` "
"elastoplasticity_next_iter``が以前に呼び出された場合にのみ使用できます。\n"

# 49fc1a86b6ea496a86dd597c09bcf105
#: ../source/userdoc/model_plasticity_small_strain.rst:645
msgid ""
"computes on ``mf_pl`` the plastic part of the material, that could appear "
"after a load and an unload, into the vector ``Plast``."
msgstr "loadとunloadの後に出現する可能性のある材料のプラスチック部分を `` Plast``に `` mf_pl``で計算します。\n"

# 64cc2ffacecc4673805e69f6af22b2f5
#: ../source/userdoc/model_plasticity_small_strain.rst:647
msgid ""
"Note that ``datasigma`` should be the vector containing the new stress "
"constraint values, i.e. after a load or an unload of the material."
msgstr ""
"「datasigma」は、新しい応力制約値を含むベクトル、すなわち、材料の荷重または荷重を取り除いた後のベクトルでなければならないことに留意されたい。\n"

# 135af0c61f0e437aa2de26248888cf21
#: ../source/userdoc/model_plasticity_small_strain.rst:7
msgid "models"
msgstr "モデル\n"

# 135af0c61f0e437aa2de26248888cf21
#: ../source/userdoc/model_plasticity_small_strain.rst:7
msgid "model bricks"
msgstr "モデル要素\n"
