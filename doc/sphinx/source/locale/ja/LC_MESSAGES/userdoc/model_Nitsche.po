# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2017 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-06-22 15:02+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

# 2a59d6b0de7548e5ae0acc28d6f8a61b
#: ../source/userdoc/model_Nitsche.rst:13
msgid "Nitsche's method for dirichlet and contact boundary conditions"
msgstr "ディリクレおよび接触境界条件に対するNitscheの方法\n"

# ded0cfbfaeae47b3a89045c969164588
#: ../source/userdoc/model_Nitsche.rst:15
msgid ""
"|gf| provides a generic implementation of Nitche's method which allows to "
"account for Dirichlet type or contact with friction boundary conditions in a"
" weak sense without the use of Lagrange multipliers. The method is very "
"attractive because it transforms a Dirichlet boundary condition into a weak "
"term similar to a Neumann boundary condition. However, this advantage is at "
"the cost that the implementation of Nitche's method is model dependent, "
"since it requires an approximation of the corresponding Neumann term. In "
"order to add a boundary condition with Nitsche's method on a variable of a "
"model, the corresponding brick needs to have access to an approximation of "
"the Neumann term of all partial differential terms applied to this variable."
" In the following, considering a variable :math:`u`, we will denote by"
msgstr ""
"|gf|  "
"Dirichletタイプまたは摩擦境界条件との接触を、ラグランジュ乗数を使用せずに弱い意味で考慮に入れることができるNitcheの方法の一般的な実装を提供する。この方法は、Dirichlet境界条件をノイマン境界条件と同様に弱い項に変換するため、非常に魅力的です。しかしながら、この利点は、対応するノイマン項の近似を必要とするため、ニッチェ法の実施がモデル依存であるというコストである。"
" "
"Nitscheの方法で境界条件をモデルの変数に追加するには、対応するブリックが、この変数に適用されるすべての偏微分項のノイマン項の近似にアクセスする必要があります。以下では、変数：算術：「u」を考慮して、\n"

# a326155aaccd4e3dafd370b196fb66dd
#: ../source/userdoc/model_Nitsche.rst:24
msgid ""
"the sum of all Neumann terms on this variable. Note that the Neumann term "
":math:`G` will often depend on the variable :math:`u` but it may also depend"
" on other variables of the model. This is the case for instance for mixed "
"formulations of incompressible elasticity. The Neumann terms depend also "
"frequently on some parameters of the model (elasticity coefficients ...) but"
" this is assumed to be contained in its expression."
msgstr ""
"この変数上のすべてのノイマン項の和。ノイマン項 :math:`G` は変数に依存することが多いことに注意してください：数学：` "
"u`しかしモデルの他の変数にも依存します。これは、例えば、非圧縮弾性の混合配合物の場合である。ノイマン項は、モデルのいくつかのパラメータ（弾力係数...）にも頻繁に依存するが、これはその表現に含まれると仮定される。\n"

# 366d38b4ee3745ccb20787a37a31a0ed
#: ../source/userdoc/model_Nitsche.rst:29
msgid ""
"For instance, if there is a Laplace term (:math:`\\Delta u`), applied on the"
" variable :math:`u`, the Neumann term will be :math:`G = \\Frac{\\partial "
"u}{\\partial n}` where :math:`n` is the outward unit normal on the "
"considered boundary. If :math:`u` represents the displacements of a "
"deformable body, the Neumann term will be :math:`G = \\sigma(u)n`, where "
":math:`\\sigma(u)` is the stress tensor depending on the consitutive law. Of"
" course, in that case :math:`G` also depends on some material parameters. If"
" additionally a mixed incompressibility brick is added with a variable "
":math:`p` denoting the pressure, the Neumann term on :math:`u` will depend "
"on :math:`p` in the following way: :math:`G = \\sigma(u)n - pn`"
msgstr ""
"例えば、ラプラス項（：math： `\\ Delta u`）が変数：math：` u`に適用される場合、ノイマン項は次のようになります：math： `G"
" = \\ Frac {\\ partial u} { \\ partial n} `ここで、math：` "
"n`は、考慮されている境界上の外側の単位法線です。もし：math： `u "
"'が変形可能なボディの変位を表すなら、ノイマン項は次のようになります：math：` G = \\ sigma（u）n`ここで：math： `\\ "
"sigma（u）`は、扶養法に基づく。もちろん、その場合：数学： "
"`G`もいくつかの重要なパラメータに依存します。さらに、混合非圧縮ブリックに、圧力を表す変数：math： "
"`p`が追加されている場合、Neumannのterm：math：` u`は次のようになります：math： `G = \\ sigma（u）n "
"-pn`\n"

# 1e04299790134f8ca9ed4906a6679a14
#: ../source/userdoc/model_Nitsche.rst:35
msgid ""
"In order to allow a generic implementation in which the brick imposing "
"Nitsche's method will work for every partial differential term applied to "
"the concerned variables, each brick adding a partial differential term to a "
"model is required to give its expression via an assembly string (weak form "
"language)."
msgstr ""
"Nitscheの方法を課しているブリックが、関連する変数に適用されるすべての偏微分項に対して機能する一般的な実装を可能にするために、モデルに部分微分項を追加する各ブリックは、アセンブリ文字列（weak"
" form言語）。\n"

# d93e724533984494a014169a6767975c
#: ../source/userdoc/model_Nitsche.rst:37
msgid ""
"These expressions are utilized in a special method of the model object::"
msgstr "これらの式は、モデルオブジェクトの特別なメソッド::\n"

# 5ea9af8db87844039a0e4d96d8c02395
#: ../source/userdoc/model_Nitsche.rst:41
msgid ""
"which allows to automatically derive an expression for the sum of all "
"Neumann terms, by scanning the expressions provided by all partial "
"differential term bricks and performing appropriate manipulations. Of course"
" it is required that all volumic bricks were added to the model prior to the"
" call of this method. The derivation of the Neumann term works only for "
"second order partial differential equations. A generic implementation for "
"higher order pde would be more complicated."
msgstr ""
"すべての部分微分項要素が提供する式を走査し、適切な操作を実行することによって、すべてのノイマン項の和に対する式を自動的に導出することを可能にする。もちろん、このメソッドを呼び出す前に、すべてのボリューム要素をモデルに追加する必要があります。ノイマン項の導出は、二次偏微分方程式に対してのみ働く。高次pdeの一般的な実装は、より複雑になります。\n"

# d40986ede22c405bb35c20548fe32c6b
#: ../source/userdoc/model_Nitsche.rst:48
msgid "Generic Nitsche's method for a Dirichlet condition"
msgstr "Dirichlet条件のための一般的なNitscheの方法\n"

# e7876911ca3740a182eb0789783e8505
#: ../source/userdoc/model_Nitsche.rst:50
msgid ""
"Assume that the variable :math:`u` is considered and that one wants to "
"prescribe the condition"
msgstr "変数：math： `u`が考慮され、条件を規定したいとします\n"

# 89f284395dab4aa2b5af7589dd0154a7
#: ../source/userdoc/model_Nitsche.rst:55
msgid ""
"on a part :math:`\\Gamma_D`  of the boundary of the considered domain. Here "
":math:`H` is considered equal to one in the scalar case or can be either the"
" identity matrix in the vectorial case either a singular matrix having only "
"1 or 0 as eigenvalues. This allow here to prescribe only the normal or "
"tangent component of :math:`u`. For instance if one wants to prescribe only "
"the normal component, :math:`H` will be chosen to be equal to :math:`nn^T` "
"where :math:`n` is the outward unit normal on :math:`\\Gamma_D`."
msgstr ""
"部分：数学：考慮する領域の境界の `\\ Gamma_D`。ここで、数学： "
"`H`は、スカラーの場合、1と等しいと見なされるか、ベクトルの場合の恒等行列か、固有値として1または0のみを持つ特異行列のいずれかです。これにより、ここでは、算術：「u」の正接または正接成分のみを処方することができます。たとえば、正規成分のみを処方したい場合、：math："
" `H`は以下のように選択されます：math：` nn ^ T`ここで、math： `n`は外向きの単位法線です： \\ Gamma_D`です。\n"

# 61ee6f96ad72430d943ceda2bd4825f6
#: ../source/userdoc/model_Nitsche.rst:60
msgid ""
"Nitsche's method for prescribing this Dirichlet condition consists in adding"
" the following term to the weak formulation of the problem"
msgstr "このディリクレ状態を処方するためのニッチェの方法は、問題の弱い処方に次の項を加えることにある\n"

# b96fada2744d41939f6c576b2b99e3b4
#: ../source/userdoc/model_Nitsche.rst:65
msgid ""
"where :math:`\\gamma` and :math:`\\theta` are two parameters of Nitsche's "
"method and :math:`v` is the test function corresponding to :math:`u`. The "
"parameter :math:`\\theta` can be chosen positive or negative. :math:`\\theta"
" = 1` corresponds to the more standard method which leads to a symmetric "
"tangent term in standard situations, :math:`\\theta = 0` corresponds to a "
"non-symmetric method which has the advantage of a reduced number of terms "
"and not requiring the second derivatives of :math:`G` in the nonlinear case,"
" and :math:`\\theta = -1` is a kind of skew-symmetric method which ensures "
"an inconditonal coercivity (which means independent of :math:`\\gamma`) at "
"least in standard situations. The parameter :math:`\\gamma` is a kind of "
"penalization parameter (although the method is consistent) which is taken to"
" be :math:`\\gamma = \\gamma_0 h_T` where :math:`\\gamma_0` is taken uniform"
" on the mesh and :math:`h_T` is the diameter of the element :math:`T`. Note "
"that, in standard situations, except for :math:`\\theta = -1` the parameter "
":math:`\\gamma_0` has to be taken sufficiently small in order to ensure the "
"convergence of Nitsche's method."
msgstr ""
"math： `\\ gamma 'と：math：` \\ theta`は、Nitscheのメソッドの2つのパラメータです。math： "
"`v`は、math：` u`に対応する形状関数です。パラメータ：math： `\\ theta 'は正または負に選択できます。 ：math： `\\ "
"theta = 1`は、標準的な状況で対称的な接線項につながるより標準的な方法に対応します：数学：` \\ theta = "
"0`は、数が減少するという利点を持つ非対称的な方法に対応します非線形の場合には数学： `G`の二次導関数を必要とせず、数学的には：\\ theta = "
"-1は非平衡保磁力を保証する一種のスキュー対称法である（これは、 math： `\\ gamma`）少なくとも標準的な状況では。パラメータ：math： "
"`\\ gamma`は一種のペナルティ・パラメタですが（メソッドは一貫していますが）、次のようになります：math：` \\ gamma = \\ "
"gamma_0 h_T`ここで、math： `\\ gamma_0`はメッシュと：math： `h_T`は要素の直径です :math:` T` 。 math： "
"`\\ theta = -1`を除く標準的な状況では、パラメータ：math：` \\ "
"gamma_0`は、Nitscheの方法の収束を確実にするために十分小さくする必要があることに注意してください。\n"

# f3ebe734ded547bf851de7b3f527672f
#: ../source/userdoc/model_Nitsche.rst:70
msgid ""
"The bricks adding a Dirichlet condition with Nitsche's method to a model are"
" the following::"
msgstr "Nitscheの方法でDirichlet条件をモデルに追加した要素は次のとおりです::\n"

# 3344d09e7c8e40a18360b611487a2969
#: ../source/userdoc/model_Nitsche.rst:80
msgid ""
"This function adds a Dirichlet condition on the variable `varname` and the "
"mesh region `region`. This region should be a boundary. `Neumannterm` is the"
" expression of the Neumann term (obtained by the Green formula) described as"
" an expression of the weak form language. This term can be obtained with "
"md.Neumann_term(varname, region) once all volumic bricks have been added to "
"the model. The Dirichlet condition is prescribed with Nitsche's method. "
"`dataname` is the optional right hand side of the Dirichlet condition. It "
"could be constant or described on a fem; scalar or vector valued, depending "
"on the variable on which the Dirichlet condition is prescribed. `gamma0name`"
" is the Nitsche's method parameter. `theta` is a scalar value which can be "
"positive or negative. `theta = 1` corresponds to the standard symmetric "
"method which is conditionnaly coercive for  `gamma0` small. `theta = -1` "
"corresponds to the skew-symmetric method which is inconditionnaly coercive. "
"`theta = 0` is the simplest method for which the second derivative of the "
"Neumann term is not necessary even for nonlinear problems. Returns the brick"
" index in the model. ::"
msgstr ""
"この関数は変数 `varname`とメッシュ領域` region`にディリクレ条件を追加します。この領域は境界でなければなりません。 "
"「Neumannterm」は、弱い形の言語の表現として記述されたノイマン用語（グリーン式によって得られる）の表現である。この用語は、すべてのボリューム要素がモデルに追加されると、md.Neumann_term（varname、region）で取得できます。ディリクレの状態はNitscheの方法で規定されています。"
" `dataname`はDirichlet状態のオプションの右側です。それは一定であるか、または女性に記述されることができます。 "
"Dirichlet条件が規定されている変数に応じて、スカラー値またはベクトル値を返します。 "
"`gamma0name`はNitscheのメソッドパラメータです。 `theta 'は正または負のスカラー値です。 `theta = "
"1`は、標準的な対称的なメソッドに対応しています。これは、` gamma0`が小さい場合に強制的に行われます。 `theta = "
"-1`は、非強制的強制的なスキュー対称方法に対応します。 `theta = "
"0`はノイマン項の二次導関数が非線形問題であっても必要でない最も単純な方法です。モデル内の要素のインデックスを返します。 ::\n"

# 535eb9fcfe1a4d6dba1e275e17311505
#: ../source/userdoc/model_Nitsche.rst:108
msgid ""
"This function adds a Dirichlet condition to the normal component of the "
"vector (or tensor) valued variable `varname` and the mesh region `region`. "
"This region should be a boundary. `Neumannterm` is the expression of the "
"Neumann term (obtained by the Green formula) described as an expression of "
"the weak form language. This term can be obtained with "
"md.Neumann_term(varname, region) once all volumic bricks have been added to "
"the model. The Dirichlet condition is prescribed with Nitsche's method. "
"`dataname` is the optional right hand side of the Dirichlet condition. It "
"could be constant or described on a fem. `gamma0name` is the Nitsche's "
"method parameter. `theta` is a scalar value which can be positive or "
"negative. `theta = 1` corresponds to the standard symmetric method which is "
"conditionnaly coercive for  `gamma0` small. `theta = -1` corresponds to the "
"skew-symmetric method which is inconditionnaly coercive. `theta = 0` is the "
"simplest method for which the second derivative of the Neumann term is not "
"necessary even for nonlinear problems. Returns the brick index in the model."
" (This brick is not fully tested) ::"
msgstr ""
"この関数は、ベクトル（またはテンソル）値変数 `varname`とメッシュ領域` "
"region`の正規成分にディリクレ条件を追加します。この領域は境界でなければなりません。 "
"「Neumannterm」は、弱い形の言語の表現として記述されたノイマン用語（グリーン式によって得られる）の表現である。この用語は、すべてのボリューム要素がモデルに追加されると、md.Neumann_term（varname、region）で取得できます。ディリクレの状態はNitscheの方法で規定されています。"
" `dataname`はDirichlet状態のオプションの右側です。それは一定であるか、または女性に記述することができます。 "
"`gamma0name`はNitscheのメソッドパラメータです。 `theta 'は正または負のスカラー値です。 `theta = "
"1`は、標準的な対称的なメソッドに対応しています。これは、` gamma0`が小さい場合に強制的に行われます。 `theta = "
"-1`は、非強制的強制的なスキュー対称方法に対応します。 `theta = "
"0`はノイマン項の二次導関数が非線形問題であっても必要でない最も単純な方法です。モデル内の要素のインデックスを返します。 "
"（この要素は完全にテストされていません）::\n"

# 88539b8a8fbb405da17fde6856ff17f4
#: ../source/userdoc/model_Nitsche.rst:136
msgid ""
"This function adds a Dirichlet condition on the variable `varname` and the "
"mesh region `region`. This version is for vector field. It prescribes a "
"condition :math:`Hu = r` where :math:`H` is a matrix field. The region "
"should be a boundary. This region should be a boundary. `Neumannterm` is the"
" expression of the Neumann term (obtained by the Green formula) described as"
" an expression of the weak form language. This term can be obtained with "
"md.Neumann_term(varname, region) once all volumic bricks have been added to "
"the model. The Dirichlet condition is prescribed with Nitsche's method. "
"CAUTION : the matrix H should have all eigenvalues equal to 1 or 0. "
"`dataname` is the optional right hand side of the Dirichlet condition. It "
"could be constant or described on a fem. `gamma0name` is the Nitsche's "
"method parameter. `theta` is a scalar value which can be positive or "
"negative. `theta = 1` corresponds to the standard symmetric method which is "
"conditionnaly coercive for  `gamma0` small. `theta = -1` corresponds to the "
"skew-symmetric method which is inconditionnaly coercive. `theta = 0` is the "
"simplest method for which the second derivative of the Neumann term is not "
"necessary even for nonlinear problems. `Hname` is the data corresponding to "
"the matrix field `H`. It has to be a constant matrix or described on a "
"scalar fem. Returns the brick index in the model. (This brick is not fully "
"tested)"
msgstr ""
"この関数は変数 `varname`とメッシュ領域` "
"region`にディリクレ条件を追加します。このバージョンはベクトルフィールド用です。それは条件を規定する :math:`Hu = r` ここで：数学：` "
"H`は行列の分野です。領域は境界でなければなりません。この領域は境界でなければなりません。 "
"「Neumannterm」は、弱い形の言語の表現として記述されたノイマン用語（グリーン式によって得られる）の表現である。この用語は、すべてのボリューム要素がモデルに追加されると、md.Neumann_term（varname、region）で取得できます。ディリクレの状態はNitscheの方法で規定されています。注意：行列Hはすべての固有値が1または0に等しくなければなりません。"
" `dataname`はDirichlet条件のオプションの右辺です。それは一定であるか、または女性に記述することができます。 "
"`gamma0name`はNitscheのメソッドパラメータです。 `theta 'は正または負のスカラー値です。 `theta = "
"1`は、標準的な対称的なメソッドに対応しています。これは、` gamma0`が小さい場合に強制的に行われます。 `theta = "
"-1`は、非強制的強制的なスキュー対称方法に対応します。 `theta = "
"0`はノイマン項の二次導関数が非線形問題であっても必要でない最も単純な方法です。 `Hname`は、マトリックスフィールド "
"'H'に対応するデータです。それは一定の行列でなければならないか、またはスカラーのfemで記述されなければならない。モデル内の要素のインデックスを返します。"
" （この要素は完全にテストされていません）\n"

# c8ea42d8dd4b4699af7cc95fdc976fa7
#: ../source/userdoc/model_Nitsche.rst:164
msgid "Generic Nitsche's method for contact with friction condition"
msgstr "摩擦条件との接触のための一般的なNitscheの方法\n"

# 7208e779b9ca407cbc8b1670e81211b5
#: ../source/userdoc/model_Nitsche.rst:166
msgid ""
"We describe here the use of Nitsch's method to prescribe a contact with "
"Coulomb friction condition in the small deformations framework. This "
"corresponds to a weak integral contact condition which as some similarity "
"with the ones which use Lagrange multipliers describe in the corresponding "
"section, see :ref:`weak_integral_contact_section`"
msgstr ""
"ここでは、小さな変形フレームワークでクーロン摩擦条件との接触を規定するNitschの方法の使用について説明します。これは弱い積分接触条件に相当し、対応する節でラグランジュ乗数を使用するものとある程度類似しているので、ref："
" `weak_integral_contact_section`を参照してください。\n"

# 9865ffbf69ad4581bd526049b6ad2b6e
#: ../source/userdoc/model_Nitsche.rst:168
msgid ""
"In order to simplify notations, let use denote by :math:`P_{n,\\mathscr{F}}`"
" the following map which corresponds to a couple of projections:"
msgstr ""
"表記法を簡略化するためには、以下を使用してください。math： `P_ {n、\\ mathscr "
"{F}}`次のマップはいくつかの予測に対応しています：\n"

# 010377c3836344a098dbadba6d6efe6e
#: ../source/userdoc/model_Nitsche.rst:173
msgid ""
"This application make the projection of the normal part of :math:`x` on "
":math:`\\Reel_-` and the tangential part on the ball of center :math:`0` and"
" radius :math:`\\mathscr{F}(x.n)_-`, where :math:`\\mathscr{F}` is the "
"friction coefficient."
msgstr ""
"このアプリケーションは：math： `x`の通常部分の投影を、math：` \\ Reel_-`と、中心のボールの接線部分：math：` "
"0`と半径：math： `\\ mathscr {F }（xn）_- `、ここで、math：` \\ mathscr {F} `は摩擦係数です。\n"

# e4e2534753ec412cba26f234f2041298
#: ../source/userdoc/model_Nitsche.rst:175
msgid ""
"Using this, and considering that the sliding velocity is approximated by "
":math:`\\alpha(u_{_T} - w_{_T})` where the expression of :math:`\\alpha` and"
" :math:`w_{_T}` depend on the time integration scheme used (see "
":ref:`weak_integral_contact_section`), Nitsche's term for contact with "
"friction reads as:"
msgstr ""
"これを使って、摺動速度を次のように近似することを考えてみましょう：math： `\\ alpha`と：math：` w_ {_ T} "
"`使用されている時間積分スキーム（ref：` "
"weak_integral_contact_section`参照）に依存して、Nitscheの摩擦接触の用語は以下のようになります：\n"

# cd26f39901164ce281efdfaac88a6e64
#: ../source/userdoc/model_Nitsche.rst:181
msgid ""
"where :math:`\\Gamma_C` is the contact boundary, :math:`G` is the Neumann "
"term which represents here :math:`\\sigma n` the stress at the contact "
"boundary and :math:`A` is the :math:`d\\times d` matrix"
msgstr ""
"ここで、math： `\\ Gamma_C`は接触境界です。：math：` G`はノーマン項で、ここでは以下を表します：math： `\\ sigma "
"n`接触境界での応力と：` A`は :math:`d \\ times d` マトリックス\n"

# 26982aba9873453aa2e211ce4b21c5bf
#: ../source/userdoc/model_Nitsche.rst:186
msgid ""
"Note that for the variant with :math:`\\theta=0` a majority of terms vanish."
msgstr "：math： `\\ theta = 0`を持つバリアントでは、大部分の項は消えることに注意してください。\n"

# cfd33ba148384b9fa467217e23b77d18
#: ../source/userdoc/model_Nitsche.rst:191
msgid ""
"The following function adds a contact condition with or without Coulomb "
"friction on the variable `varname_u` and the mesh boundary `region`.  "
"`Neumannterm` is the expression of the Neumann term (obtained by the Green "
"formula) described as an expression of the weak form language. This term can"
" be obtained with md.Neumann_term(varname, region) once all volumic bricks "
"have been added to the model. The contact condition is prescribed with "
"Nitsche's method. The rigid obstacle should be described with the data "
"`dataname_obstacle` being a signed distance to the obstacle (interpolated on"
" a finite element method). `gamma0name` is the Nitsche's method parameter. "
"`theta` is a scalar value which can be positive or negative. `theta = 1` "
"corresponds to the standard symmetric method which is conditionnaly coercive"
" for  `gamma0` small. `theta = -1` corresponds to the skew-symmetric method "
"which is inconditionnaly coercive. `theta = 0` is the simplest method for "
"which the second derivative of the Neumann term is not necessary. The "
"optional parameter `dataexpr_friction_coeff` is the friction coefficient "
"which could be any expression of the weak form language. Returns the brick "
"index in the model.::"
msgstr ""
"以下の関数は、変数 `varname_u`とメッシュ境界` region`にクーロン摩擦の有無にかかわらず接触条件を追加します。 "
"「Neumannterm」は、弱い形の言語の表現として記述されたノイマン用語（グリーン式によって得られる）の表現である。この用語は、すべてのボリューム要素がモデルに追加されると、md.Neumann_term（varname、region）で取得できます。接触条件はNitscheの方法で規定されている。剛性の障害物は、データ（dataname_obstacle）が障害物までの符号付き距離である（有限要素法で補間された）データで記述されるべきである。"
" `gamma0name`はNitscheのメソッドパラメータです。 `theta 'は正または負のスカラー値です。 `theta = "
"1`は、標準的な対称的なメソッドに対応しています。これは、` gamma0`が小さい場合に強制的に行われます。 `theta = "
"-1`は、非強制的強制的なスキュー対称方法に対応します。 `theta = "
"0`はノイマン項の二次導関数が必要でない最も単純な方法です。オプションのパラメータ "
"`dataexpr_friction_coeff`は弱形式言語の任意の表現である摩擦係数です。モデル内の要素のインデックスを返します。\n"

# fe4330243d0044a9aff6734544b1c172
#: ../source/userdoc/model_Nitsche.rst:7
msgid "models"
msgstr "モデル\n"

# fe4330243d0044a9aff6734544b1c172
#: ../source/userdoc/model_Nitsche.rst:7
msgid "model bricks"
msgstr "モデル要素\n"

# fe4330243d0044a9aff6734544b1c172
#: ../source/userdoc/model_Nitsche.rst:7
msgid "Nitsche's method"
msgstr "Nitscheの方法\n"
