# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2017 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-06-22 15:02+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

# e7ed843a529f4754aabd4bb4b63a9283
#: ../source/matlab/cmdref_gf_integ.rst:8
msgid "gf_integ"
msgstr ""

# 4b0d84f1a6ce4e3d81dae097404185bb
#: ../source/matlab/cmdref_gf_integ.rst:10
msgid "**Synopsis**"
msgstr ""

# 55d10c4e51a346baaed5825c15771622
#: ../source/matlab/cmdref_gf_integ.rst:16
msgid "**Description :**"
msgstr ""

# 6f2e543c9e4a43008a15a2ba9c0d6058
#: ../source/matlab/cmdref_gf_integ.rst:19
msgid "General constructor for integ objects."
msgstr ""

# cd6e1d1697b245088b1514dd5e3a9c72
#: ../source/matlab/cmdref_gf_integ.rst:21
msgid ""
"General object for obtaining handles to various integrations methods on "
"convexes (used when the elementary matrices are built)."
msgstr ""

# 861aee965d6f4775b5e1420db592937e
#: ../source/matlab/cmdref_gf_integ.rst:25
msgid "**Command list :**"
msgstr ""

# 6c2986c9877d481b9d910be76bf67f85
#: ../source/matlab/cmdref_gf_integ.rst:29
msgid "``I = gf_integ(string method)``"
msgstr ""

# 17cbaf3008044f4abad0dfac30e3f453
#: ../source/matlab/cmdref_gf_integ.rst:31
msgid ""
"Here is a list of some integration methods defined in getfem++ (see the "
"description of finite element and integration methods for a complete "
"reference):"
msgstr ""

# 6383dfe188b745038d3b9f046e3b64f3
#: ../source/matlab/cmdref_gf_integ.rst:35
msgid ""
"IM_EXACT_SIMPLEX(n) : Exact integration on simplices (works only with "
"linear geometric transformations and PK fem's)."
msgstr ""

# 3d0252db869745a1b973b652c1a541b0
#: ../source/matlab/cmdref_gf_integ.rst:38
msgid "IM_PRODUCT(A,B) : Product of two integration methods."
msgstr ""

# 070f74bb1e9e4fc09be0d889aa0c11c6
#: ../source/matlab/cmdref_gf_integ.rst:40
msgid "IM_EXACT_PARALLELEPIPED(n) : Exact integration on parallelepipeds."
msgstr ""

# d9b1c41170244b4f88f686adac3c9fae
#: ../source/matlab/cmdref_gf_integ.rst:42
msgid "IM_EXACT_PRISM(n) : Exact integration on prisms."
msgstr ""

# df741d7b0e79486cbb548a2605b5612d
#: ../source/matlab/cmdref_gf_integ.rst:44
msgid "IM_GAUSS1D(k) : Gauss method on the segment, order `k=1,3,...,99`."
msgstr ""

# 01c6bb8496624911877cefc00ab609e8
#: ../source/matlab/cmdref_gf_integ.rst:46
msgid ""
"IM_NC(n,k) : Newton-Cotes approximative integration on simplexes, order "
"`k`."
msgstr ""

# c96ac2d694c84b969e1bb5ffd9f7e23e
#: ../source/matlab/cmdref_gf_integ.rst:48
msgid ""
"IM_NC_PARALLELEPIPED(n,k) : Product of Newton-Cotes integration on "
"parallelepipeds."
msgstr ""

# ac3ab8d6a17f4780b247cc83736bd866
#: ../source/matlab/cmdref_gf_integ.rst:50
msgid "IM_NC_PRISM(n,k) : Product of Newton-Cotes integration on prisms."
msgstr ""

# 8624d351a7c244ec959c6360ed43b667
#: ../source/matlab/cmdref_gf_integ.rst:52
msgid ""
"IM_GAUSS_PARALLELEPIPED(n,k) : Product of Gauss1D integration on "
"parallelepipeds."
msgstr ""

# 331d282cc2df40f083642461307629ff
#: ../source/matlab/cmdref_gf_integ.rst:54
msgid "IM_TRIANGLE(k) : Gauss methods on triangles `k=1,3,5,6,7,8,9,10,13,17,19`."
msgstr ""

# 4f50782a54db418785eeb642d9e084fa
#: ../source/matlab/cmdref_gf_integ.rst:56
msgid ""
"IM_QUAD(k) : Gauss methods on quadrilaterons `k=2,3,5, ...,17`. Note that"
" IM_GAUSS_PARALLELEPIPED should be prefered for QK fem's."
msgstr ""

# b56f0174a8db4ffbb5732ea2e258a01d
#: ../source/matlab/cmdref_gf_integ.rst:59
msgid "IM_TETRAHEDRON(k) : Gauss methods on tetrahedrons `k=1,2,3,5,6 or 8`."
msgstr ""

# 046146cdcbe0458299c7a2ef24c8dfc0
#: ../source/matlab/cmdref_gf_integ.rst:61
msgid "IM_SIMPLEX4D(3) : Gauss method on a 4-dimensional simplex."
msgstr ""

# 8010dfc9508e46cc91274ea73c69a6ee
#: ../source/matlab/cmdref_gf_integ.rst:63
msgid ""
"IM_STRUCTURED_COMPOSITE(im,k) : Composite method on a grid with `k` "
"divisions."
msgstr ""

# 6da8327ed9eb4eb299490966d8a13adb
#: ../source/matlab/cmdref_gf_integ.rst:65
msgid ""
"IM_HCT_COMPOSITE(im) : Composite integration suited to the HCT composite "
"finite element."
msgstr ""

# b949e7e599494fccb759c0f668a09ebb
#: ../source/matlab/cmdref_gf_integ.rst:68
msgid "Example:"
msgstr ""

# 35bb70fcc47349bcb5fe024606ad16a2
#: ../source/matlab/cmdref_gf_integ.rst:70
msgid "I = gf_integ('IM_PRODUCT(IM_GAUSS1D(5),IM_GAUSS1D(5))')"
msgstr ""

# 300f9461232b44c785d4c3d7d1d8951c
#: ../source/matlab/cmdref_gf_integ.rst:72
msgid "is the same as:"
msgstr ""

# c7c3b5ef567b4c8788cc1824729477af
#: ../source/matlab/cmdref_gf_integ.rst:74
msgid "I = gf_integ('IM_GAUSS_PARALLELEPIPED(2,5)')"
msgstr ""

# b11e582b85c44576ae7d4d14d400bd70
#: ../source/matlab/cmdref_gf_integ.rst:76
msgid ""
"Note that 'exact integration' should be avoided in general, since they "
"only apply to linear geometric transformations, are quite slow, and "
"subject to numerical stability problems for high degree fem's."
msgstr ""

