# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2017 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-06-22 15:02+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

# 1f1cee9d03464f628a013a41615a39ba
#: ../source/python/cmdref_Precond.rst:8
msgid "Precond"
msgstr ""

# 79559b3f79844d29ad1952f61fca72f9
#: getfem.Precond:1 of
msgid "GeFEM Precond object"
msgstr ""

# 1e572a5fb89e437188f2126292df6fb5
#: getfem.Precond:3 of
msgid ""
"The preconditioners may store REAL or COMPLEX values. They accept getfem "
"sparse matrices and Matlab sparse matrices."
msgstr ""

# 70bf16b08a75474a861dad113cfbaf4b
#: getfem.Precond:7 of
msgid "General constructor for Precond objects"
msgstr ""

# b0a4ce23dab44142b9a1004f751a9cf8
#: getfem.Precond:9 of
msgid "``PC = Precond('identity')`` Create a REAL identity precondioner."
msgstr ""

# 7a9d9450ef4d477c8e2503cd8c21e54b
#: getfem.Precond:12 of
msgid "``PC = Precond('cidentity')`` Create a COMPLEX identity precondioner."
msgstr ""

# ffaa077711b7440681a9db5905ecb560
#: getfem.Precond:15 of
msgid "``PC = Precond('diagonal', vec D)`` Create a diagonal precondioner."
msgstr ""

# 5f7991030b18451bbc090ec853d4f966
#: getfem.Precond:18 of
msgid ""
"``PC = Precond('ildlt', SpMat m)`` Create an ILDLT (Cholesky) "
"preconditioner for the (symmetric) sparse matrix `m`. This preconditioner"
" has the same sparsity pattern than `m` (no fill-in)."
msgstr ""

# 9c273993da614b4daefc7209d367158e
#: getfem.Precond:23 of
msgid ""
"``PC = Precond('ilu', SpMat m)`` Create an ILU (Incomplete LU) "
"preconditioner for the sparse matrix `m`. This preconditioner has the "
"same sparsity pattern than `m` (no fill-in)."
msgstr ""

# e399d40541144a5fb00b82e0494dfc75
#: getfem.Precond:28 of
msgid ""
"``PC = Precond('ildltt', SpMat m[, int fillin[, scalar threshold]])`` "
"Create an ILDLTT (Cholesky with filling) preconditioner for the "
"(symmetric) sparse matrix `m`. The preconditioner may add at most "
"`fillin` additional non-zero entries on each line. The default value for "
"`fillin` is 10, and the default threshold is1e-7."
msgstr ""

# dff02b9cf8df4048b2eaadcd2dddf4c0
#: getfem.Precond:34 of
msgid ""
"``PC = Precond('ilut', SpMat m[, int fillin[, scalar threshold]])`` "
"Create an ILUT (Incomplete LU with filling) preconditioner for the sparse"
" matrix `m`. The preconditioner may add at most `fillin` additional non-"
"zero entries on each line. The default value for `fillin` is 10, and the "
"default threshold is 1e-7."
msgstr ""

# 94073f1636ee48ed868d9cf2a9b25e73
#: getfem.Precond:40 of
msgid ""
"``PC = Precond('superlu', SpMat m)`` Uses SuperLU to build an exact "
"factorization of the sparse matrix `m`. This preconditioner is only "
"available if the getfem-interface was built with SuperLU support. Note "
"that LU factorization is likely to eat all your memory for 3D problems."
msgstr ""

# 07b4f27f172642999a99a0d30c2a6817
#: getfem.Precond:46 of
msgid ""
"``PC = Precond('spmat', SpMat m)`` Preconditionner given explicitely by a"
" sparse matrix."
msgstr ""

# 4690471aa2e145cd9fc08877f64c0e1a
#: getfem.Precond.char:1 of
msgid "Output a (unique) string representation of the Precond."
msgstr ""

# f2e39db9dbb84b64b78b4ef6a7be70e0
#: getfem.Precond.char:3 of
msgid ""
"This can be used to perform comparisons between two different Precond "
"objects. This function is to be completed."
msgstr ""

# fcbde0ccbe384e1b85edc9060a3fc8e2
#: getfem.Precond.display:1 of
msgid "displays a short summary for a Precond object."
msgstr ""

# bfd3e5605b63435e905d5d4f31cc026f
#: getfem.Precond.is_complex:1 of
msgid "Return 1 if the preconditioner stores complex values."
msgstr ""

# b3d88dc776c54f9f8243d1d4b2a0a69d
#: getfem.Precond.mult:1 of
msgid "Apply the preconditioner to the supplied vector."
msgstr ""

# 7172155dc69246e7987553fed220c99c
#: getfem.Precond.size:1 of
msgid "Return the dimensions of the preconditioner."
msgstr ""

# 1182dbd093734667b582154b6e514269
#: getfem.Precond.tmult:1 of
msgid "Apply the transposed preconditioner to the supplied vector."
msgstr ""

# d61db35eadaf4d5686226c54d1c88af1
#: getfem.Precond.type:1 of
msgid ""
"Return a string describing the type of the preconditioner ('ilu', "
"'ildlt',..)."
msgstr ""

