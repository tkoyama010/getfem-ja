# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2017 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-06-22 15:02+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

# cd9ca785dd4f476ca132fcfb07473621
#: ../source/python/cmdref_MeshLevelSet.rst:8
msgid "MeshLevelSet"
msgstr ""

# 60ec190bea8c4fb3a5bfcf801ab4864f
#: getfem.MeshLevelSet:1 of
msgid "GeFEM MeshLevelSet object"
msgstr ""

# a18689269db44c7ab4cbeb7673b3d126
#: getfem.MeshLevelSet:3 of
msgid ""
"General constructor for mesh_levelset objects. The role of this object is"
" to provide a mesh cut by a certain number of level_set. This object is "
"used to build conformal integration method (object mim and enriched "
"finite element methods (Xfem))."
msgstr ""

# cf45c9e735124cb7889e7df1d2e51b92
#: getfem.MeshLevelSet:9 of
msgid "General constructor for MeshLevelSet objects"
msgstr ""

# 88857cf514614217879892b28490fd68
#: getfem.MeshLevelSet:11 of
msgid ""
"``MLS = MeshLevelSet(Mesh m)`` Build a new MeshLevelSet object from a "
"Mesh and returns its handle."
msgstr ""

# 4b49ab69fed2452abc0cc60431732e43
#: getfem.MeshLevelSet.adapt:1 of
msgid "Do all the work (cut the convexes with the levelsets)."
msgstr ""

# 60761f515e874caaafd53ce2b986e337
#: getfem.MeshLevelSet.adapt:3 of
msgid ""
"To initialice the MeshLevelSet object or to actualize it when the value "
"of any levelset function is modified, one has to call this method."
msgstr ""

# f9412057846a4ecf81c90ce0988eaaf6
#: getfem.MeshLevelSet.add:1 of
msgid "Add a link to the LevelSet `ls`."
msgstr ""

# a68cea2369b84c54abfc02024304f2bb
#: getfem.MeshLevelSet.add:3 of
msgid ""
"Only a reference is kept, no copy is done. In order to indicate that the "
"linked Mesh is cut by a LevelSet one has to call this method, where `ls` "
"is an LevelSet object. An arbitrary number of LevelSet can be added."
msgstr ""

# b73a829d248a4b75a21f29624b955a64
#: getfem.MeshLevelSet.add:8 of
msgid "**WARNING**"
msgstr ""

# 3f4599a0ad7d4d36b7a117ada3b6a351
#: getfem.MeshLevelSet.add:10 of
msgid "The Mesh of `ls` and the linked Mesh must be the same."
msgstr ""

# 8ada249a97d74b6e9276c5a07a1e7159
#: getfem.MeshLevelSet.char:1 of
msgid "Output a (unique) string representation of the MeshLevelSetn."
msgstr ""

# a89568b864634a06a62ca0e779093c34
#: getfem.MeshLevelSet.char:3 of
msgid ""
"This can be used to perform comparisons between two different "
"MeshLevelSet objects. This function is to be completed."
msgstr ""

# a5762358dc0649d5b2bef6c1893b846e
#: getfem.MeshLevelSet.crack_tip_convexes:1 of
msgid ""
"Return the list of convex #id's of the linked Mesh on which have a tip of"
" any linked LevelSet's."
msgstr ""

# d6883f2778ee4b3083c136eab3b6a74b
#: getfem.MeshLevelSet.cut_mesh:1 of
msgid "Return a Mesh cut by the linked LevelSet's."
msgstr ""

# 9a05b25461a04390b3621aeb68c62b4d
#: getfem.MeshLevelSet.display:1 of
msgid "displays a short summary for a MeshLevelSet object."
msgstr ""

# 441ed7e86f4846c7a8b2a1d6a305e7fd
#: getfem.MeshLevelSet.levelsets:1 of
msgid "Return a list of references to the linked LevelSet's."
msgstr ""

# c6bd11e340944643aad2cf3a73e3bf59
#: getfem.MeshLevelSet.linked_mesh:1 of
msgid "Return a reference to the linked Mesh."
msgstr ""

# ac7b65150f3c451e8de263bc84446d11
#: getfem.MeshLevelSet.memsize:1 of
msgid "Return the amount of memory (in bytes) used by the MeshLevelSet."
msgstr ""

# 11eb00ab9cf54d588fd30cb1c27455d8
#: getfem.MeshLevelSet.nb_ls:1 of
msgid "Return the number of linked LevelSet's."
msgstr ""

# 6c68a03e71c64be89f3d298e56ed64e4
#: getfem.MeshLevelSet.sup:1 of
msgid "Remove a link to the LevelSet `ls`."
msgstr ""

