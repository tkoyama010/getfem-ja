# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2017 GetFEM++ project
# This file is distributed under the same license as the GetFEM++ package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GetFEM++ 5.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-06-22 15:02+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

# 9c84ec3ba3fb460fb6924fb638a66ab9
#: ../source/project/femdesc.rst:10
msgid "The FEM description in |gf|"
msgstr ""

# a9812ab46cfb49eabfc262093be2413a
#: ../source/project/femdesc.rst:12
msgid ""
"The aim of this section is to briefly introduce the FEM description in "
"|gf| mainly in order to fix the notation used in the rest of the document"
" (definition of element, reference element, geometric transformation, "
"gradient of the geometric transformation ...)."
msgstr ""

# 6f1b08e28fa14fed9baaa32694cd6262
#: ../source/project/femdesc.rst:19
msgid "Convex structures"
msgstr ""

# d652a9c166ee44ad8579eb206bc104a8
#: ../source/project/femdesc.rst:21
msgid ""
"Finite element methods are defined on small convex domains called "
"elements. The simplest element on which a finite element method can be "
"defined is a segment (simplex of dimension 1), other possibilities are "
"triangles, tetrahedrons (simplices of dimension 2 and 3), prisms, "
"parallelepiped, etc. In |gf|, a type of element (for us, a convex) is "
"described by the object |bg_cs| defined in the file "
":file:`bgeot_convex_structure.h`."
msgstr ""

# 785ade6b474d453e99f41390252e81a5
#: ../source/project/femdesc.rst:28
msgid ""
"It describes only the structure of the convex not the coordinates of the "
"vertices. This structure is not to be manipulated by itself, because it "
"is not necessary that more than one structure of this type describe the "
"same type of convex. What will be manipulated is a pointer on such a "
"descriptor which has to be declared with the type |bg_pcs|"
msgstr ""

# 2eb7f80cb7754b2382e405e22d5afb86
#: ../source/project/femdesc.rst:34
msgid ""
"The following functions give a pointer onto the descriptor of the usual "
"type of elements:"
msgstr ""

# 61768f5debfe4f7eb2bfb2ff4c161d22
#: ../source/project/femdesc.rst:39
msgid "description of a simplex of dimension ``d``."
msgstr ""

# fd1576acf86f43c9930d4a9ecea03232
#: ../source/project/femdesc.rst:43
msgid "description of a parallelepiped of dimension ``d``."
msgstr ""

# c94c8d29ee8945e799100c095dfff86f
#: ../source/project/femdesc.rst:47
msgid "description of the direct product of ``p1`` and ``p2``."
msgstr ""

# a4752dd42dd342008dba56647c530bf1
#: ../source/project/femdesc.rst:51
msgid "description of a prism of dimension ``d``"
msgstr ""

# 77dab1b811af49c5b7e92958c6f58c32
#: ../source/project/femdesc.rst:53
msgid ""
"For instance if one needs the description of a square, one can call "
"equivalently::"
msgstr ""

# 66204175dc8548ccb898a38528af90f4
#: ../source/project/femdesc.rst:58
msgid "or::"
msgstr ""

# 63dbeb30523f4264bbd0e658b51a89e4
#: ../source/project/femdesc.rst:63
msgid ""
"The descriptor contains in particular the number of faces "
"(``p->nb_faces()``), the dimension of the convex (``p->dim()``), for the "
"number of vertices (``p->nb_points()``). Other information is the number "
"of vertices of each face, the description of a face and the eventual "
"reference to a more basic description (used for the description of "
"geometric transformations)."
msgstr ""

# 7732a341e8054310bbd90e184dcb9950
#: ../source/project/femdesc.rst:74
msgid "usual elements"
msgstr ""

# 4d9166463daa46a9a46290cff7ab8d1e
#: ../source/project/femdesc.rst:78
msgid "Convexes of reference"
msgstr ""

# 943f2beeccb246d2ba80ec90b34d65fc
#: ../source/project/femdesc.rst:80
msgid ""
"A convex of reference is a particular real element, i.e. a structure of "
"convex with a list of vertices. It describes the particular element from "
"which a finite element method is defined. In the file "
":file:`bgeot_convex_ref.h` the object |bg_cr| makes this description. The"
" library keeps only one description for each type of convex. So what will"
" be manipulated is a pointer of type |bg_pcr| on the descriptor."
msgstr ""

# ba021389155243d0b332770c6913e039
#: ../source/project/femdesc.rst:87
msgid "The following functions build the descriptions:"
msgstr ""

# 64a2cf174bc54dd39a972cce4843e50a
#: ../source/project/femdesc.rst:91
msgid "description of the simplex of reference of dimension ``d``."
msgstr ""

# 8920f11a70824a4a881c70eab9f6c0e2
#: ../source/project/femdesc.rst:95
msgid ""
"description of the simplex of reference of dimension ``d`` with degree "
"``k`` Lagrange grid."
msgstr ""

# fc91ecaea55c4bafb4a1fc98118f207b
#: ../source/project/femdesc.rst:100
msgid "description of the direct product of two convexes of reference."
msgstr ""

# 478dd598431142be93e2106d88c74d96
#: ../source/project/femdesc.rst:104
msgid "description of the parallelepiped of reference of dimension ``d``."
msgstr ""

# 7baa93869f434140b752ac51e1b70d42
#: ../source/project/femdesc.rst:106
msgid ""
"The vertices correspond to the classical vertices for such reference "
"element. For instance the vertices for the triangle are :math:`(0, 0)`, "
":math:`(1, 0)` and :math:`(0, 1)`. It corresponds to the configuration "
"shown in Figure :ref:`dp-fig-elem`"
msgstr ""

# 84f89e969e7b401eb2447bf0388028dc
#: ../source/project/femdesc.rst:111
msgid ""
"If ``p`` is of type |bg_pcr| then ``p->structure()`` is the corresponding"
" convex structure. Thus for instance ``p->structure()->nb_points()`` "
"gives the number of vertices. The function ``p->points()`` give the array"
" of vertices and ``p->points()[0]`` is the first vertex. The function "
"``p->is_in(const base_node &pt)`` return a real which is negative or null"
" if the point ``pt`` is in the element. The function "
"``p->is_in_face(short_type f, const base_node &pt)`` return a real which "
"is null if the point ``pt`` is in the face ``f`` of the element. Other "
"functions can be found in :file:`bgeot_convex_ref.h` and "
":file:`bgeot_convex.h`."
msgstr ""

# 824982dbd55847e599bc6aa53e83609c
#: ../source/project/femdesc.rst:123
msgid "Shape function type"
msgstr ""

# c2a0274bed5441f0a6bfb21e6374d832
#: ../source/project/femdesc.rst:125
msgid ""
"Most of the time the shape functions of finite element methods are "
"polynomials, at least on the convex of reference. But, the possibility is"
" given to have other types of elements. It is possible to define other "
"kind of base functions such as piecewise polynomials, interpolant "
"wavelets, etc."
msgstr ""

# 6a238a84a12741c2a3b605d5ebed9c61
#: ../source/project/femdesc.rst:130
msgid ""
"To be used by the finite element description, a shape function type must "
"be able to be evaluated on a point (``a = F.eval(pt)``, where ``pt`` is a"
" ``base_node``) and must have a method to compute the derivtive with "
"respect to the ith variable (``F.derivative(i)``)."
msgstr ""

# d98120ac72aa47979435d1d6ba775474
#: ../source/project/femdesc.rst:135
msgid ""
"For the moment, only polynomials and piecewise polynomials are defined in"
" the files :file:`bgeot_poly.h` and :file:`bgeot_poly_composite.h`."
msgstr ""

# 19c13a1a97cd4b4eb31219080af5fdbe
#: ../source/project/femdesc.rst:141
msgid "Geometric transformations"
msgstr ""

# e8ec539cbe0448a4ad6db7242fdf7788
#: ../source/project/femdesc.rst:148
msgid "geometric transformation"
msgstr ""

# 2ce5a55924b844ea913a65cec594c546
#: ../source/project/femdesc.rst:150
msgid "A geometric transformation is a polynomial application:"
msgstr ""

# d9a7aaa3cbbf4b7f91b7eb8f650f4545
#: ../source/project/femdesc.rst:156
msgid ""
"which maps the reference element :math:`\\widehat{T}` to the real element"
" :math:`T`. The geometric nodes are denoted:"
msgstr ""

# 0c07d14d935c4396ab4c16cf20c6e953
#: ../source/project/femdesc.rst:163
msgid ""
"The geometric transformation is described thanks to a :math:`n_g` "
"components polynomial vector (In fact, as an extention, non polynomial "
"geometric transformation can also be supported by |gf|, but this is very "
"rarely used)"
msgstr ""

# 8de2673bfedf4adebb36f8c1226c1e2a
#: ../source/project/femdesc.rst:171
msgid "such that"
msgstr ""

# e957e197e7564e5ab3b96bbc80b76537
# e249a56a72914c20b276933469824862
#: ../source/project/femdesc.rst:177 ../source/project/femdesc.rst:250
msgid "Denoting"
msgstr ""

# 106649e965b844aea57d3a15116a59c0
#: ../source/project/femdesc.rst:183
msgid ""
"the :math:`N\\times n_g` matrix containing of all the geometric nodes, "
"one has"
msgstr ""

# c945de6723214cdc9295dc5ec4429f4b
#: ../source/project/femdesc.rst:189
msgid "The derivative of :math:`\\tau` is then"
msgstr ""

# 9e26689769dc45ae862b3650a79a50c1
#: ../source/project/femdesc.rst:195
msgid ""
"where :math:`K(\\widehat{x}) = \\nabla\\tau(\\widehat{x})` is a "
":math:`N\\times P` matrix and :math:`\\nabla {\\cal N}(\\widehat{x})` a "
":math:`n_g\\times P` matrix. The (transposed) pseudo-inverse of "
":math:`\\nabla\\tau(\\widehat{x})` is a :math:`N\\times P` matrix denoted"
" :math:`B(\\widehat{x})`:"
msgstr ""

# 5e32b55b1e8e4b28a9e34141aaae79ed
#: ../source/project/femdesc.rst:204
msgid ""
"Of course, when :math:`P=N`, one has "
":math:`B(\\widehat{x})=K(\\widehat{x})^{-T}`."
msgstr ""

# b32d12022d3f40158f3ef307221fa497
#: ../source/project/femdesc.rst:206
msgid ""
"Pointers on a descriptor of a geometric transformation can be obtained by"
" the following function defined in the file "
":file:`bgeot_geometric_trans.h`::"
msgstr ""

# 22028a0b37dc4ec991eaef3275e0908f
#: ../source/project/femdesc.rst:211
msgid "where ``\"name of trans\"`` can be chosen among the following list."
msgstr ""

# b030c14b1695485484e2bb770575341d
#: ../source/project/femdesc.rst:213
msgid "``\"GT_PK(n,k)\"``"
msgstr ""

# 7bfc48482107430aa8d36f579a95ea0b
#: ../source/project/femdesc.rst:215
msgid ""
"Description of the simplex transformation of dimension ``n`` and degree "
"``k`` (Most of the time, the degree 1 is used)."
msgstr ""

# 1dc61654a9554dae97c1a84f0e04b5b8
#: ../source/project/femdesc.rst:218
msgid "``\"GT_QK(n,k)\"``"
msgstr ""

# 89b0e8b68ace40e9a7cbe4b3b9b41993
#: ../source/project/femdesc.rst:220
msgid ""
"Description of the parallelepiped transformation of dimension ``n`` and "
"degree ``k``."
msgstr ""

# ca5c4ab35be74c63976f02471ddc08b4
#: ../source/project/femdesc.rst:223
msgid "``\"GT_PRISM(n,k)\"``"
msgstr ""

# 53ca6908b2894c22b7eac42de4cc6464
#: ../source/project/femdesc.rst:225
msgid ""
"Description of the prism transformation of dimension ``n`` and degree "
"``k``."
msgstr ""

# 06d2079cb3084b4aa30f5e85f4029e20
#: ../source/project/femdesc.rst:227
msgid "``\"GT_PRODUCT(a,b)\"``"
msgstr ""

# ce0b8c4117d24f04a3b4fbd5f4525267
#: ../source/project/femdesc.rst:229
msgid ""
"Description of the direct product of the two transformations ``a`` and "
"``b``."
msgstr ""

# 650d2afbe18c454188d384466674137d
#: ../source/project/femdesc.rst:231
msgid "``\"GT_LINEAR_PRODUCT(a,b)\"``"
msgstr ""

# c72a56a75fd047a1be9f89178d87905f
#: ../source/project/femdesc.rst:233
msgid ""
"Description of the direct product of the two transformations ``a`` and "
"``b`` keeping a linear transformation (this is a restriction of he "
"previous function). This allows, for instance, to use exact integrations "
"on regular meshes with parallelograms."
msgstr ""

# 80cc41c65e074b6c922e035e272338f4
#: ../source/project/femdesc.rst:240
msgid "Finite element methods description"
msgstr ""

# dc1b6aac685d457b9785a675e35f5235
#: ../source/project/femdesc.rst:242
msgid ""
"A finite element method is defined on a reference element "
":math:`\\widehat{T}\\subset\\Reel^P` by a set of :math:`n_d` nodes "
":math:`a^i` and corresponding base functions"
msgstr ""

# a2320d6fe5ff4c5cb09b2c1efdf9c139
#: ../source/project/femdesc.rst:256
msgid ""
"a supplementary linear transformation is allowed for the real base "
"function"
msgstr ""

# 70a2571a912840679030a610132324b7
#: ../source/project/femdesc.rst:262
msgid ""
"where :math:`M` is a :math:`n_d \\times n_d` matrix possibly depending on"
" the geometric transformation (i.e. on the real element). For basic "
"elements as Lagrange elements this matrix is the identity matrix (it is "
"simply ignored). In this case, we will say that the element is "
":math:`\\tau`-equivalent."
msgstr ""

# 1aaadcd8787643e2b8b90fb8f517022d
#: ../source/project/femdesc.rst:267
msgid ""
"This approach allows to define hermite elements (Argyris for instance) in"
" a generic way, even with non linear transformations (i.e. mainly for "
"curved boundaries). We denote :math:`[\\widehat{\\varphi}(\\widehat{x})]`"
" the :math:`n_d \\times Q` matrix whose ith line is "
":math:`(\\widehat{\\varphi})^i(\\widehat{x})`. Whis this notation, for a "
"function is defined by"
msgstr ""

# a166801221334f15b6ec2edea223f8a0
#: ../source/project/femdesc.rst:277
msgid "one has"
msgstr ""

# 441dab3d12e844bbb6bb11ebc9db879b
#: ../source/project/femdesc.rst:283
msgid ""
"where :math:`\\alpha` is the vector whose ith component is "
":math:`\\alpha_i`."
msgstr ""

# fbd16427bcf34044b06f7de103f88c47
#: ../source/project/femdesc.rst:285
msgid ""
"A certain number of description of classical finite element method are "
"defined in the file :file:`getfem_fem.h`. See :ref:`ud-appendixa` for an "
"exhaustive list of available finite element methods."
msgstr ""

# 32cd75122416412ea96c608b4fd9d559
#: ../source/project/femdesc.rst:289
msgid ""
"A pointer to the finite element descriptor of a method is obtained using "
"the function::"
msgstr ""

# 3656fb43adc84f9186dc433ed290b564
#: ../source/project/femdesc.rst:294
msgid ""
"We refer to the file :file:`getfem_fem.cc` for how to define a new finite"
" element method."
msgstr ""

